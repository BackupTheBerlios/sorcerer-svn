# Even if the website says version 3.2
# Both the directory name and tarball name have 32
# Therefore, the released version of cdf is 32 :p
# If download does not work, make sure .curlrc has --disable-epsv
# Must check for new releases manually.

CURL_PARAM=--disable-epsv

    stable 33_0 32_1 32
    secure 32_1
   require ncurses
  optional jdk      -java_api '' to make CDF Java API available
  optional xerces-j ''        '' to enable CDFML, i.e. dumping CDF to XML
  category data science
 attribute library new
 attribute multilib-fail
    source ftp://cdaweb.gsfc.nasa.gov/pub/cdf/dist/cdf$VERSION/linux/cdf$VERSION-dist-all.tar.gz
      home http://cdf.gsfc.nasa.gov/
      docs http://cdf.gsfc.nasa.gov/html/CDF_docs.html
  estimate 200
      desc 'library for CDF data format
cdf is a library for the Common Data Format (CDF)
created by National Space Science Data Center (NSSDC).
CDF is self-describing data abstraction for the storage
and manipulation of multidimensional data
in a discipline independent fashion.
Although CDF has its own internal self describing format,
it consists of more than just a data format.
CDF is a scientific data management package 
(known as the CDF Library)
which allows programmers and application developers
to manage and manipulate scalar, vector,
and multi-dimensional data arrays.
The irony of the term FORMAT is that the actual data format
which CDF utilizes is completely transparent to the user
and accessible through a consistent set of interface
(known as the CDF Interface) routines.
Therefore, programmers are not burdened with performing
low level I/Os to physically format and unformat the data file.'

build(){

 make_java_api(){
  if echo $OPTS | grep -q java_api ; then
   echo "--> Compiling java_api"

   CDF_BASE=$(pwd)/src
   JAVA_INC=/opt/jdk/include
   if ! [[ -d $JAVA_INC ]]; then
    echo "ERROR: Directory $JAVA_INC is missing"
    return 1
   fi

   cd cdfjava/jni &&
   gcc -c cdfNativeLibrary.c -I${CDF_BASE}/include -I$JAVA_INC \
       -fPIC -I$JAVA_INC/linux -o cdfNativeLibrary.o &&
   ld  -shared cdfNativeLibrary.o -o ../lib/libcdfNativeLibrary.so \
       -L$CDF_BASE/lib -lc -lm -lcdf &&
   cd  -
  else 
   echo "WARNING: java_api not compiled"
  fi
 }

 cdf2xml(){
  C2X_DIR=$DESTDIR/usr/sbin
  CDFPATH=/usr/share/$SPELL
  XERCES=/usr/share/xerces-j

  ! [[ -d $C2X_DIR ]] && mkdir -vp $C2X_DIR

  cat > $C2X_DIR/cdf2xml << EOF
#!/bin/bash

export CLASSPATH=\${CLASSPATH}:.:${CDFPATH}/classes/cdfjava.jar:${CDFPATH}/cdfml/cdfml.jar:${XERCES}/xercesImpl.jar:${XERCES}/xml-apis.jar

java CDF2CDFML \$@
EOF
 
  chmod 755 $C2X_DIR/cdf2xml
 }

 install_java_api(){
  if echo $OPTS | grep -q java_api ; then
   echo "--> Installing java_api"
   CLASS_DIR=$DESTDIR/usr/share/$SPELL/classes
   CDFML_DIR=$DESTDIR/usr/share/$SPELL/cdfml
   LIB_DIR=$DESTDIR/usr/lib

   ! [[ -d $CLASS_DIR ]] &&  mkdir -vp $CLASS_DIR
   ! [[ -d $CDFML_DIR ]] &&  mkdir -vp $CDFML_DIR
   ! [[ -d $LIB_DIR ]]   &&  mkdir -vp $LIB_DIR
   cdf2xml
   install -vm 644 cdfjava/classes/cdfjava.jar $CLASS_DIR
   install -vm 755 cdfjava/lib/libcdfNativeLibrary.so $LIB_DIR
   install -vm 644 cdfjava/cdfml/* $CDFML_DIR
  else
   echo "WARNING: java_api not installed"
  fi
 }

 make OS=linux ENV=gnu all &&
 make_java_api  &&
 make    test   &&
 make    install \
         INSTALLDIR=$DESTDIR/usr &&
 install_java_api &&
 if   [[ $HOSTTYPE == x86_64   ]]; then
  if  [[ $CFLAGS   =~ -m32     ]]; then mv $DESTDIR/usr/lib{,32}
                                   else mv $DESTDIR/usr/lib{,64}
   if [[ -d $DESTDIR/usr/lib32 ]]; then mv $DESTDIR/usr/lib{32,}; fi
  fi
 fi
}
