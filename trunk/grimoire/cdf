# Even if the website says version 3.2
# Both the directory name and tarball name have 32
# Therefore, the released version of cdf is 32 :p
# If download does not work, make sure .curlrc got --disable-epsv
    VERSION=( 32 )
   CATEGORY='data science'
  ATTRIBUTE='library new'
     SOURCE="cdf$VERSION/linux/cdf${VERSION}-dist-all.tar.gz"
   HOMEPAGE='http://cdf.gsfc.nasa.gov/'
        URL='ftp://cdaweb.gsfc.nasa.gov/pub/cdf/dist/'
	REQ=( 'ncurses'
              'jdk:-java_api::to make CDF Java API available'
              'xerces-j:::to enable CDFML, i.e. dumping CDF to XML' )
   ESTIMATE='230'
       DESC='cdf is a library for CDF data format
cdf is a library for the Common Data Format (CDF)
created by National Space Science Data Center (NSSDC).
CDF is self-describing data abstraction for the storage
and manipulation of multidimensional data
in a discipline independent fashion.
Although CDF has its own internal self describing format,
it consists of more than just a data format.
CDF is a scientific data management package 
(known as the CDF Library)
which allows programmers and application developers
to manage and manipulate scalar, vector,
and multi-dimensional data arrays.
The irony of the term FORMAT is that the actual data format
which CDF utilizes is completely transparent to the user
and accessible through a consistent set of interface
(known as the CDF Interface) routines.
Therefore, programmers are not burdened with performing
low level I/Os to physically format and unformat the data file.'

build() {

make_java_api() {
  if echo $OPTS | grep -q java_api ; then
    echo "--> Compiling java_api"

    CDF_BASE=$(pwd)/src
    JAVA_INC=/opt/jdk/include
    if [ ! -d $JAVA_INC ]; then
	echo "ERROR: Directory $JAVA_INC is missing"
	return 1
    fi

    cd cdfjava/jni				&&
    gcc -c cdfNativeLibrary.c -I${CDF_BASE}/include -I${JAVA_INC}	\
        -fPIC								\
        -I${JAVA_INC}/linux -o cdfNativeLibrary.o			&&
    ld  -shared cdfNativeLibrary.o -o ../lib/libcdfNativeLibrary.so	\
        -L${CDF_BASE}/lib -lc -lm -lcdf					&&
    cd  -
  else 
    echo "WARNING: java_api not compiled"
  fi
}

cdf2xml() {
  C2X=/usr/sbin/cdf2xml
  CDFPATH=/usr/share/${SPELL}
  XERCES=/usr/share/xerces-j

  cat > $C2X << EOF
#!/bin/bash

export CLASSPATH=\${CLASSPATH}:.:${CDFPATH}/classes/cdfjava.jar:${CDFPATH}/cdfml/cdfml.jar:${XERCES}/xercesImpl.jar:${XERCES}/xml-apis.jar

java CDF2CDFML \$@
EOF
 
  chmod 0755 $C2X
}

install_java_api() {
  if echo $OPTS | grep -q java_api ; then
    echo "--> Installing java_api"
    CLASS_DIR=/usr/share/$SPELL/classes
    CDFML_DIR=/usr/share/$SPELL/cdfml

    [ ! -d $CLASS_DIR ]  &&  mkdir --verbose -p $CLASS_DIR
    [ ! -d $CDFML_DIR ]  &&  mkdir --verbose -p $CDFML_DIR
    cdf2xml  &&
    install -v -m 644  cdfjava/classes/cdfjava.jar         $CLASS_DIR	&&
    install -v -m 755  cdfjava/lib/libcdfNativeLibrary.so  /usr/lib	&&
    install -v -m 644  cdfjava/cdfml/*                     $CDFML_DIR
  else
    echo "WARNING: java_api not installed"
  fi
}

  INSTALLDIR=/usr

  case $VERSION in
    2.7)  DEFS=src/definitions/definitions
          LINE=$( grep -n "^export CDF_BASE" $DEFS.B | cut -d ":" -f 1 )
          sed  -i "${LINE},${LINE}d"	$DEFS.B
          sed  -i "${LINE}iexport CDF_BASE; CDF_BASE=$INSTALLDIR"  $DEFS.B
          LINE=$( grep -n "^setenv CDF_BASE" $DEFS.C | cut -d ":" -f 1 )
          sed  -i "${LINE},${LINE}d"	$DEFS.C
          sed  -i "${LINE}isetenv CDF_BASE $INSTALLDIR"	$DEFS.C
          LINE=$( grep -n "^export CDF_BASE" $DEFS.K | cut -d ":" -f 1 )
          sed  -i "${LINE},${LINE}d"	$DEFS.K
          sed  -i "${LINE}iexport CDF_BASE=$INSTALLDIR"	$DEFS.K  ;;
  esac

  make  OS=linux ENV=gnu all  &&
  make_java_api               &&
  make    test                &&
  prepare_install             &&
  make    install             \
          INSTALLDIR=/usr     &&
  install_java_api
}
