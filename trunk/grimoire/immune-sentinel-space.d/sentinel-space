#!/bin/bash
# Copyright 2011, 2012 by Kyle Sallee,
# All rights reserved.
# For use with the Sorcerer distribution only.

# sentinel-space attempts to maintain free space

. /etc/sorcery/config
AC=$ARCHIVE_CACHE
CC=$CCACHE_CACHE
SC=$SOURCE_CACHE
CD=$CCACHES_DIR

LOW=268435456	# 256M
MIN=134217728	# 128M

TAR='/\.tar$/p'
TGZ='/\.tar\.gz$/p;/\.tgz$/p'
BZ2='/\.tar\.bz2$/p'
FILES="$TAR;$TGZ;$BZ2"
LIM="${1:-10%}"

LC_ALL=C
TERM="dumb"
IFS=" 	
"
export IFS LC_ALL TERM
BPS=1048576

compressor(){
 case "$( file -bk "$1" )" in
      gzip*) echo gzip  ;;
     bzip2*) echo bzip2 ;;
  compress*) echo gzip  ;;
      *tar*) echo tar   ;;
 esac
}

decomp(){
 case $( compressor "$IN" ) in
  bzip2) bzip2 -cd  "$IN" | limit_io > "$TMP" ;;
   gzip) gzip  -cd  "$IN" | limit_io > "$TMP" ;;
    tar) ln         "$IN"  "$TMP" ;;
      *) rm    -f   "$IN";  false ;;
 esac
}

found(){ while read; do return ; done; return 1; }

rootname(){
 REPLY="${1%.bz2}"
 REPLY="${REPLY%.gz}"
 REPLY="${REPLY%.tar}"
 REPLY="${REPLY%.tgz}"
}

size(){
 if [ -f "$TMP" ]; then
  SIZE=$( stat -c "%s" $TMP )
  if (( SIZE > 1610612736 )); then SIZE=1610612736; fi
 else false
 fi
}

doxz(){
 size &&
 if   later
 then xz -f -M 5    --lzma2=dict=$SIZE,mf=bt4,nice=273 "$TMP"
 else xz -f -M $LIM --lzma2=dict=$SIZE,mf=bt4,nice=273 "$TMP"
 fi
}

rtmp(){ rm -f "$TMP" "$NEW"; false; }

recompress(){
 local IN OUT NEW TMP REPLY

 IN="$1"

 rootname "$1"
 TMP="$REPLY.tar.tmp"
 NEW="$REPLY.tar.tmp.xz"
 OUT="$REPLY.tar.xz"

 rm -f "$NEW" "$OUT" "$TMP"
 umask 0077
 decomp  &&
 doxz    ||
 rtmp
 umask 0022

 if [ -f "$NEW" ]; then
  mv "$NEW" "$OUT"
  chmod $( stat -c "%a" "$IN" ) "$OUT"
  touch -r "$IN" "$OUT"
  rm    -f "$IN" "$TMP" "$NEW"
 else false
 fi
}

tarballit(){
 mkdir -pvm 755  $CC
 local  tarball="$CC/${1##*/}.tar"

 if   find   "$1" -type f -printf '%P\n' |
      tar -C "$1" --no-recursion -cPT -  |
      limit_io \
       >    "$tarball.new"
 then mv    "$tarball.new" "$tarball"; rm -fr "$1"
 else rm -f "$tarball.new"
 fi
}

pendingd(){
 [ -d $CD ] &&
 find $CD -mindepth 1 -maxdepth 1 -type d |
 while read
 do    [ -f "$CAST_QUEUE/$REPLY" ] || echo "$REPLY"
 done
}

pendingf(){ find $AC/ $CC/ $SC/  -maxdepth 4 -type f | sed -n "$FILES"; }

  limited(){ pendingf | while read &&   later; do recompress "$REPLY"; done; }
reduction(){ pendingf | while read && ! later; do recompress "$REPLY"; done; }
dir_2_tar(){ pendingd | while read && ! later; do tarballit  "$REPLY"; done; }

free_bytes(){ stat -f -c '%a*%s' $1 | bc; }

full(){
 if   [ -d $1 ] && (( $( free_bytes $1 ) < $2 ))
 then logger -p syslog.crit -s -t sentinel-space -- $"Low space on $1"
 else return 1
 fi
}

waste_locales(){
 ( locale -a |
   cut -d . -f1 |
   sort -u |
   sed 's:^:/usr/share/locale/:p' |
   sed -r 's:(.*)(_.*):\1\2\n\1:'
   find /usr/share/locale -maxdepth 1 -mindepth 1 -type d
 ) | sort | uniq -u | xargs -r --max-lines=256 rm -r
}

remove_file(){
 while read
 do if (( $( free_bytes $1 ) < $2 )); then rm -f $REPLY; fi
 done
}

inside(){
 find $1 -maxdepth 1 -mindepth 1 -type $2 -printf '%T@\t%p\n' |
 sort -gr |
 cut -f2
}

waste_file(){ [ -d $1 ] && inside $1 f | oldest | remove_file "$@"; }

acad(){
 if [ -f /proc/acpi/ac_adapter/*/state ]; then local REPLY
  read < /proc/acpi/ac_adapter/*/state
  [[ $REPLY =~ on-line ]]
 fi
}

busy_old(){
 pgrep -u root "^cast$" ||
 pgrep -u root "^familiar$" ||
 pgrep -u root "^xz$"
}

busy(){ [ -d $SCG ] && grep -q . $( find $SCG -type f -name tasks ); }

later(){
 if   busy || ! acad
 then return 0
 else return 1
 fi
}

scan(){
 if full /usr/share/locale $LOW; then waste_locales; fi
 if full /usr/share/doc    $MIN; then waste_file /usr/share/doc    $MIN; fi
 if full /usr/doc          $MIN; then waste_file /usr/doc          $MIN; fi
 if full /var/cache/ccache $LOW; then waste_file /var/cache/ccache $LOW; fi

 if   full $ARCHIVE_CACHE $MIN ||
      full  $CCACHE_CACHE $MIN ||
      full  $SOURCE_CACHE $MIN
 then limited; reduction
 else          reduction
 fi

 dir_2_tar
}

main(){
 trap : SIGHUP SIGINT SIGQUIT SIGILL SIGABRT SIGSTOP SIGPIPE
 SCG=/sys/fs/cgroup/slow/sorcery/
 MBps=1
 if   [[     -x /usr/libexec/bash/sleep ]]
 then enable -f /usr/libexec/bash/sleep sleep
 fi
 while sleep 900; do scan; done
}

if   [ -f /etc/init.d/find_ir ]
then exit 0
fi

main &>/dev/null &
exit 0
