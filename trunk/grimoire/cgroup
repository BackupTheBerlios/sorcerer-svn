# Copyright Kyle Sallee 2011 through 2013
# All rights reserved.
# For use with the distribution sorcerer only!
# Additional notes are at the bottom of the spell.

with info    last   20131028
with version stable 20131028
with base    init-functions
with role    administration/boot
with trait   console solo
with info    home http://sorcerer.silverice.org
with info    cite 'cgroup setup utility
cgroup provides init-script /etc/init.d/cgroup
that mounts a cgroup file system on /sys/fs/cgroup
It also creates the top level cgroup directories.
And it sets values within those cgroups
which may be default or SA defined.

This implementation provides
individual cgroups for system services under
/sys/fs/cgroup/{fast,norm,slow,idle}/sys/$SERVICE
and individual cgroups for user owned processes within
/sys/fs/cgroup/{fast,norm,slow,idle}/user/$USER

The init-script of each service
specifies which of the 4 possible cgroups
that a service will run within.
For example kdm, gdm, xdm, and X run in
/sys/fs/cgroup/fast/sys/{kdm,gdm,xdm}
This ensures that the X server
can not be starving for processing power.

Users are allowed to migrate their processes
to different task files when
/sys/fs/cgroup/{fast,slow,idle}/user
exists.
Therefore, the SA can disallow
user migration of processes into the task file
/sys/fs/cgroup/fast/user/$USER/tasks
when
/sys/fs/cgroup/fast/user
does not exist

The preference for use as a server or workstation
can be adjusted by changing the value of
/sys/fs/cgroup/norm/{sys,user}/cpu.shares
With each at 1024 the competing load is balanced
evenly between the roles of server and workstation.

sorcery utilities such as cast, dispel, and leech
run in sub control groups of
/sys/fs/cgroup/slow/
A system with competing processes
can run /sys/fs/cgroup/slow/ as slow as 1.5% full speed.

/sys/fs/cgroup/idle/ sub control groups contain
processes that do background compression of tarballs,
cleaning, and other less than urgent roles.
A system with competing processes
can run /sys/fs/cgroup/idle/ as slow as 0.2% full speed.

This implementation is designed to be suitable
for both workstations and servers.
Almost all processing power is diverted to urgent matters
while the less urgent tasks
can run slowly when demand for processing power exceeds supply.'


build(){
 local d="$DESTDIR" s="$SCRIPT_DIR"

 icg(){
  install -dvm 700 "$d/$1"
  find             "$s/$1" -mindepth 1 -printf "%P\n" |
  tar  -C          "$s/$1" --exclude-vcs --no-recursion -cPT - |
  tar  -C          "$d/$1" -pxf -
  find             "$d/$1" -type f | xargs -r --max-lines=64 chmod 644
  find             "$d/$1" -type d | xargs -r --max-lines=64 chmod 755
  chmod        700 "$d"$1
 }

 icg /etc/cgroup
 icg /etc/cgroup.rootfs

 install -dvm 755    "$d"/{lib/cgroup,sbin,usr/{bin,share/bash-completion/completions}}/
 install  -vm 755 -t "$d"/sbin/                      "$s"/sbin/*
 install  -vm 755 -t "$d"/usr/bin/                   "$s"/bin/*
 install  -vm 755 -t "$d"/lib/cgroup/                "$s"/lib/cgroup/*
 install  -vm 755 -t "$d"/usr/share/bash-completion/completions/ "$s"/bash-completion/*
}
