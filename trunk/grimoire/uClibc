   VERSION=( "0.9.28" )
    IGNORE="pre\|rc\|^1\.2\.\|^1\.0\|locale"
  CATEGORY="development"
 ATTRIBUTE="library"
    SOURCE="uClibc-$VERSION.tar.bz2"
       URL="http://www.uclibc.org/downloads/"
  HOMEPAGE="http://www.uclibc.org"
  ESTIMATE="3300"
      DESC="uClibc is a C library for developing embedded Linux systems.
uClibc provides a uClibc library with default configuration.
uClibc is not a drop in replacement for glibc on Sorcerer."

build()  {
  local DT="default TARGET_"
  local DC="default CONFIG_"
  local  G="GENERIC_"
  local WR="-Wl,-rpath"

  case  $HOSTTYPE  in
    x86_64)  sed  -i  "s:${DT}i386:${DT}$HOSTTYPE:"  \
                  extra/Configs/Config.in
             ULC="/usr/x86-64-linux-uclibc"
             CPU_LDFLAGS="$WR,$ULC/lib $WR,$ULC/usr/lib $LDFLAGS"  ;;
     i*86)   ULC="/usr/i386-linux-uclibc"
             CPU_LDFLAGS="$WR,$ULC/lib $WR,$ULC/usr/lib $LDFLAGS"  ;;
  esac

  # because it invokes ld directly rather than through gcc.
  CPU_LDFLAGS="$(  echo  "$CPU_LDFLAGS"  |
                   tr    ',' ' ' |
                   sed   "s/-Wl//g"  )"

  # the following line fixes what appears to be a typo error
  # discovered in uClibc version 0.9.28
  sed  -i  "s:CPU_LDFLAGS-y:CPU_LDFLAGS:"  Rules.mak

  make defconfig  &&
  if      [ -d /isolinux ]  &&
        ! [ "$HOSTTYPE" == "x86_64"  ]
  then  make  "CPU_LDFLAGS=$CPU_LDFLAGS"
  else  make  "CPU_LDFLAGS=$CPU_LDFLAGS" "CPU_CFLAGS=$CFLAGS"
  fi  &&
  prepare_install  &&
  make    install
}
