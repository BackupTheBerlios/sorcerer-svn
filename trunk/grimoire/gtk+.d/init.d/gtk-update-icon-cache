#!/bin/bash
### BEGIN INIT INFO
# Default-Mode: 510
# Required-Stop: kexec $local_fs root-ro udev
# Should-Stop: tmp
# Default-Stop: 0 6
# Short-Description: Updates the icon cache
### END INIT INFO

# installed by both gtk+ and gtk+-v3

[ -f /usr/bin/gtk-update-icon-cache ] || exit 0

. /lib/lsb/init-functions

only stop try-restart force-reload status

IC=icon-theme.cache

status(){
 find /usr/share/icons -mindepth 2 -maxdepth 2 \
      -name index.theme -printf '%h\n' |
 while read REPLY; do
  log_warning_msg "$REPLY/$IC checking"
  if ! [ -f $REPLY/$IC ] ||
     find   $REPLY -type f -newer \
            $REPLY/$IC | grep -q .
  then log_warning_msg "$REPLY/$IC not current"; return 1
  else log_success_msg "$REPLY/$IC current"
  fi
 done
}

stop(){
 find /usr/share/icons -mindepth 2 -maxdepth 2 \
      -name index.theme -printf '%h\n' |
 while read REPLY; do
  log_warning_msg "$REPLY/$IC checking"
  if ! [ -f $REPLY/$IC ] ||
     find   $REPLY -type f -newer \
            $REPLY/$IC | grep -q .
  then log_warning_msg "$REPLY/$IC not current"; echo "$REPLY"
  else log_success_msg "$REPLY$IC current"
  fi
 done |
 while read REPLY; do
  if   log_warning_msg "$REPLY/$IC Updating"; /usr/bin/gtk-update-icon-cache -f $REPLY
  then log_success_msg "$REPLY/$IC Updated"
  else log_failure_msg "$REPLY/$IC Update failed"
  fi
 done
}

force_reload(){
 find /usr/share/icons -mindepth 2 -maxdepth 2 \
      -name index.theme -printf '%h\n' |
 while read REPLY; do
  if   log_warning_msg "$REPLY/$IC Updating"; /usr/bin/gtk-update-icon-cache -f $REPLY
  then log_success_msg "$REPLY/$IC Updated"
  else log_failure_msg "$REPLY/$IC Update failed"
  fi
 done
}

try_restart(){ stop; }
