with info    edit 20131211
# version override on libkcompactdisc

# what requires nepomuk-widgets?

# always skip the x.y.0 updates

# Notes about problems and solutions.

# if jackd can not be started by qjackctl
# re-configure it to begin without real-time priority.

# If .xsession-errors  has errors about io-slave protocol file not being found
# then as the user:
# $ rm -f ~/.kde/share/config/ksycoca
# $ rm -r /var/tmp/kdecache-$USERNAME/ksyscoca
# $ kbuildsycoca4

# The missing icon pictures for Home Trash and so forth
# is because they are leftover from KDE 3.x in ~/Desktop
# Removing them is safe.

if [[ -z $VERSION ]]; then
with version   stable 4.12.0 4.11.4 4.11.3
with info    good 20131221
with info    last 20131219
fi

if [ -z "${TRAIT[library]}" ]; then
with also    -DCMAKE_INSTALL_PREFIX:PATH=/usr
fi
with also    -DCMAKE_SKIP_BUILD_RPATH:BOOL=TRUE
with also    -DCMAKE_BUILD_TYPE=Release
with also    -DCMAKE_VERBOSE_MAKEFILE:BOOL=TRUE

with trait   kde4
with info    home http://www.kde.org
with info    docs http://docs.kde.org/
with info    mail http://www.kde.org/support/mailinglists/

case $TECHNIC in
    kde-v4)
with role    profile
with trait   console
with base    kdeartwork-v4 kde-baseapps kde-runtime kde-wallpapers kde-workspace
with base    konsole oxygen-icons
# kdegraphics-strigi-analyzer commented out since strigi is broke
#with base    kdegraphics-strigi-analyzer

with elect   kde-l10n
with elect   kaccessible
with elect   kdeadmin
with elect   kdeedu
with elect   kdegames
with elect   kdegraphics
with elect   kdenetwork
with elect   kdepim-v4
with elect   kdeplasma-addons-v4
with elect   kdesdk
with elect   kdetoys
with elect   kdeutils
with elect   kdewebdev-v4
with elect   kcoloredit
## kfax broke
#with elect   kfax
with elect   kmldonkey
with elect   kscd
with elect   ksnapshot
with elect   ktorrent
with elect   print-manager
with elect   qjackctl
with config  /usr/share/config/
with config  /usr/share/config.kcfg/

with clash   ksecrets kdeadmin-v4 kdemultimedia-v4 kdebase-v4 kdebase-runtime-v4 kdebase-workspace-v4 kdeedu-v4 kdegraphics-v4 kdenetwork-v4 kdeutils-v4 kdeaccessibility-v4 kde-path-v4 kdesdk-v4 kdetoys-v4

# extragear-plasma last release was 4.0.2? no 4.0.3 release?
#            'extragear-plasma:::for additional plasma apps/themes'
#            'kpovmodeler:::broken'
#            'ligature:::broken'
with info    cite 'K, version 4.x, desktop environment.
It combines ease of use, contemporary
functionality and outstanding graphical design.
KDE is a completely new desktop, incorporating
a large suite of applications.
While KDE includes a window manager, file manager,
panel, control center and many other components
that one would expect to be part of a contemporary
desktop environment, the true strength of this
exceptional environment lies in the
interoperability of its components.' ;;

 kde*-v4)
with source    stable $KDE_URL   stable/$VERSION/src/${TECHNIC%-v4}-$VERSION.tar.xz
with source  unstable $KDE_URL unstable/$VERSION/src/${TECHNIC%-v4}-$VERSION.tar.bz2 ;;
esac

kde_build(){ (
with also -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python2

 if  [[ $HOSTTYPE == x86_64 ]]; then
  if [[ $CFLAGS   =~ -m32   ]]; then
   export            PATH=/opt/32bit/usr/bin:$PATH
   export PKG_CONFIG_PATH=/opt/32bit/usr/lib/pkgconfig:/usr/lib/pkgconfig
   export         KDEDIRS=/opt/32bit/usr
with also    -DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=TRUE
with also    -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=TRUE
with also    -DCMAKE_INSTALL_PREFIX:PATH=/opt/32bit/usr
with also    -DCMAKE_INSTALL_RPATH:PATH=/opt/32bit/usr/lib
   ARCH=i686
  else
#  export            PATH=/usr/bin:$PATH
#  export PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/lib64/pkgconfig
   OPTS+=' -DCMAKE_INSTALL_PREFIX:PATH=/usr'
   OPTS+=' -DLIB_SUFFIX:STRING=64'
   ARCH=$HOSTTYPE
with also    -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=FALSE
with also    -DCMAKE_SKIP_RPATH:BOOL=TRUE
  fi
 else
# export      PATH="/usr/bin:$PATH"
# export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/lib/pkgconfig
  OPTS+=' -DCMAKE_INSTALL_PREFIX:PATH=/usr'
  ARCH=$HOSTTYPE
with also    -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=FALSE
with also    -DCMAKE_SKIP_RPATH:BOOL=TRUE
 fi

 if    [ ${TRAIT[multilib-concurrent]} ]; then
  if   [ $m32 ]
  then mkdir -p build.32; cd build.32
  else mkdir -p build.64; cd build.64
  fi
 else
  mkdir -p build
  cd       build
 fi

 cmake $OPTS .. &&
 make V=1 install "DESTDIR=$DESTDIR"
) }

build(){ 
 if   [[ $TECHNIC == kde-v4 ]]
 then default_build
 else kde_build
 fi
}
