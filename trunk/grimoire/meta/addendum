old_optimize()  {

  check_for()  {

    if    [  -f  $CONFIG_LOGS/$BSPELL/$1  ]
    then  cat    $CONFIG_LOGS/$BSPELL/$1
    elif  [  -f  $CONFIG_LOGS/DEFAULT/$GCC_VER/$1  ]
    then  cat    $CONFIG_LOGS/DEFAULT/$GCC_VER/$1
    elif  [  -f  $CONFIG_LOGS/DEFAULT/default/$1  ]
    then  cat    $CONFIG_LOGS/DEFAULT/default/$1
    fi

  }

  HARDWARE=$(  check_for  HARDWARE  )
  OPTIMIZE=$(  check_for  OPTIMIZE  )
     DEBUG=$(  check_for  DEBUG     )
   WARNING=$(  check_for  WARNING   )
    CFLAGS=$(  check_for  CFLAGS    )
  CXXFLAGS=$(  check_for  CXXFLAGS  )

  OPTIMIZE="${OPTIMIZE:=-Os}"

    CFLAGS="$HARDWARE $OPTIMIZE $DEBUG $WARNING $CFLAGS"
  CXXFLAGS="$HARDWARE $OPTIMIZE $DEBUG $WARNING $CXXFLAGS"
  unset      HARDWARE  OPTIMIE   DEBUG  WARNING

}


if  !  [  -d  /etc/sorcery/cpref  ];  then
  cp  -a  $GRIMOIRE/meta/cpref  /etc/sorcery/cpref
  rm  -rf                       /etc/sorcery/cpref/CVS
  old_optimize
  CPC=/etc/sorcery/cpref/custom
  echo  "export    CFLAGS=\"$CFLAGS\""                      >   $CPC
  echo  "export  CXXFLAGS=\"$CXXFLAGS\""                    >>  $CPC
  echo  "export      PATH=\"/opt/gcc/current/bin:\$PATH\""  >>  $CPC
  chmod  a+x  $CPC
  ln      -s  custom  /etc/sorcery/cpref/default
fi


if  !  spell_installed   coreutils;  then
  mkdir  -p  $CAST_QUEUE
  touch      $CAST_QUEUE/coreutils
fi


# remove old queues
rm  -f  /var/log/sorcery/queue/install
rm  -f  /var/log/sorcery/queue/remove
true
