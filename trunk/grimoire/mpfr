with version stable 3.1.2 3.1.1 3.1.0
with base    gmp
with also    --enable-static=no
with role    mathematics
with trait   library makej multilib-concurrent
with trait   no_patcher solo
with source  http://www.mpfr.org/mpfr-current/mpfr-$VERSION.tar.xz
case $VERSION in
 3.1.0)
with source  http://www.mpfr.org/mpfr-current/patch01
with source  http://www.mpfr.org/mpfr-current/patch02
with source  http://www.mpfr.org/mpfr-current/patch03
with source  http://www.mpfr.org/mpfr-current/patch04
with source  http://www.mpfr.org/mpfr-current/patch05
with source  http://www.mpfr.org/mpfr-current/patch06
with source  http://www.mpfr.org/mpfr-current/patch07
with source  http://www.mpfr.org/mpfr-current/patch08
with source  http://www.mpfr.org/mpfr-current/patch09
with source  http://www.mpfr.org/mpfr-current/patch10 ;;
esac
with info    last 20130316
with info    home http://www.mpfr.org
with info    cite 'C library for mulitple-precision computations
MPFR is a C library for multiple-precision floating-point
computations with exact rounding (also called correct rounding).
It is based on the GMP multiple-precision library.
The main goal of MPFR is to provide a library for
multiple-precision floating-point computation which
is both efficient and has a well-defined semantics.
It copies the good ideas from the ANSI/IEEE-754 standard
for double-precision floating-point arithmetic (53-bit mantissa).'

#build(){
# if ! [[ $HOSTTYPE == x86_64 ]] || ! [[ $CFLAGS =~ -m32 ]]; then
#  echo "Applying 10 patches to mpfr version 3.1.0 source"
#  declare -i CX=1
#  while [     -n    "${SOURCE[$CX]}" ]
#  do    patch -p1 < "${SOURCE[$CX]}"; (( CX++ ))
#  done
# fi
# default_build
#}

current(){
 case $VERSION in
  3.1.0) grep -qx "Applying 10 patches to mpfr version 3.1.0 source" $COMPILE_LOGS/mpfr ;;
 esac
}
