    stable 4.3.3 4.3.2 4.3.1 4.3.0
    secure 4.3.1
   require binutils coreutils mpfr
  category development/compiler
 attribute console library solo
#       url $GNU_URL
#    source gcc/gcc-$VERSION/gcc-$VERSION.tar.bz2
    source ftp://gcc.gnu.org/pub/gcc/releases/gcc-$VERSION/gcc-$VERSION.tar.bz2
  homepage http://gcc.gnu.org
  estimate 13000
      desc 'gcc is the GNU compiler collection.
gcc - GNU Compiler Collection.
The GNU Compiler Collection is a suite of compilers
that compile C, C++, Objective C, Fortran, Java,
and Ada for a wide variety of architectures.'

configure(){
select_compilers(){

 TITLE='Additional Compiler Selection Menu'
 HELP='Key: [X] = build, [ ] = exclude. You only need what you know.'

 GCC_LANGUAGES=$(
  dialog                       \
  --backtitle  "$BACKTITLE"    \
  --title      "$TITLE"        \
  --timeout    "$PROMPT_DELAY" \
  --stdout                 \
  --separate-output        \
  --no-cancel              \
  --checklist  "$HELP"     \
  18 55 10                 \
  'fortran'    ''    'off' \
  'java'       ''    'off' \
  'objc'       ''    'off' |
  tr           '\n'  ','   |
  sed          's:,$::'    )
}

save_compilers(){
 if   [[ -n $GCC_LANGUAGES ]]
 then        GCC_LANGUAGES="${GCC_LANGUAGES},c++"
 else        GCC_LANGUAGES="c++"
 fi
 echo       "GCC_LANGUAGES=\"$GCC_LANGUAGES\"" >> $SPELL_CONFIG
}


if [[ -z $GCC_LANGUAGES ]]; then
 BACKTITLE='Sorcery GCC Compiler Languages Configuration Menu'
 select_compilers &&
 save_compilers
fi
}


build(){

del_library_cache(){
 ldconfig
 rm -fr ${LIBRARY_CACHE:-/lib.old}
 ldconfig
 true
}

 finish_install(){
  cp -av  $DESTDIR/*   /
  ln -sfv /usr/bin/cpp /lib/cpp
  rm -f                /usr/bin/cc
  ln -sfv gcc          /usr/bin/cc

  if   [[ -h /usr/info/dir ]]
  then rm -f /usr/info/dir
  fi

  STRSTREAM=/usr/include/c++/$VERSION/backward/strstream

  if   [[ -f           $STRSTREAM   ]] &&
     ! [[ -f           $STRSTREAM.h ]]
  then ln -s strstream $STRSTREAM.h
  fi

  del_library_cache
  true
 }

 x86_64_fix(){
  # This fix has to placed _after_ the first make
  case $HOSTTYPE in
   x86_64)
    case $VERSION in
     3.4.4) sed -i "s:\.\./include:\.\./\.\./include:" \
            x86_64-pc-linux-gnu/libiberty/Makefile ;;
    esac ;;
  esac
 }

 ENABLE_LANGS="--enable-languages=${GCC_LANGUAGES:=c++}"

 export   CFLAGS="${CFLAGS/-fomit-frame-pointer/}"
 export CXXFLAGS="${CXXFLAGS/-fomit-frame-pointer/}"
 export CCACHE_DISABLE=1
 export PATH="$( echo "$PATH" | sed "s/[^:]*ccache://" )"


# gcc 4.2.2 still lacks clocale support for uclibc
# probably since uclibc  locale support is very new.
# Fewer patches may be required to compile gcc
# with future releases of gcc and as uclibc
# approximates more of glibc's functionality.

 case $MACHTYPE in
  *-uclibc) for  file in $SCRIPT_DIR/uClibc/*.patch
            do   patch -p1 < $file
            done
            OPTS+=" --enable-clocale=uclibc" ;;
  *-gnu)    OPTS+=" --enable-clocale=gnu"    ;;
 esac

   LCF="LIBCFLAGS=$CFLAGS"
  LCXF="LIBCXXFLAGS=$CXXFLAGS"
    BF="BOOT_CFLAGS=$CFLAGS"
  LJCF="LIBGCJ_CFLAGS=$CFLAGS"
 LJCXF="LIBGCJ_CXXFLAGS=$CXXFLAGS"
  LJJF="LIBGCJ_JAVAFLAGS=$CFLAGS"
   LDF="LDFLAGS=$LDFLAGS"

 case $VERSION in
  4.3.2) patch -p1 < $SCRIPT_DIR/gcc-4.3.0.patch ;;
  4.3.1) patch -p1 < $SCRIPT_DIR/gcc-4.3.0.patch ;;
  4.3.0) patch -p1 < $SCRIPT_DIR/gcc-4.3.0.patch ;;
 esac

# 3.2.2 now supports the DESTDIR Makefile variable
# That variable is for packagers.

 case $HOSTTYPE in
  x86_64) OPTS+=' --disable-multilib' ;;
 esac

# --enable-clocale can not be specified below since
# the libc library may not be GNU's glibc
# --enable-clocale=gnu

# --enable-threads=posix

# --prefix=/opt/gcc/$VERSION
# --prefix=/opt/gcc/current
 OPTS+="
  --build=$BUILD
  --prefix=/usr
  --enable-__cxa_atexit
  --enable-shared
  --infodir=/usr/info
  --mandir=/usr/man
  --datadir=/usr/share
  --enable-long-long
  --enable-threads
  --enable-tls
  --with-system-zlib
  --enable-libstdcxx-pch=no
  $ENABLE_LANGS"             

 DESTDIR=$BUILD_DIR/.dest

 mkdir BUILD
 cd    BUILD
 ../configure  $OPTS            &&
 make bootstrap2-lean           \
      "$BF"                     \
      "$LCF"  "$LCXF"  "$LDF"   \
      "$LJCF" "$LJCXF"          && 
 x86_64_fix                     &&
 make install  DESTDIR=$DESTDIR \
      "$BF"                     \
      "$LCF"  "$LCXF"  "$LDF"   \
      "$LJCF" "$LJCXF"          && 
 prepare_install                &&
  finish_install
}


post_install(){
 get_provider libtool | pipe_queue $CAST_QUEUE com
 if   [[ -d ${CCACHE_CACHE:=/var/cache/ccache} ]]
 then rm -f ${CCACHE_CACHE}/*
 fi
}
