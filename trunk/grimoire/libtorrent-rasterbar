# 0.16.2 might not compile
# 0.16.1 also failed to compile
# What versions of boost does this require?
# 0.16.0 actually did compile and link, hmm...
# but did not install a library file.
# 0.16.3 failed compilation
# No versions are known to compile at the moment
# Version 0.16.4 not tested

with version   stable 0.16.7 0.16.6
with version unstable 0.16.7
with base    boost openssl
with also    --enable-static=no
case $VERSION in
 0.15.*)
with base    boost-v1_45_0 ;;
esac
with role    network/file-share
with trait   library makej multilib-fail
with trait   broke
with source    stable http://libtorrent.googlecode.com/files/libtorrent-rasterbar-$VERSION.tar.gz
with source  unstable http://libtorrent.googlecode.com/files/libtorrent-rasterbar-$VERSION.tar.gz
with info    home http://www.rasterbar.com/products/libtorrent
with info    last 20130121
with info    docs http://www.rasterbar.com/products/libtorrent/manual.html
with info    mail https://lists.sourceforge.net/lists/listinfo/libtorrent-discuss
with info    vurl http://code.google.com/p/libtorrent/downloads/list
with info    cite 'c++ BitTorrent library'

build(){
 old_boost(){
  if  [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]; then
   export BOOST_INCLUDEDIR=/opt/boost/1_46_1/usr/include
   export BOOST_LIBRARYDIR=/opt/boost/1_46_1/usr/lib64
#   export LDFLAGS+=" -Wl,-rpath,/opt/boost/1_46_1/usr/lib64"
  else
   export BOOST_INCLUDEDIR=/opt/boost/1_46_1/usr/include
   export BOOST_LIBRARYDIR=/opt/boost/1_46_1/usr/lib
#   export LDFLAGS+=" -Wl,-rpath,/opt/boost/1_46_1/usr/lib"
  fi
 }

 case $VERSION in
  0.16.2) old_boost ;;
 esac

 default_build &&
 if   [[ $HOSTTYPE == x86_64   ]]; then
  if  [[ $CFLAGS   =~ -m32     ]]; then mv $DESTDIR/usr/lib{,32}
                                   else mv $DESTDIR/usr/lib{,64}
   if [[ -d $DESTDIR/usr/lib32 ]]; then mv $DESTDIR/usr/lib{32,}; fi
  fi
 fi
}

build_new1(){
 rm -f CMakeLists.txt
 if   [[ $HOSTTYPE == x86_64 ]]; then
  if  [[ $CFLAGS =~ -m32 ]]; then
with also    --with-boost=/usr --with-boost-libdir=/usr/lib
  else
with also    --with-boost=/usr --with-boost-libdir=/usr/lib64
  fi
 fi
 default_build
}

build_old(){
 rm -f CMakeLists.txt
 if  [[ $HOSTTYPE == x86_64 ]]; then
  if [[ $CFLAGS   =~ -m32   ]]; then
   export LDFLAGS+=" -Wl,-rpath,/opt/boost/1_45_0/lib"
with also    --with-boost=/opt/boost/1_45_0 --with-boost-libdir=/opt/boost/1_45_0/lib
  else
   export LDFLAGS+=" -Wl,-rpath,/opt/boost/1_45_0/lib64"
with also    --with-boost=/opt/boost/1_45_0 --with-boost-libdir=/opt/boost/1_45_0/lib64
  fi
 else
   export LDFLAGS+=" -Wl,-rpath,/opt/boost/1_45_0/lib"
with also    --with-boost=/opt/boost/1_45_0 --with-boost-libdir=/opt/boost/1_45_0/lib
 fi
 default_build
}
