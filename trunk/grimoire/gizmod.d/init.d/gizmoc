#!/bin/bash

### BEGIN INIT INFO
# Provides: gizmoc
# Required-Start: $syslog gizmod
# Should-Start:
# Required-Stop: gizmod
# Should-Stop: $syslog
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: gizmoc provides the gizmod client
# Description: gizmoc provides the gizmod client
### END INIT INFO

. /lib/lsb/init-functions

PIDF=/var/run/gizmoc.pid
SERV=/usr/bin/gizmoc
NAME=gizmoc

status()  {
  PIDS="$( pidofproc -p $PIDF $SERV )"
  if   [ -n "$PIDS" ]; then log_warning_msg "$NAME is running"; return 0
  elif [ -f "$PIDF" ]; then log_warning_msg "$NAME is dead and $PIDF exists"; return 1
                       else log_warning_msg "$NAME is not running"; return 3
  fi
}

start()  {
  log_warning_msg  "$NAME starting"
  $SERV &
  sleep 0.1
  echo  $!  >  $PIDF
  log_success_msg  "$NAME started"
# if    start_daemon     -p $PIDF $SERV
#  then  log_success_msg  "$NAME started"
#  else  log_failure_msg  "$NAME not started"
#        status
#  fi
}

stop()  {
  log_warning_msg "$NAME stopping"
  if    killproc        -p $PIDF -s 15  $SERV
  then  log_success_msg "$NAME stopped"
  else  log_failure_msg "$NAME not stopped"
        status
        return 0
  fi
}

restart() {  stop  &&  sleep  1;  start;  }

try_restart() {
  status  &&  restart
  return 0
}

help()  {
  echo "Usage: $0 {restart|try-restart|force-reload|start|status|stop}" 1>&2
}

case  $1  in
       restart)      restart  ;;
   try-restart)  try_restart  ;;
  force-reload)      restart  ;;
         start)  start        ;;
        status)  status       ;;
          stop)  stop         ;;
             *)  help         ;;
esac
