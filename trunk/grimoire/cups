# Evert reports potential problems involving
# version 1.6.2 of cups.
# If it fails to print a tst page
# then setting custom version progress to 1.6.1
# and casting cups might circumvent the problem.
# au progress cups custom 1.6.1; au begin cups
# The command on the line bove will
# cause the installed version of cups to revert to 1.6.1
# and to stay there until the SA restores it to stable version progress.
# Additionally,
# au progress cups legacy; au begin cups
# The above command will allow cups to remain at version
# specified by legacy version progress
# for as long as the legagy version progress exists.
# I will probably keep a legacy version progress for cups
# for as long as Evert reports problems with it.


# espgs is needed but can't be placed as a requirement or
# it causes a circuliar requirement loop
#            'openssl:--enable-ssl:--disable-ssl:for secure socket connections' )

# I wonder why cups 1.3.9 gained a requirement on popt
# since popt is such an old library?

# 1.5.1 breaks compilation of gkt+ and gtk+-3.0
# 1.5.2 fixes the break
# 1.6.1 seems to be newer than some
# gnome-settings-daemon version 3.4.2 and
# gnome-control-center version 3.4.2 can use.

# No luck downloading 1.6.3 on 20130716

# 1.6.3 failed to link?
# 1.6.3 attempted to compile and link using clang rather than gcc.

with info    last 20131029
with version   stable 1.7.0 1.6.4 1.6.3
#with version unstable 1.7rc1
with base    acl libpng mxml openslp popt tiff
#with base    acl libcap libpng openslp popt tiff
with elect   PAM       --enable-pam     --disable-pam     for pluggable authentication
with elect   dbus      --enable-dbus    --disable-dbus    for dbus
#with elect   gnutls    --enable-gnutls  --disable-gnutls  for SSL/TLS by gnutls
with elect   krb5   ''               ''                for kerberos 5
with elect   openldap  --enable-ldap    --disable-ldap    for LDAP
#with elect   openssl   --enable-openssl --disable-openssl for SSL/TLS by openssl
# Evert reports that firefox crashes during printing if
# openssl is providing SSL/TLS for cups

# cups verson 1.4.7 not compatible with gnutls version 2.12.7
#with base    gnutls
#      with also --disable-openssl --enable-gnutls --without-rcdir

with base    openssl
with also    --enable-openssl --disable-gnutls --without-rcdir

with role    printer
with trait   console library makej multilib-dual
with source  stable http://www.cups.org/software/$VERSION/cups-$VERSION-source.tar.bz2
with source  stable $SOURCEFORGE_URL cups/cups-drivers/0.3.6/cups-drivers-all-0.3.6.tar.gz
with source  unstable http://www.cups.org/software/$VERSION/cups-$VERSION-source.tar.bz2
with source  unstable $SOURCEFORGE_URL cups/cups-drivers/0.3.6/cups-drivers-all-0.3.6.tar.gz
with info    home http://www.cups.org/
with info    docs http://www.cups.org/documentation.php
with info    vurl http://www.cups.org/software.php
with omit    /etc/cups/certs/
with protect /etc/printcap
with vary    /usr/lib/cups/backend/smb
##           /usr/lib/cups/backend/smb is a symbolic link that points
## to file   /usr/bin/smbspool which is installed by samba and not cups
with hold    lpr
with info    cite 'portable printing layer'
   
build(){

 check_for_smb_backend(){
  if spell_installed samba; then  
   echo "Setting smb backend for cups"
   install -vm 755 -d           "$DESTDIR"/usr/lib/cups/backend/
   ln  -s ../../../bin/smbspool "$DESTDIR"/usr/lib/cups/backend/smb
  fi
 }

# if spell_installed Linux-PAM; then OPTS+=' --enable-pam'; fi
# if spell_installed openssl;   then OPTS+=' --enable-ssl'; fi

 if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
 then sed -i 's:/lib/security/pam:/lib64/security/pam:' configure
with also    --libdir=/usr/lib64
 else with also --libdir=/usr/lib
 fi

 sed -i 's:clang cc gcc:cc gcc clang:
         s: clang++ c++ g++: c++ g++ clang++:' configure

 ./configure              \
  --sysconfdir=/etc        \
  --localstatedir=/var     \
  --prefix=${PREFIX:-/usr} \
 $OPTS &&
 make  &&
 make install BUILDROOT="$DESTDIR"
 cp     -vR       usr/* "$DESTDIR"/usr &&
 cp     -vR       var/* "$DESTDIR"/var &&
 cd               var/cups/conf      &&
 install -dvm 755       "$DESTDIR"/etc/cups/ &&
 cp     -v            * "$DESTDIR"/etc/cups/ &&
 check_for_smb_backend
}
