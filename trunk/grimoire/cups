   VERSION=( "1.2.11" "1.2.10" "1.2.9" "1.2.8" "1.2.7" "1.2.6" "1.2.5" "1.2.4" "1.2.3" "1.2.2" "1.2.1" "1.2.0" )
    IGNORE="svn"
  CATEGORY="printer"
 ATTRIBUTE="console"
    SOURCE=( "cups/$VERSION/cups-$VERSION-source.tar.bz2"
             "cups/cups-drivers-all-0.3.6.tar.gz" )
  HOMEPAGE="http://www.cups.org"
      VURL="http://www.cups.org/software.php"
       URL=( "http://ftp.easysw.com/pub/
              ftp://ftp.funet.fi/pub/mirrors/ftp.easysw.com/pub/
              ftp://ftp.mpg.goe.ni.schule.de/pub/internet/printing/
              ftp://ftp.ntua.gr/pub/gnu/"
             "$SOURCEFORGE_URL" )
# espgs is needed but can't be placed as a requirement or
# it causes a circuliar requirement loop
       REQ=( "acl jpeg libpng openslp tiff"
             "Linux-PAM:--enable-pam:--disable-pam:for pluggable authentication support"
             "dbus:--enable-dbus:--disable-dbus:for dbus support"
             "heimdal:::for kerberos 5 support"
             "openldap:--enable-ldap:--disable-ldap:for ldap support" )
#            "openssl:--enable-ssl:--disable-ssl:for secure socket connections" )
      OPTS="--without-rcdir"
   EXCLUDE="/etc/cups/certs"
   PROTECT="/etc/printcap"
  EPROVIDE="lpr"
  ESTIMATE="850"
      DESC="cups provides a portable printing layer."
disable reduce
   
build() {

  sed -i "s: /lib/security:/usr/lib/security:" configure                                                                       
  check_for_smb_backend() {
    if    spell_installed  samba;  then  
      echo "Setting smb backend for cups"
      if   !  [ -e                   /usr/lib/cups/backend/smb ];
      then   ln -s /usr/bin/smbspool /usr/lib/cups/backend/smb
      fi
    fi
  }

  if  spell_installed  Linux-PAM;  then  OPTS="$OPTS  --enable-pam";  fi
  if  spell_installed  openssl;    then  OPTS="$OPTS  --enable-ssl";  fi

  default_build             &&
  cp     -R  usr/*  /usr    &&
  cp     -R  var/*  /var    &&
  cd         var/cups/conf  &&
  mkdir  -p  /etc/cups      &&
  cp     *   /etc/cups      &&
  check_for_smb_backend
}
