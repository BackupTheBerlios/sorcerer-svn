#!/bin/bash

### BEGIN INIT INFO
# Provides: nsd
# Required-Start: $network
# Required-Stop: $network
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: nsd provides an authoritative only DNS nameserver.
# Description: nsd provides an authoritative only DNS nameserver.
### END INIT INFO

. /lib/lsb/init-functions

PIDF=/var/run/nsd.pid
SERV=/usr/sbin/nsd
JAIL=/tmp/.nsd
NAME=nsd
CONF=/etc/nsd/nsd.db

status()  {
  PIDS="$( pidofproc -p $PIDF $SERV )"
  if   [ -n "$PIDS" ]; then log_warning_msg "$NAME is running"; return 0
  elif [ -f "$PIDF" ]; then log_warning_msg "$NAME is dead and $PIDF exists"; return 1
                       else log_warning_msg "$NAME is not running"; return 3
  fi
}

start()  {
  if  [  -s  $CONF  ];  then
    log_warning_msg         "$NAME about to start"
    mkdir  -p      -m 0700   $JAIL/dev
    cp     -a      /dev/log  $JAIL/dev/log  2>/dev/null
    mount  --bind  /dev/log  $JAIL/dev/log
    if     start_daemon     -p $PIDF $SERV  -t $JAIL  -u 65535.65535
    then   log_success_msg  "$NAME started"
    else   log_failure_msg  "$NAME not started"
           status
    fi
  else
    log_failure_msg  "$NAME unable to start until $CONF exists"
    exit 1
  fi

}

stop()  {
  log_warning_msg       "$NAME about to stop"
  if    killproc        -p $PIDF -s 15  $SERV
  then  log_success_msg "$NAME stopped";     umount  $JAIL/dev/log
  else  log_failure_msg "$NAME not stopped"
        status
        return 0
  fi
}

restart() {  stop  &&  sleep  1;  start;  }

try_restart() {
  status  &&  restart
  return 0
}

reload()  {
  PIDS="$( pidofproc -p $PIDF $SERV )"
  if    [ -n            "$PIDS" ]
  then  kill  -s SIGHUP  $PIDS  &&
        log_success_msg "$NAME configuration reloaded"
  fi
}

help()  {
  echo "Usage: $0 {restart|try-restart|reload|force-reload|start|status|stop}" 1>&2
}

case  $1  in
       restart)      restart  ;;
   try-restart)  try_restart  ;;
        reload)  reload       ;;
  force-reload)  reload       ;;
         start)  start        ;;
        status)  status       ;;
          stop)  stop         ;;
             *)  help         ;;
esac
