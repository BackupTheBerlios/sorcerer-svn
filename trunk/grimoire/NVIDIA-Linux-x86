# also see
# http://www.nvidia.com/Download/index.aspx?lang=en-us
# It sometimes points to newer drivers.

# 260.19.44 does not support xorg-server 1.10.0

# 285.03 is beta

   version stable 290.10 275.36 275.28 280.13 275.21 275.09.07 270.41.19 270.41.06
   version 290    290.10
   version 285    285.05.09 285.03
   version 280    280.13
   version 275    275.36 275.28 275.21 275.09.07 270.41.19 270.41.06
   version 270    270.41.19 270.41.06
   require MesaLib gtk+ libXvMC xorg-server
  category kernel
 attribute library linux-26-module multilib-fail optimize x11 x86
    source http://us.download.nvidia.com/XFree86/Linux-x86/$VERSION/NVIDIA-Linux-x86-$VERSION.run
      info last 20111122
      info home http://www.nvidia.com
      info vurl http://www.nvidia.com/object/unix.html
 freshmeat nvidiaxfree86_40drivers
      desc 'ELF 32-bit drivers and kernel module provided by NVIDIA for NVIDIA GPUs'

if   [[ $HOSTTYPE == x86_64 ]] &&
   ! [[ -f /lib/libc.so.6   ]]; then
 attribute broke
fi

build(){
 fix_install(){
  mv             $DESTDIR/usr/include      $DESTDIR/usr/nvidia
  mkdir -pvm 755 $DESTDIR/usr/include
  mv             $DESTDIR/usr/nvidia/vdpau $DESTDIR/usr/include
  mv             $DESTDIR/usr/nvidia       $DESTDIR/usr/include
  mkdir -pvm 755 $DESTDIR/etc/opengl/
  mkdir -vpm 755                           $DESTDIR/usr/lib/nvidia
  mv    -v       $DESTDIR/usr/lib/libGL.*  $DESTDIR/usr/lib/nvidia/

  if   [[ $HOSTTYPE == x86_64 ]]
  then rm -fr $DESTDIR/usr/{bin,include,man,share}
  else echo /usr/lib/nvidia  >>            $DESTDIR/etc/opengl/nvidia
  fi

# NVIDIA's wfb library can not be used by xorg and must not be installed
  rm -f $DESTDIR/usr/lib/xorg/modules/*wfb*

## libglx extension should be installed over xorg-server's libglx
# rm -f $DESTDIR/usr/lib/xorg/modules/extensions/libglx.*

  return 0
 }

 MOD_PATH=/usr/lib/xorg/modules
 PRO="$( get_provider linux-kernel )"
 if   spell_installed $PRO
 then LVER="$( installed_version $PRO  )"
 else LVER="$( available_version linux )"
 fi

 PARAMETERS="
--accept-license
--no-questions
--ui=none
--x-prefix=$DESTDIR/usr
--x-module-path=$DESTDIR/$MOD_PATH
--x-library-path=$DESTDIR/usr/lib
--opengl-prefix=$DESTDIR/usr
--installer-prefix=$DESTDIR/usr
--utility-prefix=$DESTDIR/usr
--documentation-prefix=$DESTDIR/usr
--kernel-source-path=/usr/src/linux
--kernel-install-path=$DESTDIR/lib/modules/$LVER/kernel/drivers/video
--kernel-name=$LVER
--no-runlevel-check
--no-abi-note
--no-rpms
--no-backup 
--no-network
--no-recursion
--no-x-check
--no-cc-version-check
--no-distro-scripts"

if     [[ $HOSTTYPE == x86_64 ]]; then PARAMETERS+=" --no-kernel-module"
elif ! [ -d /usr/src/linux     ]; then PARAMETERS+=" --no-kernel-module"
 echo      "/usr/src/linux is missing."
 echo "Therefore, required kernel module will not be installed."
fi

local     BUILD_DIR="$SOURCE_DIR/$SPELL/$SPELL-$VERSION"
mkdir -p $BUILD_DIR
cd       $BUILD_DIR
echo -e "#!/bin/bash\n/sbin/lsmod | grep -v \"nvidia\|rivafb\|nvidiafb\"" > $BUILD_DIR/lsmod
chmod a+x $BUILD_DIR/lsmod
export PATH=$BUILD_DIR:$PATH

mkdir -pvm 755 $DESTDIR/lib/modules/$LVER/kernel/drivers/video
mkdir -pvm 755 $DESTDIR/usr/{include,lib}

if   [[ $HOSTTYPE == x86_64 ]]
then setarch i686 sh "${SOURCE[0]}" $PARAMETERS --no-kernel-module
else              sh "${SOURCE[0]}" $PARAMETERS
fi &&

fix_install
}

current(){
 if   [[ $HOSTTYPE == x86_64 ]] && ! [[ -f $INSTALL_LOGS/NVIDIA-Linux-x86_64 ]]
 then echo NVIDIA-Linux-x86_64 | pipe_queue $CAST_QUEUE
 fi
}

# When using the dual architecture binary
# then some files install without tracking.
# When using a multilib spell for NVIDIA-Linux-x86
# then some files like /usr/lib/libnvidia-tls mysterious vanish
# prior to installation.
# Probably NVIDIA's installer deletes them.
# Attempted with both multilib-dual and without.
# Only means for flawless installation is to use 2 spells.

