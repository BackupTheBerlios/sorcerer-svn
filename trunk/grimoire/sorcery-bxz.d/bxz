#!/bin/bash
# Copyright 2008-2011 by Kyle Sallee,
# All rights reserved.
# For use with the Sorcerer distribution only.
# bxz recompresses tarballs using xz in the background
# while consuming near minimal resources
# when a box is under heavy load.

VC=/var/cache
AC=$VC/archive
CC=$VC/ccache
SC=$VC/sources

TAR='/\.tar$/p'
TGZ='/\.tar\.gz$/p;/\.tgz$/p'
BZ2='/\.tar\.bz2$/p'
FILES="$TAR;$TGZ;$BZ2"
PIDF=/var/run/bxz.pid
XZO="$1"

LC_ALL=C
TERM="dumb"
IFS=" 	
"
export IFS LC_ALL TERM

decomp(){
 local REPLY
 compressor "$1"
 case "$REPLY" in
  bzip2) bzip2 -cd $1 ;;
   gzip) gzip  -cd $1 ;;
      *) cat       $1 ;;
 esac
}

found(){ while read; do return ; done; return 1; }

compressor(){
        REPLY="$( file -bk $1 )"
 case "$REPLY" in
      gzip*) REPLY=gzip  ;;
     bzip2*) REPLY=bzip2 ;;
  compress*) REPLY=gzip  ;;
      *tar*) REPLY=tar   ;;
 esac
}

rootname(){
 REPLY="${1%.bz2}"
 REPLY="${REPLY%.gz}"
 REPLY="${REPLY%.tar}"
 REPLY="${REPLY%.tgz}"
}

recompress(){
 local IN OUT TMP REPLY

 rtmp(){ rm -f "$TMP"; }
 uncompr(){         if ! decomp "$IN"; then rtmp; fi; }
 xz_it(){ uncompr | if ! xz $XZO > "$TMP"; then rtmp; fi; }

 IN="$1"

 rootname "$1"
 OUT="$REPLY.tar.xz"
 TMP="$OUT.new"

 rm -f "$OUT" "$TMP"
 umask 0077
 xz_it
 umask 0022

 if [[ -f $TMP ]]; then
  mv "$TMP" "$OUT"
  chmod $( stat -c "%a" "$IN" ) "$OUT"
  touch -r "$IN" "$OUT"
  rm    -f "$IN"
 else false
 fi
}

pending(){ find $AC/ $CC/ $SC/ -maxdepth 4 -type f | sed -n "$FILES"; }
reduction(){ pending | while read; do recompress "$REPLY"; done; }

locked(){
 local LEN STATUS LINE LPID

 [[ -n $1 ]] && [[ -f $1 ]] &&
 [[ -n $2 ]] && LEN=${#2} &&
 read LPID < $1 &&
 STATUS="/proc/$LPID/status" &&
 [[  -f      $STATUS ]] &&
 read LINE < $STATUS &&
 [ "${LINE:6:$LEN}" == "$2" ]
}

lock_bxz(){
 locked       $PIDF bxz &&
 kill -15 $(< $PIDF )
 echo $BASHPID > $PIDF
}

acad(){
 if [ -f /proc/acpi/ac_adapter/*/state ]; then local REPLY
  read < /proc/acpi/ac_adapter/*/state
  [[ $REPLY =~ on-line ]]
 fi
}

cgroup_join(){
 mkdir -p        /dev/cgroup/idle/bxz
 echo $BASHPID > /dev/cgroup/idle/bxz/tasks
 echo   1 >      /dev/cgroup/idle/bxz/cpu.shares
 echo 100 >      /dev/cgroup/idle/bxz/blkio.weight
 echo 100 >      /dev/cgroup/idle/bxz/memory.swappiness
}

cgroup_exit(){
 echo $BASHPID > /dev/cgroup/tasks
 rmdir           /dev/cgroup/idle/bxz
 rmdir           /dev/cgroup/idle
 return 0
}

main(){
 trap : SIGHUP SIGINT SIGQUIT SIGILL SIGABRT SIGSTOP SIGPIPE
 lock_bxz
 sleep 60
 cgroup_join
 reduction
 cgroup_exit
 rm -f $PIDF
}

if   [ -f /etc/init.d/find_ir ]      ||
     grep -q "boot=IR" /proc/cmdline ||
     ! acad
then exit 0
fi

main 1>>/var/log/bxz 2>&1 &
disown
exit 0
