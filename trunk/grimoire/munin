# Source tends to come without DESTDIR Support
# Might be broke since rrdtool is broke

# 2.0.0 failed compilation

   version   stable 1.4.7 1.4.6 1.4.5 1.4.0
   version unstable 2.0.1 2.0.0
   require Python init-functions perl--Net-Server perl--HTML-Template rrdtool perl--Log-Log4perl perl--Net-SSLeay perl--Net-SNMP perl--Time-HiRes
  optional web-server 'perl--Storable' '' to intall the main program or node client only
  sys_user munin munin /var/lib/munin
  category administration/monitoring
 attribute web
      info last 20120622
      info home http://munin-monitoring.org/
    source $SOURCEFORGE_URL munin/stable/$VERSION/munin-$VERSION.tar.gz
#   source http://sourceforge.net/projects/munin/files/munin%20stable/$VERSION/munin-$VERSION.tar.gz
      desc 'present system stats on webpage
It surveys computers and presents the information
in graphs throug a web interface.
Its emphasis is on plug and play capabilities.
After completing an installation a high number of
monitoring plugins will be playing with no more effort.
Using Munin you can easily monitor the performance
of your computers, networks, SANs, and quite possibly
applications as well.
It makes it easy to determine what is different
today when a performance problem crops up.
It makes it easy to see how you are doing
capacity wise on all limited resources.'

build(){

configure_munin(){
 cat > Makefile.config << EOF
DESTDIR    = $DESTDIR
PREFIX     = \$(DESTDIR)/usr
CONFDIR    = \$(DESTDIR)/etc/munin
LIBDIR     = \$(PREFIX)/share/munin
SBINDIR    = \$(PREFIX)/sbin
BINDIR     = \$(PREFIX)/bin
MANDIR     = \$(PREFIX)/share/man
DOCDIR     = \$(PREFIX)/doc/munin
HTMLDIR    = \$(DESTDIR)/var/www/munin
CGIDIR     = \$(DESTDIR)/var/www/munin/cgi
DBDIR      = \$(DESTDIR)/var/lib/munin
PLUGSTATE  = \$(DBDIR)/plugin-state
LOGDIR     = \$(DESTDIR)/var/log/munin
STATEDIR   = \$(DESTDIR)/var/run/munin
PYTHON     = \$(shell which python)
PERL       = \$(shell which perl)
PERLLIB    = \$(DESTDIR)\$(shell \$(PERL) -V:sitelib | cut -d"'" -f2)
GOODSH     = \$(shell PATH=`getconf PATH` sh -c 'type sh | sed "s/.* //"')
BASH       = /bin/bash
OSTYPE     = \$(shell uname | tr '[A-Z]' '[a-z]')
HOSTNAME   = \$(shell hostname)
MKTEMP     = \$(shell ./test-mktemp)
VERSION    = \$(shell cat RELEASE)
USER       = munin
GROUP      = munin
PLUGINUSER = nobody
GETENT = \$(shell which getent || which true 2>/dev/null)
CHECKUSER  = \$(shell \$(GETENT) passwd \$(USER) >/dev/null 2>/dev/null || (echo "echo User \$(USER) nonexistant. Create the user and retry; exit 2"))
CHECKGROUP = \$(shell \$(GETENT) group \$(GROUP) >/dev/null 2>/dev/null || (echo "echo Group \$(GROUP) nonexistant. Create the group and retry; exit 2"))
CHOWN      = chown
CHMOD      = chmod                                             
CHGRP      = chgrp                                             
HASSETR = \$(shell perl -e 'use Config; my @vars=("d_setruid", "d_setreuid", "d_setresuid"); foreach my \$\$var (@vars) { if (\$\$Config{\$\$var} eq "define") { print "1\n"; exit 0; } } print "0\n"; exit 0;' )
EOF
}

doc_hack(){
# htmldoc and html2text are not often installed.
# Quick hack with perl:
# Skip the PDFs.
 perl -pi -e 's,htmldoc munin,cat munin, or s,html(2text|doc),# $&,' Makefile
 perl -pi -e 's,\$\(INSTALL.+\.(pdf|txt) \$\(DOCDIR,# $&,' Makefile
}

install_munin(){
 if grep -q web-server $OPT_ON_LOGS/munin 2>/dev/null; then
  echo "Installing both munin server and node..."
  make install
 else 
  echo "Installing munin node only..."
  make install-common-prime install-node-prime install-plugins-prime
 fi
}

fix_paths(){
 grep -lr $DESTDIR $DESTDIR |
 xargs -r --max-lines=16 sed -i "s:$DESTDIR::g"
}

 sed -i 's:/bin/pwd:pwd:' Makefile
 configure_munin &&
 doc_hack        &&
 make            &&
 install_munin   &&
 fix_paths
}
