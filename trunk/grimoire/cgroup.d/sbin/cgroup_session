#!/bin/bash

# Copyright Kyle Sallee 2011
# All rights reserved.
# For use with the distribution sorcerer only!

# A cgroup with a sub-cgroup can not be removed.
# That could be useful when wanting modifications
# for a user's provisioning to remain until reboot.

# Users can make their own sub cgroup
# in order to control some aspects such as
# CPU core affinity.
# However, users may not modify settings
# that of their main user cgroup.
# And user sub cgroups are still bound by the constraints
# of the cgroups that contain it such as the user cgroup.



find_cgroup(){
 if [ -n "$CG" ]; then return 0; fi
 local DEV JUNK TYPE
 while read DEV CG TYPE JUNK; do
  if   [[ $DEV == cgroup_root ]] && [[ $TYPE == tmpfs  ]]; then return 0
  elif [[ $DEV == cgroup      ]] && [[ $TYPE == cgroup ]]; then return 0
  fi
 done < /proc/mounts
 unset CG
 return 1
}

open(){
 mkdir -pm 700   $CG/user/$PAM_USER
 chown $PAM_USER $CG/user/$PAM_USER
 echo $PPID >    $CG/user/$PAM_USER/tasks
}

close(){
 echo $$    > $CG/tasks
 echo $PPID > $CG/tasks
 read       <             $CG/user/$PAM_USER/tasks
 [ -n "$REPLY" ] || rmdir $CG/user/$PAM_USER
 return 0
}

find_cgroup || exit 0

case $PAM_TYPE in
  open_session) open  ;;
 close_session) close ;;
esac
