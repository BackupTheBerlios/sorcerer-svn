# Not a drop in replacement for qt-everywhere-opensource.
# installing qt-everywhere-opensource5 will wreck an installed
# qt-everywhere-opensource, so do not cast this.
# however it compiles, links, and installs fine during testing

# exceptions required
# QtXmlPatterns was requested, but it can't be built due to exceptions being disabled

# http://get.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.6.3.tar.gz 
# Above is alternate download location?

# kdenlive version 0.8.2 does not compile when
# qt-everywhere-opensource 4.8.0 is installed.
# 4.8.1 failed compilation, perhaps incompatible with current glib?

with version   stable 5.0.2 5.0.0 4.8.4
with base    alsa-lib dbus glib fontconfig gst-plugins-base-0.10 libXcursor libXinerama libXrandr libiodbc libpng sqlite tiff xcb-util-image xcb-util-keysyms xcb-util-wm
with elect   cups        -cups -no-cups                for common unix printing support
with elect   gst-plugins-base-0.10
with elect   mysql
#with elect   mysql       -plugin-sql-mysql
with elect   postgresql  ''    -no-sql-psql            for postgresql support
#with elect   sqlite-v2.8 ''    -no-sql-sqlite2         for old sqlite support
with elect   libiodbc    ''    -no-sql-odbc            for connecting to windows database
#with elect   unixODBC    ''    -no-sql-odbc            for connecting to windows database
with also    -fontconfig -opensource -nomake examples -nomake tests -reduce-relocations
#with also    -no-phonon -fontconfig -xmlpatterns -exceptions
with role    graphic/library
with trait   bottleneck huge kde4 library lto_off makej multilib-dual optimize
#with trait   bias bottleneck huge kde4 library lto_off makej multilib-dual optimize
with trait   broke
case $VERSION in
 4.*)
with source    stable http://releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-$VERSION.tar.gz
with source  unstable http://releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-$VERSION.tar.gz
;;
 5.0.0)
with source    stable http://releases.qt-project.org/qt5/$VERSION/single/qt-everywhere-opensource-src-$VERSION.tar.xz
;;
esac

#with source    stable http://origin.releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-$VERSION.tar.gz
#with source  unstable http://origin.releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-$VERSION.tar.gz
#   source   stable ftp://ftp.trolltech.com/qt/source/qt-everywhere-opensource-src-$VERSION.tar.gz
#   source   stable ftp://ftp.trolltech.com/qt/source/qt-everywhere-opensource-src-4.7.4.tar.gz
#   source unstable ftp://ftp.trolltech.com/qt/source/qt-everywhere-opensource-src-$VERSION.tar.gz
with info    last 20121229
with info    vurl http://qt-project.org/downloads
with info    home http://qt-project.org
with info    freecode qt
with info    cite 'GUI toolkit'

build(){
 local ARCH PREFIX

 add_rpath_to_la(){
  if  [[ $HOSTTYPE == x86_64 ]]; then
   if [[ $CFLAGS   =~ -m32   ]]; then
    sed -i 's:-L/opt/32bit/usr/lib:-L/opt/32bit/usr/lib -R/opt/32bit/usr/lib:' \
        $( find $DESTDIR/opt/32bit/usr/lib/ -name libQt\*.la )
#   else
#    sed -i 's:-L/usr/lib64:-L/usr/lib64 -R/usr/lib64:' \
#        $( find $DESTDIR/usr/lib64/ -name libQt\*.la )
   fi
  else
   sed -i 's:-L/usr/lib:-L/usr/lib -R/usr/lib:' \
       $( find $DESTDIR/usr/lib/ -name libQt\*.la )
  fi
 }

 rm -rf demos examples

# qt-everywhere-opensource can not be told where
# the mysql.h header file is
# nor does it run mysql_config in order to find out!
# export   CFLAGS+=' -fPIC -I/usr/include/mysql'
# export CXXFLAGS+=' -fPIC -I/usr/include/mysql'
 export   CFLAGS+=' -fPIC'
 export CXXFLAGS+=' -fPIC'
 export  LDFLAGS+=" -Wl,-rpath-link,$PWD/lib"

 flags(){
  while [[ -n $1 ]]; do
   sed -n '/^flags/p' /proc/cpuinfo | grep -qw "$1" || OPTS+=" -no-$1"
   shift
  done
 }

# version 4.7.1 responds to these flags opposite of how it should
# case $HOSTTYPE in
#  i?86) flags mmx 3dnow sse sse2 sse3 ssse3 sse4.1 sse4.2 ;;
# esac

    CFLAGS="${CFLAGS//-mno-mmx/}"
    CFLAGS="${CFLAGS//-mno-sse2/}"
    CFLAGS="${CFLAGS//-mno-sse/}"
   CFLAGS+=" -Winvalid-pch"

  CXXFLAGS="${CXXFLAGS//-mno-mmx/}"
  CXXFLAGS="${CXXFLAGS//-mno-sse2/}"
  CXXFLAGS="${CXXFLAGS//-mno-sse/}"
 CXXFLAGS+=" -Winvalid-pch"

 PREFIX=/usr

 if    [[ $HOSTTYPE == x86_64 ]]; then
  if   [[ $CFLAGS   =~ -m32   ]]
  then ARCH=i686;      PREFIX=/opt/32bit/usr
  else ARCH=$HOSTTYPE; with also -libdir $PREFIX/lib64 -no-rpath
  fi
 else  ARCH=$HOSTTYPE; with also -no-rpath
 fi

 unset CC CXX

 sed -i 's:/bin/pwd:pwd:g' configure
 if   [ -f qtbase/configure ]
 then sed -i 's:/bin/pwd:pwd:g' qtbase/configure
 fi

# local  RATH="/opt/libiodbc/bin:$PATH"
# local  PATH
# export PATH=$RATH

 use_older_webkit(){
  if [ -d qt-everywhere-opensource-src-4.7.4/src/3rdparty/webkit ]; then
   rm -fr                                    src/3rdparty/webkit
   mv     qt-everywhere-opensource-src-4.7.4/src/3rdparty/webkit src/3rdparty/
#  rm -fr qt-everywhere-opensource-src-4.7.4
  fi
 }

 case $VERSION in
  4.8.*) use_older_webkit ;;
# 4.8.*) sed -i 's/-Werror/-fpermissive/' src/3rdparty/webkit/Source/WebKit.pri ;;
  4.7.*) with also -qt-gif ;;
 esac

 mkdir -p lib
#-system-libtiff  \
#-qt3support      \
 echo -e "o\nyes" |
 setarch $ARCH    \
 ./configure      \
 -v               \
 -fast            \
 -release         \
 -shared          \
 -optimized-qmake \
 -system-libjpeg  \
 -system-libpng   \
 -system-sqlite   \
 -system-zlib     \
 -xinerama        \
 -nomake demos    \
 -nomake examples \
 -prefix $PREFIX  \
 -reduce-relocations \
 -no-separate-debug-info \
 $OPTS &&
 setarch $ARCH make &&
 setarch $ARCH make install DESTDIR=$DESTDIR INSTALL_ROOT=$DESTDIR &&
 add_rpath_to_la
}
