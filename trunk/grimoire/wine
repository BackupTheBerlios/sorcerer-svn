   VERSION=( "0.9.6" "0.9.5" "0.9.4" "0.9.3" "0.9.2" "0.9.1" "0.9" )
      SAFE=( "0.9.6" )
    IGNORE="200[0-4]\|alpha\|api\|cfg\|dlls\|docs\|fish\|kevin\|mingw\|prgs\|programs\|icons\|setup\|tools\|xe"
  CATEGORY="emulator"
 ATTRIBUTE="solo x11"
    SOURCE=( "wine/wine-$VERSION.tar.bz2" )
#            "linux-libc-headers-2.6.12.0.tar.bz2" )
       URL=( "$SOURCEFORGE_URL"
             "http://ep09.pld-linux.org/~mmazur/linux-libc-headers/" )
  HOMEPAGE="http://www.winehq.com"
       REQ=( "audiofile bison flex fontforge glib libxslt ncurses x11"
             "alsa-lib::--without-alsa:for output through alsa"
             "arts:::for audio output through arts"
             "cups:::for printing"
             "esound:::for output through enlightenment sound daemon"
             "openldap:::for authentication using LDAP"
             "openssl:::for secure socket connectios"
             "sane-backends:::for scanning support"
             "glut:--enable-opengl:--without-opengl:to use glut or freeglut for OpenGL support" )
# may have additional optional requirements on alsa-lib and glib
# I guess wine is beta/stable and Wine is developmental.
  EPROVIDE="Wine"
 FRESHMEAT="wine"
  ESTIMATE="6800"
      DESC="wine runs some Windows 3.x and Windows 9x programs.
wine Is Not an Emulator.
It is an alternative implementation of the Windows 3.x and Win32 APIs.
Wine provides both a development toolkit (Winelib)
for porting legacy Windows sources to Unix and a
program loader, allowing unmodified Windows 3.1/95/NT
binaries to run under Intel Unixes.
Wine does not require Microsoft Windows, as it is a
completely alternative implementation consisting of
100% Microsoft-Free code, but it can optionally use
native system DLLs if they are available."

build()  {
if    [  -n  "${SOURCE[1]}"  ];  then
  case  $( arch  )  in
    i*86)  ln  -s  asm-i386      linux-libc-headers-2.6.12.0/include/asm  ;;
    x*86*) ln  -s  asm-x86_64    linux-libc-headers-2.6.12.0/include/asm  ;;
  esac
  export    CFLAGS="-I$BUILD_DIR/linux-libc-headers-2.6.12.0/include   $CFLAGS"
  export  CXXFLAGS="-I$BUILD_DIR/linux-libc-headers-2.6.12.0/include $CXXFLAGS"
fi


  unset  LDFLAGS LTDL_LIBRARY_PATH LD_LIBRARY_PATH LD_RUN_PATH

  ./configure           \
  --prefix=/usr         \
  --sysconfdir=/etc     \
  --localstatedir=/var  \
  $OPTS                 &&
  make    depend        &&
  make                  &&
  prepare_install       &&
  make    install       \
  LDCONFIG=/bin/true
# FONTSSUBDIRS=fonts
}
