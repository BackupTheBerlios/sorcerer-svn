    stable 1.02 1.01 1.00
   require fltk
    ignore 'x86'
  category window-manager
 attribute x11
    source http://flwm.sourceforge.net/flwm-$VERSION.tgz
  homepage http://flwm.sourceforge.net/
      opts --enable-shared
     WMBIN='/usr/bin/flwm'
  estimate 50
      desc 'flwm is a fast light window manager.
flwm is an X window manager designed to be user friendly
and use the absolute minimum amount of screen real estate.
It has no icons, using a pop-up menu to select
hidden or new windows, and sideways titlebars.
Flwm is also designed to achieve Gnome, KDE, and Motif
compatibility simultaneously and has also been tested
with many SGI programs that normally require 4DWM.'

configure() {
query_dialog(){
 qd_help(){
  if [ -n "$4" ]; then
   dialog --backtitle "$BACKT"      \
          --stdout                  \
          --timeout "$PROMPT_DELAY" \
          --msgbox                  \
          "$( long_desc "$4" )"     \
          0 0
  fi
  query_dialog "$@"
 }
              
 local ASK BACKT RESPONSE DEFAULT FTS FAS

 if   [ -n "$SPELL" ]
 then BACKT="Spell:  $SPELL"
 fi

 ASK="$( echo "$1" |
         sed "s:\\\e\[.m::g
              s:\\\e\[..m::g"
       )"

 case "$2" in
  y|Y) DEFAULT="Yes" ;;
  n|N) DEFAULT="No"  ;;
 esac

 if [ -n "$3" ]; then

   FTS="as optional requirement for this spell"
   FAS="as optional requirement for all spells"

   RESPONSE=$( dialog --backtitle "$BACKT"        \
                      --stdout                    \
                      --timeout   "$PROMPT_DELAY" \
                      --default-item   "$DEFAULT" \
                      --help-button               \
                      --no-cancel                 \
                      --item-help                 \
                      --menu      "$ASK"          \
                      0 0 0                       \
                      "Yes"       ""  "Yes $FTS"  \
                      "No"        ""  "No  $FTS"  \
                      "Always"    ""  "Yes $FAS"  \
                      "Never"     ""  "No  $FAS"
             )
   case $RESPONSE in
    Always|Never) STRONG="true"  ;;
               *) STRONG="false" ;;
   esac
  else

   RESPONSE=$( dialog --stdout                     \
                      --timeout   "$PROMPT_DELAY"  \
                      --default-item   "$DEFAULT"  \
                      --item-help                  \
                      --no-cancel                  \
                      --menu      "$ASK"           \
                      0 0 0                        \
                      "Yes"       ""  "Yes Please" \
                      "No"        ""  "No  Thanks"
             )
 fi
 clear
 case ${RESPONSE:=$2} in
  No|Never|n|N|f|F|m|M) false        ;;
    Yes|Always|y|Y|j|J) true         ;;
                *HELP*) qd_help "$@" ;;
                     *) true         ;;
 esac
}


query(){ query_dialog "$@"; }




  if  !  grep  -q  "EDIT_CONFIG"  $SPELL_CONFIG;  then
    if    query "Would you like to edit config.h?" "n";  then
      cp  $SCRIPT_DIR/config.h  $CONFIG_LOGS/$SPELL
      ${EDITOR:=nano}           $CONFIG_LOGS/$SPELL/config.h
    fi
    echo  "EDIT_CONFIG=true"  >>  $SPELL_CONFIG
  fi

  if    !  grep  -q  "DYN_MENU"  $SPELL_CONFIG;  then
    if    query "Would you like to apply the dynamic menu patch?" "n"
    then  echo  "DYN_MENU=true"   >>  $SPELL_CONFIG
    else  echo  "DYN_MENU=false"  >>  $SPELL_CONFIG
    fi
  fi
}

build() {
  export  LDFLAGS="$LDFLAGS -lGL"

  if    [  -e  $CONFIG_LOGS/$SPELL/config.h  ]
  then  cp     $CONFIG_LOGS/$SPELL/config.h  .
  fi

  if    $DYM_MENU
  then  patch Menu.C  $SCRIPT_DIR/Menu.C.diff
  fi

  sed  -i  "1i#ifndef FLTK_1_0_COMPAT
            1i#define FLTK_1_0_COMPAT
            1i#endif"  main.C

  default_build
}
