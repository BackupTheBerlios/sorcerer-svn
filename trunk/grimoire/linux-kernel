# granted solo trait for faster moil on smp using parallel make.

with info    edit 20131126
with base    linux-config linux-firmware linux-modules linux-headers
with role    kernel
with trait   console litelink makej optimize solo
with info    home http://www.kernel.org/
with info    cite 'compiles and installs a linux kernel'

kversion(){
 local m=/usr/src/linux/Makefile

 if   ! [ -f $m ]
 then with version stable uncertain; with trait broke; return
 fi

 local v="s:^VERSION=::p;d"
 local p="s:^PATCHLEVEL=::p;d"
 local s="s:^SUBLEVEL=::p;d"
 local e="s:^EXTRAVERSION=::p;d"
 local c="s: ::g;"

 v=$( sed "$c $v" $m )
 p=$( sed "$c $p" $m )
 s=$( sed "$c $s" $m )
 e=$( sed "$c $e" $m )

 [ -n "$p" ] && v+=".$p"
 [ -n "$s" ] && v+=".$s"
 [ -n "$e" ] && v+=".$e"

 with version stable "$v"
}

kversion


build(){

 install_kernel(){
  local d="$DESTDIR/usr/share/linux/"
  local v="$d/$VERSION/"
  local m="System.map"
  local i="$( find . -type f -name bzImage )"

  install -vm 755 -d   "$d"
  install -vm 700 -d   "$v"
  install -vm 600 "$i" "${v}kernel"
  install -vm 600 "$m" "$v"
 }

 import_previous(){
  local l=/usr/src/linux
  if   [   -d   $l-kernel ] &&
       cmp -s   $l{,-kernel}/Makefile &&
       cmp -s {,$l-kernel/}.config
  then find     $l-kernel/ -mindepth 1 -maxdepth 1 |
       xargs --max-lines=64 cp -t .
  fi
 }

 compile_and_install(){
  umask 0022
  local    d=/usr/src/linux
  local m=$d/Makefile
  local c=$d/.config.custom
  local s=$d/.config.stock

  if ! [ -f $m ]; then
   echo "$m is missing"
   echo "Try casting linux-source first"
   return 1
  elif [ -f $c ]; then cp $c .config
  elif [ -f $s ]; then cp $s .config
  else
   echo "$c does not exist"
   echo "$s does not exist"
   echo "$c or $s must exist"
   echo "try casting linux-config first"
   return 1
  fi

  import_previous

  cd /usr/src/linux/ &&
  make distclean &&
# yes '' |
# make O="$BUILD_DIR" silentoldconfig &&
  yes '' |
  make O="$BUILD_DIR" oldconfig &&
  make O="$BUILD_DIR" bzImage &&
  cd     "$BUILD_DIR" &&
  install_kernel
 }

 export   CFLAGS="${CFLAGS//-fstack-protector-all/}"
 export   CFLAGS="${CFLAGS//-fstack-protector/}"
 export CXXFLAGS="${CXXFLAGS//-fstack-protector-all/}"
 export CXXFLAGS="${CXXFLAGS//-fstack-protector/}"

 compile_and_install
}

current(){ [ -f /usr/share/linux/$VERSION/kernel ]; }
