  LVERSION=( "2.6.22.1" )
   VERSION=( "2.6.1" "2.6" "2.5" "2.4" "2.3.6" "2.3.5" "2.3.4" "2.3.3" "2.3.2" "2.3.1" "2.3" ) 
      SAFE=( "2.6.1" "2.6" "2.5" "2.4" "2.3.6" "2.3.5" "2.3.4" )
#  LVERSION=( "2.6.22.9" "2.6.22.1" )
#   VERSION=( "2.7" "2.6.1" "2.6" "2.5" "2.4" "2.3.6" "2.3.5" "2.3.4" "2.3.3" "2.3.2" "2.3.1" "2.3" ) 
#      SAFE=( "2.7" "2.6.1" "2.6" "2.5" "2.4" "2.3.6" "2.3.5" "2.3.4" )
    IGNORE="ref\|2001\|^2\.[4-5]\|libidn\|linuxthreads\|ports"
  CATEGORY="development"
 ATTRIBUTE="library solo"
case  $VERSION  in
  2.7*)
   SOURCE=( "glibc/glibc-$VERSION.tar.bz2"
            "glibc/glibc-libidn-$VERSION.tar.bz2"
            "pub/linux/kernel/v${LVERSION:0:3}/linux-$LVERSION.tar.bz2" )
       URL="$GNU_URL"
    URL[2]="$KERNEL_URL"  ;;
  2.6*)
   SOURCE=( "glibc/glibc-$VERSION.tar.bz2"
            "glibc/glibc-libidn-$VERSION.tar.bz2"
            "pub/linux/kernel/v${LVERSION:0:3}/linux-$LVERSION.tar.bz2" )
       URL="$GNU_URL"
    URL[2]="$KERNEL_URL"  ;;
  2.3.6)
   SOURCE=( "glibc/glibc-$VERSION.tar.bz2"
            "glibc/glibc-linuxthreads-$VERSION.tar.bz2"
            "glibc/glibc-libidn-$VERSION.tar.bz2"
            "pub/linux/kernel/v${LVERSION:0:3}/linux-$LVERSION.tar.bz2" )
       URL="$GNU_URL"
    URL[3]="$KERNEL_URL"  ;;
  2.3.5)
   SOURCE=( "glibc/glibc-$VERSION.tar.bz2"
            "glibc/glibc-linuxthreads-$VERSION.tar.bz2"
            "glibc/glibc-libidn-$VERSION.tar.bz2"
            "pub/linux/kernel/v${LVERSION:0:3}/linux-$LVERSION.tar.bz2" )
       URL="$GNU_URL"
    URL[3]="$KERNEL_URL"
    USE_GCC="gcc-v3.4"  ;;
  2.5)
   SOURCE=( "glibc/glibc-$VERSION.tar.bz2"
            "glibc/glibc-libidn-$VERSION.tar.bz2"
            "pub/linux/kernel/v${LVERSION:0:3}/linux-$LVERSION.tar.bz2" )
       URL="$GNU_URL"
    URL[2]="$KERNEL_URL"  ;;
esac

  HOMEPAGE="http://www.gnu.org/software/libc"
       REQ=( "perl"
             "libselinux:--with-selinux:--without-selinux:for selinux support" )
#            ":--enable-add-ons=nptl::for linux 2.6.x only NP thread library" )
   EXCLUDE="/etc/ld.so.cache
            /etc/ld.so.conf
            /etc/localtime
            /etc/nsswitch.conf"
   PROTECT="/etc/hostname
            /etc/hosts
            /etc/host.conf
            /etc/hosts
            /etc/hosts.allow
            /etc/hosts.deny
            /etc/hosts.equiv
            /etc/hosts.lpd
            /etc/networks
            /etc/resolv.conf
            /lib/ld-linux.so.2
            /lib64/ld-linux-x86-64.so.2
            /sbin/ldconfig"
#           /usr/include/bits/syscall.h
#           /usr/include/gnu/stubs.h"
  disable  lib64  reduce
case $HOSTTYPE in
 x86_64)  RPATH="/usr/lib64/gconv"  ;;
      *)  RPATH="/usr/lib/gconv"    ;;
esac
  ESTIMATE="19500"
      DESC="glibc is a C library for use with GNU/Hurd and GNU/Linux.
glibc - Library for use with GNU/Hurd and GNU/Linux.
GNU C Library is one of the most important components
of the GNU Hurd and most modern Linux distributions.
It is used by almost all C programs and provides the
most essential program interface.

gd libpng and zlib are optional requirements for
building memusagestat, a program to generate graphic
from memory profiling data."


build() {

  del_library_cache()  {
    ldconfig
    rm  -fr  ${LIBRARY_CACHE:-/usr/lib.old}  \
             ${LIBRARY_CACHE_64:-/usr/lib64.old}
    ldconfig
    true
  }


  fix_libc_so() {
    case  $VERSION  in
      2.4)  sed  -i  "s: AS_NEEDED[^)]*) ::"  $IR/usr/lib/libc.so  ;;
    esac
  }


  install_glibc()  {
    cd      $IR
    rm  -f  $IR/etc/{localtime,ld.so.*}

    fix_libc_so

    prepare_install

    if    [  -f                                      $LD_SO  ]
    then  LD_PRELOAD="$LPO"  \
          LD_LIBRARY_PATH="$IR/lib:$IR/usr/lib"      $LD_SO  /bin/cp  -a  *  /
    elif  [  -f                                      $LD_64  ]
    then  LD_PRELOAD="$LPO"  \
          LD_LIBRARY_PATH="$IR/lib64:$IR/usr/lib64"  $LD_64  /bin/cp  -a  *  /
    else  false
    fi

    del_library_cache
    /sbin/init u
    true
  }


  quick_test()  {
    echo  "Performing a quick test to see if the new glibc works."
    if
      if    [  -f                                      $LD_SO  ]
      then  LD_LIBRARY_PATH="$IR/lib:$IR/usr/lib"      $LD_SO  /bin/true
      elif  [  -f                                      $LD_64  ]
      then  LD_LIBRARY_PATH="$IR/lib64:$IR/usr/lib64"  $LD_64  /bin/true
      else  false
      fi
    then  echo  "glibc is ready to install."
    else  echo  "glibc is not working as expected."
          echo  "Compilation aborted before installing new glibc."
          false
    fi
  }


  supported_locales()  {
    mkdir  -p                       $IR/usr/share/i18n
    cp     ../localedata/SUPPORTED  $IR/usr/share/i18n
  }


   LPO="$LD_PRELOAD"
  unset  LD_PRELOAD
  unset  LDFLAGS  LTDL_LIBRARY_PATH  LD_LIBRARY_PATH  LD_RUN_PATH

export    CFLAGS="${CFLAGS/-O?/-O2}"
export  CXXFLAGS="${CXXFLAGS/-O?/-O2}"

export    CFLAGS="${CFLAGS/-fomit-frame-pointer/}"
export  CXXFLAGS="${CXXFLAGS/-fomit-frame-pointer/}"

export    CFLAGS="${CFLAGS/-ffast-math/}"
export  CXXFLAGS="${CXXFLAGS/-ffast-math/}"


echo  "$CFLAGS"  |
grep  -q  "\-O"  ||
export  CFLAGS="$CFLAGS -O2"

echo  "$CXXFLAGS"  |
grep  -q  "\-O"    ||
export  CXXFLAGS="$CXXFLAGS -O2"


case  $VERSION  in
  2.3.3)  sed    -i      "s: \$(objpfx)tst-numeric.out::"  localedata/Makefile
  # patch  -p1  <  $SCRIPT_DIR/glibc-2.3.3-gcc-3.4.patch
  # grep   -rl     "\-fno-inline-functions" csu linuxthreads  |
  # xargs  -l64  \
  # sed    -i  "s:-fno-inline-functions:-fno-inline-functions -fno-unit-at-a-time:"
  ;;
esac

export  LANGUAGE=C
export    LC_ALL=C

            IR=$PWD/install
mkdir  -p  $IR/etc
touch      $IR/etc/ld.so.conf
    LD_SO="$IR/lib/ld-linux.so.2"
    LD_64="$IR/lib64/ld-linux-x86-64.so.2"


mkdir  -p                                            $IR/usr/include
cd          linux-$LVERSION
make                include/linux/version.h
make                include/asm
cp     -rL          include/{asm,asm-generic,linux}  $IR/usr/include
cd     ..
rm     -fr  linux-$LVERSION  \
               /usr/include/{asm,asm-generic,linux}
cp     -a   $IR/usr/include/*                           /usr/include

# ^^ linux headers installed before glibc begins compilation.

case  $VERSION  in
  2.7*) mv  glibc-libidn-*    libidn
        KVER=$( uname -r | cut -d '.' -f-3 | tr -d '.' )
        (( KVER >= 2619 ))  &&
        OPTS="$OPTS --enable-kernel=2.6.19"  ;;
  2.6*) mv  glibc-libidn-*    libidn
        KVER=$( uname -r | cut -d '.' -f-3 | tr -d '.' )
        (( KVER >= 2615 ))  &&
        OPTS="$OPTS --enable-kernel=2.6.15"  ;;
  2.4)  mv  glibc-libidn-2.4  libidn  ;;
  2.5)  mv  glibc-libidn-*    libidn
        KVER=$( uname -r | cut -d '.' -f-3 | tr -d '.' )
        (( KVER >= 2615 ))  &&
        OPTS="$OPTS --enable-kernel=2.6.15"  ;;
esac

HEADERS="--with-headers=$BUILD_DIR/install/usr/include"

mkdir  build
cd     build
../configure       \
--host=$BUILD      \
--build=$BUILD     \
--prefix=/usr      \
--disable-profile  \
--with-tls         \
--with-elf         \
--without-gd       \
--without-cvs      \
--enable-shared    \
--enable-add-ons   \
$HEADERS           \
$OPTS              &&
# make               &&
# # make    tests    &&
# make  all  tests  install  install_root=$IR  &&
make  all  install  install_root=$IR  &&
supported_locales  &&
quick_test         &&
install_glibc
}


post_install() {
  default_post_install
  backup_lib
}


current()  { grep  -q  "/usr/include/linux/version.h"  $INSTALL_LOGS/glibc; }
