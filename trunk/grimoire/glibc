# NVIDIA's precompiled drivers version 295.49
# mightn ot be compatible wtih glbic version 2.15

# glibc version 2.14.1 and 2.13 have a patch that fixes a compilation bug
# that was introduced by the gcc version 4.5.x branch
# and yet not fixed by gcc authors, odd.

# glibc version 2.14 and above have no support for rpc
# libtirpc also does not work becuase it requires rpc functions
# that are not available in glibc.
# Also glibc 2.14.1 has new annoying bugs not present in 2.13.
# Rolling back glibc 2.13 to 2.13 will break some boxes.
# However, there is no better soluton at this moment
# than to hold at version 2.13

# aware of glibc version 2.15, researching it's RPC status before testing.
# the RPC in glibc version 2.16.0 is broke and causes
# a compile failure when given --enable-obsolete-rpc
# probably intended that way by the software authors
# in order to encourage a faster demise of SUNRPC.

   version stable 2.13 2.12.2 2.11.2 2.11.1
   version latest 2.15 2.14.1
   version unstable 2.16.0
case $VERSION in
 2.16.*)
      opts --enable-obsolete-rpc ;;
esac
  category development
 attribute library makej multilib-dual solo
   require perl linux-headers
      opts --without-selinux
# optional prelink '' '' for faster loading ELFs
    source $GNU_URL glibc/glibc-$VERSION.tar.xz
      info last 20111007
      info home http://www.gnu.org/software/libc/
      info docs http://www.gnu.org/software/libc/manual/
   exclude /etc/ld.so.cache
   exclude /etc/ld.so.conf
   exclude /etc/localtime
   protect /etc/hostname
   protect /etc/hosts
   protect /etc/host.conf
   protect /etc/hosts
   protect /etc/hosts.allow
   protect /etc/hosts.deny
   protect /etc/hosts.equiv
   protect /etc/hosts.lpd
   protect /etc/networks
   protect /etc/nsswitch.conf
   protect /etc/resolv.conf
   protect /lib/ld-linux.so.2
   protect /lib64/ld-linux-x86-64.so.2
   protect /sbin/ldconfig
case $HOSTTYPE in
 x86_64) RPATH='/usr/lib64/gconv' ;;
      *) RPATH='/usr/lib/gconv'   ;;
esac
      desc 'GNU implementation of a C library'

build(){ (
 local arch setarch

 missing_headers(){
  # headers missing from glibc version 2.14.1
  # yet required in order to compile libtirpc version 0.2.2
  mkdir  -pvm 755 $DESTDIR/usr/include/rpcsvc
  mkdir  -pvm 755 $DESTDIR/usr/include/rpc
  install -vm 644 ../nis/rpcsvc/nis{,lib,_tags}.h $DESTDIR/usr/include/rpcsvc/
  install -vm 644 ../nis/rpcsvc/yp{,clnt}.h       $DESTDIR/usr/include/rpcsvc/
  install -vm 644 ../sunrpc/rpc/{auth,auth_des,auth_unix,clnt,pmap_clnt,rpc,rpc_msg,svc,svc_auth,types,xdr}.h $DESTDIR/usr/include/rpc/
 }

 install_glibc(){
  install -vm 600 ../nscd/nscd.conf $DESTDIR/etc/
  mkdir  -pvm 755                   $DESTDIR/var/db
  mkdir  -pvm 700                   $DESTDIR/var/db/nscd

#  case $VERSION in
#   2.15)   missing_headers ;;
#   2.14.1) missing_headers ;;
#  esac

  cd    $DESTDIR
  rm -f $DESTDIR/etc/{localtime,ld.so.*}

  true
 }

 quick_test(){
  if ! [[ $CC =~ -m32 ]]; then
   echo "Performing a quick test to see if the new glibc works."
   if   LD_LIBRARY_PATH="$LLP" $LD_SO /bin/true
   then echo "glibc is ready to install."
   else echo "glibc is not working as expected."
        echo "Compilation aborted before installing new glibc."
        false
   fi
  fi
 }

 supported_locales(){
  mkdir -pvm 755                $DESTDIR/usr/share/i18n
  cp    ../localedata/SUPPORTED $DESTDIR/usr/share/i18n
 }

 if   [ $HOSTTYPE == x86_64 ] && ! [[ $CFLAGS =~ -m32 ]]
 then LD_SO="$DESTDIR/lib64/ld-linux-x86-64.so.2"; LLP="$DESTDIR/lib64:$DESTDIR/usr/lib64"
 else LD_SO="$DESTDIR/lib/ld-linux.so.2"         ; LLP="$DESTDIR/lib:$DESTDIR/usr/lib"
 fi

 if [[ $HOSTTYPE == x86_64 ]] && [[ $CFLAGS =~ -m32 ]]; then
  export CC="gcc -m32"
  opts --host=${MACHTYPE/x86_64/i686}
  arch=i686; setarch=setarch
# else
#  arch=$HOSTTYPE
 fi

 if   [ -n "${FEATURE[base]}" ]
 then opts --enable-multi-arch
 fi

 unset LTDL_LIBRARY_PATH LD_LIBRARY_PATH LD_RUN_PATH

   CFLAGS="-O2 $( echo "${CFLAGS// /$LF}" | grep march )"
#CXXFLAGS="$CFLAGS"
  LDFLAGS='-Wl,-s -Wl,-O1'
   LC_ALL=C

#export CFLAGS CXXFLAGS LDFLAGS LC_ALL
 export CFLAGS LDFLAGS LC_ALL
 unset  CXXFLAGS

 mkdir -pvm 755 $DESTDIR/usr/include/sys
 mkdir -pvm 755 $DESTDIR/etc
 touch          $DESTDIR/etc/ld.so.conf

 KVER=$( uname -r | cut -d '.' -f-3 | tr -d '.' )
 if (( KVER >= 2630 )); then opts --enable-kernel=2.6.30; fi

 sed -i 's:/bin/pwd:pwd:g' configure

 mkdir build
 cd    build
 $setarch $arch \
 ../configure       \
  --prefix=/usr     \
  --disable-profile \
  --with-tls        \
  --with-elf        \
  --without-gd      \
  --without-cvs     \
  --enable-shared   \
  --enable-add-ons  \
  --enable-stackguard-randomization \
  --with-headers=/usr/include \
  $OPTS &&
 $setarch $arch make     all &&
 $setarch $arch make install install_root=$DESTDIR &&
 quick_test        &&
 supported_locales &&
 install_glibc
 ) }

post_install(){
          get_provider nss_ldap      |
 pipe     show_installed             |
 LC_ALL=C sort                       |
          uniq -d                    |
          pipe_queue $CAST_QUEUE

 /etc/init.d/locale-archive reload
 true
}

current(){
 case $VERSION in
# 2.14.1) [ -f /usr/include/rpcsvc/nis.h ] ;;
  2.11.1) [    -f  /usr/bin/getconf ] &&
          grep -qx /usr/bin/getconf $INSTALL_LOGS/glibc ;;
 esac
}
