    stable 2.12.2 2.11.2 2.11.1
  category development
 attribute library makej solo
   require perl linux-headers
      opts --without-selinux
  optional prelink '' '' for faster loading ELFs
    source $GNU_URL glibc/glibc-$VERSION.tar.xz
      home http://www.gnu.org/software/libc/
      docs http://www.gnu.org/software/libc/manual/
   exclude /etc/ld.so.cache
   exclude /etc/ld.so.conf
   exclude /etc/localtime
   protect /etc/hostname
   protect /etc/hosts
   protect /etc/host.conf
   protect /etc/hosts
   protect /etc/hosts.allow
   protect /etc/hosts.deny
   protect /etc/hosts.equiv
   protect /etc/hosts.lpd
   protect /etc/networks
   protect /etc/nsswitch.conf
   protect /etc/resolv.conf
   protect /lib/ld-linux.so.2
   protect /lib64/ld-linux-x86-64.so.2
   protect /sbin/ldconfig
case $HOSTTYPE in
 x86_64) RPATH='/usr/lib64/gconv' ;;
      *) RPATH='/usr/lib/gconv'   ;;
esac
  estimate 19000
      desc 'GNU implementation of a C library'

build(){ (

 install_glibc(){
  install -vm 600 ../nscd/nscd.conf $DESTDIR/etc/
  mkdir  -pvm 755                   $DESTDIR/var/db
  mkdir  -pvm 700                   $DESTDIR/var/db/nscd

  cd    $DESTDIR
  rm -f $DESTDIR/etc/{localtime,ld.so.*}

  ## ELF32 utilities installed by glibc are not essential to keep.
  # if   [[ $HOSTTYPE == x86_64 ]] && [[ $CC =~ -m32 ]]
  # then mv $DESTDIR/usr/bin $DESTDIR/usr/bin32
  # fi
 }


 quick_test(){
  if ! [[ $CC =~ -m32 ]]; then
   echo "Performing a quick test to see if the new glibc works."
   if   LD_LIBRARY_PATH="$LLP" $LD_SO /bin/true
   then echo "glibc is ready to install."
   else echo "glibc is not working as expected."
        echo "Compilation aborted before installing new glibc."
        false
   fi
  fi
 }


 supported_locales(){
  mkdir -pvm 755                $DESTDIR/usr/share/i18n
  cp    ../localedata/SUPPORTED $DESTDIR/usr/share/i18n
 }


 if [[ $HOSTTYPE == x86_64 ]] && [[ $CFLAGS =~ -m32 ]]; then
  export CC="gcc -m32"
  opts --host=${MACHTYPE/x86_64/i686}
 fi

 unset LTDL_LIBRARY_PATH LD_LIBRARY_PATH LD_RUN_PATH

    CFLAGS="-O2 $( echo "${CFLAGS// /$LF}" | grep march )"
  CXXFLAGS="$CFLAGS"
   LDFLAGS='-Wl,-s -Wl,-O1'
    LC_ALL=C

 export CFLAGS CXXFLAGS LDFLAGS LC_ALL

 mkdir -pvm 755 $DESTDIR/etc
 touch          $DESTDIR/etc/ld.so.conf

 if   [ $HOSTTYPE == x86_64 ]
 then LD_SO="$DESTDIR/lib64/ld-linux-x86-64.so.2"; LLP="$DESTDIR/lib64:$DESTDIR/usr/lib64"
 else LD_SO="$DESTDIR/lib/ld-linux.so.2"         ; LLP="$DESTDIR/lib:$DESTDIR/usr/lib"
 fi

 mkdir -pvm 755 $DESTDIR/usr/include/sys

#export PATH="/opt/binutils/2.18/bin:$PATH"
#patch -p1 < $SCRIPT_DIR/glibc-2.7.patch
#patch -p1 < $SCRIPT_DIR/glibc-2.7-i586-memcpy_chk.patch
#mv glibc-libidn-* libidn
 KVER=$( uname -r | cut -d '.' -f-3 | tr -d '.' )
 if (( KVER >= 2630 )); then opts --enable-kernel=2.6.30; fi

 LC_ALL=C grep -q /bin/pwd configure && sed -i 's:/bin/pwd:pwd:g' configure

 mkdir build
 cd    build
 ../configure      \
 --prefix=/usr     \
 --disable-profile \
 --with-tls        \
 --with-elf        \
 --without-gd      \
 --without-cvs     \
 --enable-shared   \
 --enable-add-ons  \
 --with-headers=/usr/include \
 $OPTS             &&
 make all          &&
 make install install_root=$DESTDIR &&
 supported_locales &&
 quick_test        &&
 install_glibc
 ) }


post_install(){
 ldconfig; rm -fr "${OLD_CACHE:-/var/cache/old}"
 ldconfig
          get_provider nss_ldap      |
 pipe     get_provider glibc-locales |
 pipe     show_installed             |
 LC_ALL=C sort                       |
          uniq -d                    |
          pipe_queue $CAST_QUEUE com

 /sbin/init u
 true
}

current(){
case $VERSION in
 2.11.1) [    -f  /usr/bin/getconf ] &&
         grep -qx /usr/bin/getconf $INSTALL_LOGS/glibc ;;
esac
}
