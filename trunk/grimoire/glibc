# Update glibc-locales and when updating glibc

    stable 2.7
  category development
 attribute library solo
   require binutils-v2.18 perl linux-headers
      opts --without-selinux
       url $GNU_URL
    source glibc/glibc-$VERSION.tar.bz2
    source glibc/glibc-libidn-$VERSION.tar.bz2
  homepage http://www.gnu.org/software/libc
   exclude /etc/ld.so.cache
   exclude /etc/ld.so.conf
   exclude /etc/localtime
   protect /etc/hostname
   protect /etc/hosts
   protect /etc/host.conf
   protect /etc/hosts
   protect /etc/hosts.allow
   protect /etc/hosts.deny
   protect /etc/hosts.equiv
   protect /etc/hosts.lpd
   protect /etc/networks
   protect /etc/nsswitch.conf
   protect /etc/resolv.conf
   protect /lib/ld-linux.so.2
   protect /lib64/ld-linux-x86-64.so.2
   protect /sbin/ldconfig
case $HOSTTYPE in
 x86_64) RPATH='/usr/lib64/gconv' ;;
      *) RPATH='/usr/lib/gconv'   ;;
esac
  estimate 19500
      desc 'glibc is the GNU implementation of a C library.'

build(){ (

 del_library_cache(){
  ldconfig
  rm -fr ${LIBRARY_CACHE:-/lib.old}
  ldconfig
  true
 }


 install_glibc(){
  install -vm 600 ../nscd/nscd.conf $IR/etc/
  mkdir   -vp                       $IR/var/db
  mkdir   -vm 700                   $IR/var/db/nscd

  cd    $IR
  rm -f $IR/etc/{localtime,ld.so.*}

  elf_of glibc > $ELF_LOGS/glibc

  prepare_install

  LD_LIBRARY_PATH="$LLP" LD_PRELOAD="$LPO" $LD_SO /bin/cp -av * /

  del_library_cache
  true
 }


 quick_test(){
  echo "Performing a quick test to see if the new glibc works."
  if   LD_LIBRARY_PATH="$LLP" $LD_SO /bin/true
  then echo "glibc is ready to install."
  else echo "glibc is not working as expected."
       echo "Compilation aborted before installing new glibc."
       false
  fi
 }


 supported_locales(){
  mkdir -p                      $IR/usr/share/i18n
  cp    ../localedata/SUPPORTED $IR/usr/share/i18n
 }


  LPO="$LD_PRELOAD"
 unset  LD_PRELOAD LTDL_LIBRARY_PATH LD_LIBRARY_PATH LD_RUN_PATH

 export   CFLAGS="-O2 $( echo "${CFLAGS// /$LF}" | grep march )"
 export CXXFLAGS="$CFLAGS"
 export LDFLAGS='-Wl,-s -Wl,-O1'
 export LC_ALL=C

           IR=$PWD/install
 mkdir -p $IR/etc
 touch    $IR/etc/ld.so.conf

 if   [ $HOSTTYPE == x86_64 ]
 then LD_SO="$IR/lib64/ld-linux-x86-64.so.2"; LLP="$IR/lib64:$IR/usr/lib64"
 else LD_SO="$IR/lib/ld-linux.so.2"         ; LLP="$IR/lib:$IR/usr/lib"
 fi

 mkdir -p $IR/usr/include/sys

 export PATH="/opt/binutils/2.18/bin:$PATH"
 patch -p1 < $SCRIPT_DIR/glibc-2.7.patch
 patch -p1 < $SCRIPT_DIR/glibc-2.7-i586-memcpy_chk.patch
 mv glibc-libidn-* libidn
 KVER=$( uname -r | cut -d '.' -f-3 | tr -d '.' )
 (( KVER >= 2624 )) &&
 opts --enable-kernel=2.6.24

 mkdir build
 cd    build
 ../configure      \
 --host=$BUILD     \
 --build=$BUILD    \
 --prefix=/usr     \
 --disable-profile \
 --with-tls        \
 --with-elf        \
 --without-gd      \
 --without-cvs     \
 --enable-shared   \
 --enable-add-ons  \
 --with-headers=/usr/include \
 $OPTS             && # make all tests install install_root=$IR &&
 make all install install_root=$IR &&
 supported_locales &&
 quick_test        &&
 install_glibc
 ) }


post_install(){
 default_post_install
          get_provider  nss_ldap |
 pipe     show_installed         |
 LC_ALL=C sort                   |
          uniq -d                |
          pipe_queue $CAST_QUEUE com
 /sbin/init u
}
