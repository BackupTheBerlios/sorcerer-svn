# boost version 1_47_0 headers have errors
# /usr/include/boost/random/linear_congruential.hpp:460:15: error: 'rand48' is already declared in this scope

# Unusual method of separating version parts with _ instead of .
# cause the latest version of boost to not track

# Upgrade to 1_50_0 causes failures in several other software projects
# that require boost during compilation and runtime
# such as wesnoth, ...
# regressing from version 1_50_0 to 1_49_0

# 1_46_1 will not compile with gcc version 4.7.1 and requires older.

   version   stable 1_49_0 1_46_1
#  version unstable 1_50_0 
   require Python boost-jam bzip2 cmake icu4c zlib
#      opts -DCMAKE_INSTALL_PREFIX:PATH=/usr
#      opts -DBUILD_VERSIONED:BOOL=FALSE
#      opts -DCMAKE_IS_EXPERIMENTAL=YES_I_KNOW
#      opts -DBUILD_STATIC:BOOL=FALSE
#      opts -DBUILD_DEBUG:BOOL=FALSE
  category development
 attribute hidden library
#attribute multilib-fail
    source $SOURCEFORGE_URL boost/boost/${VERSION//_/.}/boost_$VERSION.tar.bz2
      info good 20120716
      info last 20120628
      info home http://www.boost.org/
      info docs http://www.boost.org/doc/
      desc 'additional C++ libraries
boost was begun by members of the C++ standards
committee Library Working Group to provide free
peer-reviewed portable libraries to the C++ community.
An additional objective is to establish
existing practice and provide reference
implementations so that the Boost libraries
are suitable for eventual standardization.
Indeed, the explicit intent is to propose many of these
libraries for inclusion in the C++ Standard Library.
The Boost Graph Library, formerly known as the Generic
Graph Component Library (GGCL), is a collection of graph
algorithms and data structures created in the generic
programming style of the Standard Template Library (STL).'

build(){
 local LIBDIR ADDRESS_MODEL
 sed -i 's:-O3:-O2:' tools/jam/src/build.jam
 ./bootstrap.sh --prefix=/usr &&

## that did not work, maybe it installed them without DESTDIR?
# if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
# then LIBDIR='--libdir=/usr/lib64'
# else LIBDIR='--libdir=/usr/lib'
# fi

 if   [[ $HOSTTYPE == x86_64 ]] && [[ $CFLAGS =~ -m32 ]]
 then ADDRESS_MODEL="address-model=32"
 fi

 ./bjam $ADDRESS_MODEL cflags="$CFLAGS" cxxflags="$CXXFLAGS" -q $LIBDIR --layout=tagged variant=release link=shared threading=multi runtime-link=shared stage -j${CAST_RATE:-2} &&
 ./bjam $ADDRESS_MODEL cflags="$CFLAGS" cxxflags="$CXXFLAGS" -q $LIBDIR --layout=tagged variant=release link=shared threading=multi runtime-link=shared --prefix=$DESTDIR/usr install &&

 if   [[ $HOSTTYPE == x86_64   ]]; then
  if  [[ $CFLAGS   =~ -m32     ]]; then mv $DESTDIR/usr/lib{,32}
                                   else mv $DESTDIR/usr/lib{,64}
   if [[ -d $DESTDIR/usr/lib32 ]]; then mv $DESTDIR/usr/lib{32,}; fi
  fi
 fi
}
