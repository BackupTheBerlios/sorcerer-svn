#!/bin/bash

### BEGIN INIT INFO
# Provides: rpc.nfsd
# Required-Start: rpc.mountd var_lib_nfs
# Required-Stop:  rpc.mountd kill
# Should-Start: portmap $network
# Should-Stop:  portmap $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: rpc.nfsd implements the user level part of the NFS service.
# Description: rpc.nfsd merely starts the specified number of kernel threads.
### END INIT INFO

. /lib/lsb/init-functions

SERV=/sbin/rpc.nfsd
NAME=rpc.nfsd
OPTS=8

start(){
 run(){
#  modprobe nfs
#  modprobe nfs_acl
#  modprobe nfsd

  exportfs -r
  pkill -1 "^nfsd$"
  start_daemon $SERV $OPTS
 }

 if   log_warning_msg  "$NAME starting"; run
 then log_success_msg  "$NAME started"
 else log_failure_msg  "$NAME not started"; status
 fi
}

# stop_new hung runlevel 6 on a box
stop_new(){
 run(){
  exportfs -au
  $SERV 0
 }

 log_warning_msg "$NAME stopping"; run
 log_success_msg "$NAME stopped"
}

stop(){
 run(){
  exportfs -au
  kill -s 9 $( /bin/pidof -o %PPID nfsd )
 }
 log_warning_msg "$NAME stopping"; run
 log_success_msg "$NAME stopped"
}

try_restart(){
 stop
 start
}

parse "$@"
