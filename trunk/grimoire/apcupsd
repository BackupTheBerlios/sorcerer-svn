   VERSION=( 3.14.2 3.14.0 3.12.4 3.12.3 3.12.2 3.12.1 )
    IGNORE="^3\.15\.\|win\|beta"
# 3.13.x are developmental releases
  CATEGORY='utility'
 ATTRIBUTE='console new'
    SOURCE="apcupsd/apcupsd-$VERSION.tar.gz"
  HOMEPAGE='http://apcupsd.sourceforge.net'
       URL="$SOURCEFORGE_URL"
       REQ=( "email-client init-functions system-logger"
             "tcp_wrappers:--with-libwrap=/usr/lib::for an optional method of controlling access"
             "ncurses:--enable-powerflute::for the optional powerflute curses-based control panel"
             "httpd:--enable-cgi --with-cgi-bin=/usr/share/httpd/cgi-bin::and build CGI programs to permit web access to apcupsd data" )
  ESTIMATE='1500'
 FRESHMEAT="apcupsd"
      DESC="apcupsd manages and controls most of APC's UPS models
apcupsd can be used for power mangement and controlling 
most of APC's UPS models on Unix and Windows machines. 
Apcupsd works with most of APC's Smart-UPS models as well 
as most simple signalling models such a Back-UPS, and 
BackUPS-Office. During a power failure, apcupsd will inform 
the users about the power failure and that a shutdown may 
occur. If power is not restored, a system shutdown will 
follow when the battery is exhausted, a timeout (seconds) 
expires, or runtime expires based on internal APC calculations 
determined by power consumption rates.
"
build() {

 modify_mount() {
   SS="Should-Stop:"
   US="UPSdown"
   MNT_SCRIPT="/etc/init.d/mount"

   if ! ( grep "$SS" $MNT_SCRIPT | grep "$US" ); then
	if [ grep -q "$SS" ]; then
	  sed  -i "s/$SS /$SS $US/"  $MNT_SCRIPT
	else
	  POS=$( grep -n "Should-Start:" $MNT_SCRIPT | cut -f1 -d":" )
	  sed  -i "$(( ++POS ))i\# $SS $US"  $MNT_SCRIPT
	fi
   fi
 }

 modify_mount		&&

 ./configure     --build=$BUILD                                  \
                 --prefix=/usr                                   \
                 --sysconfdir=/etc/apcupsd                       \
                 --localstatedir=/var                            \
                 --enable-usb                                    \
                 --with-log-dir=/var/log                         \
                 --with-serial-dev=/dev/usb/hiddev[0-15]         \
                 $OPTS                                           &&

 make                    &&
 prepare_install         &&
 make  install           

}

