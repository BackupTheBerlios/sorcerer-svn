# remeber check /usr/lib/libdb-4.6.so or whatever library it installs
# to make sure it linked with libpthread.

   VERSION=( 4.6.21 4.6.19 4.6.18 4.5.20 4.4.20 )
      SAFE=( 4.6.21 4.6.19 4.6.18 4.5.20 4.4.20 )
    IGNORE='\.NC\|cd\|^4\.1\.24'
  CATEGORY='db'
 ATTRIBUTE='library'
    SOURCE=( "db-$VERSION.tar.gz" )
#              "patch.$VERSION.1"
#              "patch.$VERSION.2" )
#             "patch.$VERSION.3"
#             "patch.$VERSION.4" )
#      URL=(  "ftp://sleepycat1.inetu.net/releases/"
       URL=( "http://download.oracle.com/berkeley-db/"
             "http://www.oracle.com/technology/products/berkeley-db/db/update/$VERSION/" )
#            "http://www.sleepycat.com/update/$VERSION/" )
#            "http://www.sleepycat.com/update/snapshot"
# j2sdk is not gcc 3.4.1 compatibile.
# and so we must get rid of it for db to link
      OPTS='--enable-static=no'
 CONFLICTS='j2sdk'
#  Removing j2sdk as an optional requirement helps
#  avoid a recrusive requirement loop
#   'j2sdk:--enable-java::for java support'
# HOMEPAGE='http://www.sleepycat.com'
  HOMEPAGE='http://www.oracle.com/technology/software/products/berkeley-db/db/index.html'
      VURL='http://www.oracle.com/technology/software/products/berkeley-db/db/index.html'
 FRESHMEAT='berkeleydb'
  ESTIMATE='1200'
      DESC='db also called Berkeley DB provides database support.
db also called Berkeley DB is a programmatic toolkit that provides 
fast, reliable, scalable, and mission-critical database support in 
software ranging from applications running on hand-held appliances 
to enterprise-scale servers.'

build()  {
PCX=1
while  [  -n  "${SOURCE[$PCX]}"  ];  do
  patch  -p0  <  $SOURCE_CACHE/$SPELL/$VERSION/${SOURCE[$PCX]}
  ((  PCX++  ))
done

if    spell_installed  $(  get_provider  j2sdk  )
then  OPTS="${OPTS}  --enable-java"
fi


case  $VERSION  in
  4.3.29)   export   LDFLAGS="-lpthread  $LDFLAGS"  ;;
  4.3.28)   export   LDFLAGS="-lpthread  $LDFLAGS"  ;;
  4.3.27)   export   LDFLAGS="-lpthread  $LDFLAGS"  ;;
esac


cd  build_unix &&
../dist/configure   \
--prefix=/usr       \
--build=$BUILD      \
--enable-dynamic    \
--enable-compat185  \
--enable-cxx        \
$OPTS               &&
make                &&
prepare_install     &&
make    install     &&
rm     -rf  /usr/docs
}


post_install()  {
  default_post_install
            get_provider  openldap |
  pipe      show_installed         |
  LC_ALL=C  sort                   |
            uniq  -d               |
            pipe_queue  $CAST_QUEUE  com
}


current()  {
case  $VERSION  in
  4.5.20)  grep  -qx  "patching file rep/rep_record.c"  $COMPILE_LOGS/db  ;;
  4.4.20)  grep  -qx  "patching file mp/mp_fget.c"      $COMPILE_LOGS/db  ;;
esac
}
