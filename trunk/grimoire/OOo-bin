   VERSION=( "2.1.0_LinuxIntel_install_en-US" "2.0.4_LinuxIntel_install" "2.0.3_LinuxIntel_install" "2.0.2_LinuxIntel_install" )
      SAFE=( "2.1.0_LinuxIntel_install_en-US" )
    IGNORE="wJRE\|system"
  CATEGORY="utility/office utility/editor"
 ATTRIBUTE="x86 noheal x11 new"
    SOURCE="${VERSION:0:5}/OOo_$VERSION.tar.gz"
       URL="http://mirrors.isc.org/pub/openoffice/stable/"
#    SOURCE="openoffice_net_install-${VERSION}.tar.bz2"
#       URL="http://sorcerer.wox.org/download/sources/openoffice/$VERSION/"
  HOMEPAGE="http://www.openoffice.org"
  disable  archive
       REQ=( "unzip zip java gnome-vfs"
             "kdelibs:::for optional kde support"
             "libsndfile:::for optional libsndfile support" )
  ESTIMATE="85"
      DESC="OOo-bin provides pre-compiled Open Source Office Suite.
OOo-bin (OpenOffice.org) provides an open source
office suite that runs on all major platforms and
provides access to all functionality and data through
open-component based APIs and an XML-based file format.
It can open M$ Office Documents."

build() {

 install_rpms()  {
   cd  /
   for i in $BUILD_DIR/RPMS/*.rpm ; do
     echo "---> Unpacking $i"
     rpmunpack < $i  |  gzip -d  |  cpio -idm 
   done
   cd  - 
 } 

 desktop_integration() {
   local  DI_NAME="freedesktop"
   cd  /
   echo "---> Unpacking desktop integration files ($DI_NAME)"
   rpmunpack <   \
	$BUILD_DIR/RPMS/desktop-integration/openoffice.org-${DI_NAME}-*.rpm |
   	gzip -d  |  cpio -idm
   cd  - 
 }

 create_links() {
   ln -sf  /opt/openoffice.org2.1  /etc/openoffice.org-2.1
 }

 prepare_install  	&&
 install_rpms		&&
 desktop_integration	&&
 chmod a+rX /usr/bin	&&
 create_links
}

post_install() {
 $SCRIPT_DIR/postinst configure
 default_post_install
}

pre_remove() {
 # backing all entries pointing to our binary
 [ -f /etc/mailcap ]  &&  sed -i '/openoffice.org-2.1/d' /etc/mailcap
 default_pre_remove
}

post_remove()  {
 mime_update()  {
  if [ -x /usr/bin/update-mime-database ]; then
    update-mime-database /usr/share/mime
  fi
  if [ -x /usr/bin/update-desktop-database ]; then
    update-desktop-database -q /usr/share/applications
  fi
  if [ -x /usr/bin/update-menus ]; then
    update-menus
  fi
  for theme in gnome hicolor locolor; do
    if [ -e /usr/share/icons/$theme/icon-theme.cache ] ; then
      # touch it, just in case we cannot find the binary...
      touch /usr/share/icons/$theme
      if (which gtk-update-icon-cache); then
        gtk-update-icon-cache /usr/share/icons/$theme
      fi
      # ignore errors (e.g. when there is a cache, but no index.theme)
      true
    fi
  done
 }

 mime_update
 default_post_remove
}
