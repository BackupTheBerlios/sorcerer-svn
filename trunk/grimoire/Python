# firefox's compilation require Python's bzip2 module.

with info    edit 20131124
with info    last 20131120
with version stable 2.7.6 2.7.5
with base    bzip2 expat gmp libffi ncurses pkgconfig readline zlib
#with base    bzip2 db expat gmp libffi ncurses pkgconfig readline zlib
#with elect   bzip2
with elect   db
with elect   gdbm
with elect   openssl '' '' for secure socket connections
with elect   sqlite  '' '' for sqlite support
with also    --with-system-expat --with-system-ffi
with also    --prefix=/usr --enable-shared --enable-ipv6

# Commenting outwit elect   on tk to avoid recursive requirement loop
#with elect   tk      '' '' to use tk for GUI and graphics

with role    development/interpreter
with trait   console hidden library makej optimize x11
with source  stable http://www.python.org/ftp/python/$VERSION/ \
             ftp://ftp.python.org/pub/python/$VERSION/ \
             Python-$VERSION.tar.xz
with source  secure http://www.python.org/ftp/python/$VERSION/ \
             ftp://ftp.python.org/pub/python/$VERSION/ \
             Python-$VERSION.tar.xz
with info    vurl http://www.python.org/download/
with info    home http://www.python.org/
with info    docs http://www.python.org/doc/
with info    freecode python
with info    cite 'interpreted, interactive, object-oriented programming language
It combines remarkable power with very
clear syntax, and is not difficult to learn.
It has modules, classes, exceptions, very
high level data types, and dynamic typing.
There are interfaces to many system calls
and libraries, as well as to various
windowing systems
(Tk, Mac, MFC, GTK+, Qt, wxWindows).
Newbuilt-in modules are easily written in C or C++.
Python is also usable as an extension language for
applications that need a programmable interface.'

build(){
 wrappers(){
  sed     -i 's:-m32::g'                  "$DESTDIR"/usr/lib/python2.7/config/Makefile
  install -m 644 "$SCRIPT_DIR"/pyconfig.h "$DESTDIR"/usr/include/python${VERSION:0:3}/
  install -m 755 "$SCRIPT_DIR"/python     "$DESTDIR"/usr/bin/
  cp      -al                             "$DESTDIR"/usr/bin/python{,${VERSION:0:3}}
  cp      -al                             "$DESTDIR"/usr/bin/python{,${VERSION:0:1}}
 }

 bit_move(){
  if [ -h  "$DESTDIR"/usr/bin/python ]; then
   rm  -f  "$DESTDIR"/usr/bin/python
   cp -al  "$DESTDIR/usr/bin/python"{${VERSION:0:3},}
  fi
  mv   -v  "$DESTDIR"/usr/bin/python{,-$1}
  mv   -v  "$DESTDIR"/usr/bin/python${VERSION:0:3}{,-$1}
  mv   -v  "$DESTDIR"/usr/include/python${VERSION:0:3}/pyconfig{,-$1}.h
 }

 rm_bytecode(){
  find "$DESTDIR"/usr/lib* -type f -name \*\.pyc | while read; do rm -v "$REPLY"; done
  find "$DESTDIR"/usr/lib* -type f -name \*\.pyo | while read; do rm -v "$REPLY"; done
 }

 add_dlfcn(){
  Tools/scripts/h2py.py < /usr/include/dlfcn.h > DLFCN.py
  if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
  then mv DLFCN.py "$DESTDIR"/usr/lib64/python2.7/DLFCN.py
  else mv DLFCN.py "$DESTDIR"/usr/lib/python2.7/DLFCN.py
  fi
 }

 if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]; then
  sed -i 's:/lib/python:/lib64/python:'     Lib/distutils/command/install.py
  sed -i 's:lib", "py:lib64", "py:'         Lib/distutils/sysconfig.py
  sed -i 's:"lib":"lib64":'                 Lib/site.py
  sed -i 's:/lib/python:/lib64/python:'     Lib/sysconfig.py
  sed -i 's:$(prefix)/lib:$(prefix)/lib64:' Makefile.pre.in
  sed -i '/Py_ENABLE_SHARED/,+1d'           Misc/python-config.in
  sed -i 's:lib/python:lib64/python:'       Modules/getpath.c
 fi

 # The environment variable PYTHONDONTWRITEBYTECODE
 # does not seem to to have the effect suggested
 # by the Python manual page.

 local  PYTHONDONTWRITEBYTECODE
 export PYTHONDONTWRITEBYTECODE=1

 ./configure $OPTS &&
 make install "OPT=$CFLAGS" DESTDIR="$DESTDIR" &&
 add_dlfcn &&
 rm_bytecode &&
 if    [[ $HOSTTYPE == x86_64      ]] &&
     ! [[ -n ${TRAIT[monolib]} ]]; then
  if   [[ $CFLAGS   =~ -m32        ]]; then bit_move 32
  elif [[ -f /lib/libc.so.6        ]]; then bit_move 64; wrappers
  fi
 fi &&
 rm -f "$DESTDIR"/usr/bin/{2to3,python}
 # Python3 installs /usr/bin/2to3
}

post_install(){
 ( export LC_ALL=C
   if   [ -n "$INSTALL_INDEX" ]
   then grep -r  "/lib/python\|lib64/python" "$INSTALL_INDEX"
   else grep -r  "/lib/python\|lib64/python" "$INSTALL_LOGS"
   fi |
   grep -v ":/lib/python${VERSION:0:3}/" |
   cut  -d  : -f1       |
   sort -u  | basenames |
   grep -v   "^Python"  |
   pipe_queue "$LOAD_QUEUE"
   leech
   if   [ -n "$INSTALL_INDEX" ]
   then grep -r  "/lib/python\|lib64/python" "$INSTALL_INDEX"
   else grep -r  "/lib/python\|lib64/python" "$INSTALL_LOGS"
   fi |
   grep -v ":/lib/python${VERSION:0:3}/" |
   cut  -d  : -f1       |
   sort -u  | basenames |
   grep -v   "^Python"  |
   pipe_queue "$MOIL_QUEUE" )
}

current(){
 case $VERSION in
  2.7.5) if   [  -f /usr/bin/python ]; then
          chattr -i /usr/bin/python
          rm     -f /usr/bin/python
         fi ;;
 esac
}
