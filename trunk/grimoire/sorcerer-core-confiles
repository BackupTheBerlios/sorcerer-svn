   VERSION=( "0.0.1" )
  CATEGORY="security"
 ATTRIBUTE="core new noheal"
    SOURCE=""
       URL=""
  HOMEPAGE=""
  ESTIMATE=""
       REQ=(""
            ":--backup::backup previous ones with .old extension" 
						":--apply::apply new files, else copy it  with .new extension ")
      DESC=("this spell provide core configuration files"
"this spell is used to update sorcerer box when security/new configuration files
issue are found that must be applied to all sorcerer box
")
  ESTIMATE="9"
      DESC="thunderbird is a new UI to gecko the mozilla mail client engine."

#desactivate leeching facility since all sources are in 
get_source() {
}

#the spell is organinized as follow :
#a sorcerer-core-confile.d directory containing the directories
#   etc/   : contain base configuration files
#   cast/  : a cast queue to oblige some spell to be recast
#   chmod/ : a set of "chmod scripts" (scripts containing chmod lines)
#how it work : it use /etc/sorcerer/last_core_file_update file to detect which
#part of the script to apply, it'll find files included into etc/ subdir that are
#newer than lastupadate, then according to the configuration it'll overwrite
#the file and backup it or copy it as new....

update() {
	while read; do
		echo $REPLY | sed "s:/[^/]*$::" | xargs mkdir -p
		if ! test -f /etc/$REPLY
		then
			cp -Rp $SCRIPT_DIR/$REPLY /etc/REPLY
		elif [ "$(stat -c "%Y" /etc/$REPLY)" -gt "$(stat -c "%Y" $SCRIPT_DIR/$REPLY)" ]
		then

			if echo $OPTS | grep -q "--backup" 
			then
				mv /etc/$REPLY /etc/$REPLY.old
			fi

			if echo $OPTS | grep -q "--apply"
			then
				cp -Rp $SCRIPT_DIR/$REPLY /etc/$REPLY
			else
				cp -Rp $SCRIPT_DIR/$REPLY /etc/$REPLY.new
			fi

		fi
	done
}


build() {
	VERSION_FILE=${VERSION_FILE:=/etc/sorcerer/last_core_file_update}
	
	if [ -f $VERSION_FILE ]; then
		find $SCRIPT_DIR/etc -L -cnewer $VERSION_FILE  -printf "%P\n"  |update
	else
		#first update
		find $SCRIPT_DIR/etc -type f -printf "%P\n" |update
	fi
}


post_build() {
	unlock_cast
	cast -c $(find $SCRIPT_DIR/cast -cnewer $VERSION_FILE -printf "%P ")
	touch $VERSION_FILE
	find $SCRIPT_DIR/chmod -cnewer $VERSION_FILE | xargs
}

