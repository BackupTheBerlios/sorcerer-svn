# Always check MesaLib when updating llvm
# cmake causes llvm to install with unusual sonames.

# must check for new releases manually
# configure only installs ar libraries and not ELF.
# Very odd.
# OpenGTL refuses to compile with llvm when llvm has assertions enabled
# -DCMAKE_BUILD_TYPE=RELEASE release builds turn off assertions support

# llvm's ocaml bindings breaks compilation however
# --enable-bindings=none circumvents the break
# by not compiling the ocaml bindings

# MesaLib version 9.1.3 does not compile with llvm version 3.3
# However llvm version 3.3 compiled and installed fine.

with info    good 20130602
with info    last 20130622
with version   stable 3.3 3.2 3.0
with version unstable 3.3
with base    Python cmake gcc-g++
#with base    gcc-g++ perl--Pod-Simple
# with also    --enable-shared --disable-docs
# with also    --enable-bindings=none
# with also    --disable-assertions
with also    -DCMAKE_BUILD_TYPE=RELEASE
with also    -DBUILD_SHARED_LIBS:BOOL=TRUE
with also    -DLLVM_ENABLE_ASSERTIONS:BOOL=FALSE
with also    -DLLVM_INCLUDE_TESTS:BOOL=FALSE 
with also    -DLLVM_BUILD_TESTS:BOOL=FALSE
with also    -DLLVM_INCLUDE_EXAMPLES:BOOL=FALSE
with also    -DLLVM_BUILD_EXAMPLES:BOOL=FALSE
with also    -DCLANG_BUILD_EXAMPLES:BOOL=OFF
with role    development/emulator
# lto compilation requires too much RAM
with trait   console library makej lto_off multilib-dual no_patcher
# Must be multilib-dual while
# ./configure accepts but source disregards --libdir=/usr/lib64
with source    stable http://www.llvm.org/releases/$VERSION/llvm-$VERSION.src.tar.gz
with source    stable http://www.llvm.org/releases/$VERSION/cfe-$VERSION.src.tar.gz
with source    stable http://www.llvm.org/releases/$VERSION/clang-tools-extra-$VERSION.src.tar.gz
with source  unstable http://www.llvm.org/releases/$VERSION/llvm-$VERSION.src.tar.gz
with source  unstable http://www.llvm.org/releases/$VERSION/cfe-$VERSION.src.tar.gz
with source  unstable http://www.llvm.org/releases/$VERSION/clang-tools-extra-$VERSION.src.tar.gz
with info    home http://www.llvm.org
with info    vurl http://www.llvm.org/releases/
#with clash   ocaml
with info    cite 'low level virtual machine'

build(){
 if   [  -d cfe-3.3.src ]
 then mv -v cfe-3.3.src tools/clang
 fi

 if   [  -d clang-tools-extra-$VERSION.src ]
 then mv -v clang-tools-extra-$VERSION.src tools/clang/tools/clang
 fi

 if     [[ $HOSTTYPE == x86_64 ]] &&
      ! [[ $CFLAGS   =~ -m32   ]]
 then with also -DLLVM_LIBDIR_SUFFIX:STRING=64
      sed -i 's:/lib:/lib64:' tools/llvm-config/llvm-config.cpp
 fi
 default_build
}

build_broke(){
 if     [[ $HOSTTYPE == x86_64 ]] &&
      ! [[ $CFLAGS   =~ -m32   ]]
 then sed -i 's:LLVM_LIBDIR="${prefix}/lib":LLVM_LIBDIR="${prefix}/lib64":' configure
 fi
 default_build
}

build_broke(){
 sedit_files(){
  if     [[ $HOSTTYPE == x86_64 ]] &&
       ! [[ $CFLAGS   =~ -m32   ]]
  then echo sed -i 's:LLVM_LIBDIR "/usr/lib":LLVM_LIBDIR "/usr/lib64":' include/llvm/Config/config.h
            sed -i 's:LLVM_LIBDIR "/usr/lib":LLVM_LIBDIR "/usr/lib64":' include/llvm/Config/config.h
  fi
 }

 mv_lib(){
  if     [[ $HOSTTYPE == x86_64 ]] &&
       ! [[ $CFLAGS   =~ -m32   ]]
  then mv -v "$DESTDIR"/usr/lib{,64}
  fi
 }

 ./configure -sysconfdir=/etc --localstatedir=/var --prefix=/usr $OPTS &&
 sedit_files &&
 make        &&
 make install DESTDIR="$DESTDIR" &&
 mv_lib
}

current(){
 case $VERSION in
  3.2) if     [[ $HOSTTYPE == x86_64 ]] &&
            ! [[ $CFLAGS   =~ -m32   ]]
       then llvm-config --ldflags | grep -q /usr/lib64
       fi ;;
 esac
}

build_broke(){
# if     [[ $HOSTTYPE == x86_64 ]] &&
#      ! [[ $CFLAGS   =~ -m32   ]]
# then with also -DLLVM_LIBDIR_SUFFIX=64
# fi

# Did not work.
 if     [[ $HOSTTYPE == x86_64 ]] &&
      ! [[ $CFLAGS   =~ -m32   ]]
 then with also --libdir=/usr/lib64
 fi

 rm -f CMakeLists.txt
 default_build &&
 if     [[ $HOSTTYPE == x86_64 ]] &&
      ! [[ $CFLAGS   =~ -m32   ]]
 then mv -v "$DESTDIR"/usr/lib{,64}; true
 fi
}
