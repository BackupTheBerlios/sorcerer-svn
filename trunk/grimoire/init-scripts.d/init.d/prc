#!/bin/bash
# Copyright 2011, 2012, 2013 by Kyle Sallee
# All Rights Reserved
# For use on Modern Magic only
# Default-Mode: 500

trap : INT QUIT TSTP
export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
umask 022

allow_sulogin(){
 if   LC_ALL=C /bin/setleds       2>/dev/null | LC_ALL=C grep -q "Current flags:.*CapsLock on"
 then LC_ALL=C /bin/setleds -caps &>/dev/null; sulogin -t 10; echo
 fi
}

run(){
 if ! [ -f $1 ]; then return 1; fi
 if ! [ -x $1 ]; then return 1; fi
 $1 $2
}

linear(){ for F in /etc/rc.d/rc${RL}.d/${1}*; do run $F $2; allow_sulogin; done; }

linear(){
#for F in              /etc/rc.d/rc${RL}.d/${1}*;
 for F in $( /bin/find /etc/rc.d/rc${RL}.d/ -type l -name $1\* | /bin/sort )
 do $F $2
 done
}

# Breaking out of the loop early might cause a bug.

parallel(){
 SEQ=0
 while [ $SEQ -lt 100 ]; do
  if   [ $SEQ -lt 10  ]; then NOW="0$SEQ"; else NOW="$SEQ"; fi
  for F in /etc/rc.d/rc${RL}.d/$1${NOW}*; do run $F $2 & done
  wait
  SEQ=$(($SEQ+1))
 done
}

ssp(){ parallel K stop; parallel S start; }
ssl(){ linear   K stop; linear   S start; }
rcl(){ find /etc/rc.d/rc${RL}.d/ -type l; }
log(){ echo -e "\r[KRunlevel $RL Begin"; $1
       echo -e "\r[KRunlevel $RL ${SECONDS}s End"; }

ssm(){
 while [ -n "$1" ]; do
  if   [[  $1 =~ d/K ]]
  then run $1 stop
  else run $1 start
  fi
  shift
 done
}

match(){
 local m="$1"
 shift
 while [ -n "$1" ]
 do if [ "$m" == "$1" ]; then return 0; else shift; fi
 done
 return 1
}

rl_ns(){
 local ns
 local ran=1
 local rl
 if   (( RL == 0 )) || (( RL > 5 ));   then rl="$RL"
 elif match "$RL" $(< /proc/cmdline ); then rl="$RL"
 fi

 while [ -n "$1" ]; do
  if (( $1 == 1 )); then shift; continue; fi

  ns=$( /bin/tr '\000' '\n' < /proc/$1/cmdline | /bin/grep /+/ )
  echo "$ns Entering"
## without being instructed to not fork nsenter created a zombie
## by not waiting for prc to exit and read prc's exist status.
## possible bug in nsenter?
# /bin/nsenter -t $1 -i -m -n -p -r -u -w \
  /bin/nsenter -t $1 -i -m -n -p -r -u -w -F \
  /etc/init.d/prc $rl
  ran=0
  echo "$ns Exiting"
  shift
 done

 return $ran
}

rn(){ rl_ns $( /bin/pgrep -u 0 -f "init namespace /\+/" ); }

RL="$1"

if   [ -z "$RL" ]
then RL=$( /bin/grep initdefault /etc/inittab | cut -d : -f2 )
fi
RL=${RL:-5}

if   ! [ -d /proc/$$/ ] &&
       [ -x /etc/init.d/proc ]
then        /etc/init.d/proc start
fi

case $RL in
     0|6) rn || /etc/init.d/rc.d stop; log ssl ;;
 3|5|1|7) rn || log ssl ;;
     4|2) rn || log ssp ;;
esac
