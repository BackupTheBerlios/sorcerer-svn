#!/bin/bash

### BEGIN INIT INFO
# Default-Mode: 500
# Required-Start: fsck mtab $local_fs
# Should-Start: root-rw
# Required-Stop: cryptmount cryptsetup finale halt mdadm reboot reboot-kexec vgchange
# Should-Stop: root-ro
# Default-Start: S
# Short-Description: mounts root file systems in unshared namespaces and executes /init within each
### END INIT INFO

# Top stop a namespace simply kill all the processes within it.  :)
# or from within it run /etc/init.d/prc 0 or /etc/init.d/prc 6
# rebooting and halting sysvinit commands only run on rootfs.

. /lib/lsb/init-functions

if   ! rootfs
then log_failure_msg "$0 can only be executed on the rootfs"; trap - EXIT; exit 1
fi

if ! [ -h /proc/$$/ns/pid ]; then
 log_failure_msg "PID namespace can not be unshared."
 log_failure_msg "The linux kernel was improperly configured."
 trap - EXIT
 exit 1
fi

only start
deny control

run_unshare(){
 while [ -n "$1" ]
 do    /bin/setsid /bin/unshare -imnpu -- /init chroot "$1" & shift
 done
}

find_roots(){
 for r in /+/*/init
 do  if [ -f $r ] && [ -x $r ]; then echo "${r%/*}"; fi
 done
}

start(){
 if   log_warning_msg "namespace execute"; run_unshare $( find_roots )
 then log_success_msg "namespace execute"
 else log_success_msg "namespace execute"
 fi
}
