#!/bin/bash

# Copyright Kyle Sallee 2011, 2012
# All rights reserved.
# For use with the distribution sorcerer only!

### BEGIN INIT INFO
# Default-Mode: 500
# Required-Start: proc
# Default-Start: S
# Short-Description: set the level at which the kernel will write to the console
# Description: The kernel routine printk() will only print a message on the console,
#	if the message loglevel value is less than
#	the value of the variable console_loglevel.
#	For a description of the values for console_loglevel execute: man syslog
### END INIT INFO

. /lib/lsb/init-functions

only start configure status display

display(){ echo "Loglevel $LOGLEVEL"; }

configure_run(){

 loglevel_menu(){
  BACKTITLE=$"Console Log Level Menu"
      TITLE=$"Loglevel Selection"
       HELP=$"Event above the default loglevel will not display on the console.
Please select the computer's default loglevel within 60 seconds."

  dialog \
   --backtitle "$BACKTITLE"  \
   --title     "$TITLE"      \
   --item-help --timeout 60  \
   --stdout --no-cancel      \
   --default-item 3          \
   --menu "$HELP" 0 0 0      \
   7 KERN_DEBUG		"debug-level message" \
   6 KERN_INFO		"informational" \
   5 KERN_NOTICE	"normal but significant condition" \
   4 KERN_WARNING	"warning conditions" \
   3 KERN_ERR		"error conditions" \
   2 KERN_CRIT		"critical conditions" \
   1 KERN_ALERT		"action must be taken immediately" \
   0 KERN_EMERG		"system is unusable"
 }

 if   LOGLEVEL=$( loglevel_menu ) && [ -n "$LOGLEVEL" ]
 then echo "LOGLEVEL=$LOGLEVEL" > /etc/init.d/conf.d/loglevel
 fi
}

status(){
 if   [ -z "$LOGLEVEL" ]
 then log_warning_msg "loglevel is not selected"; return 1
 elif read L J < /proc/sys/kernel/printk; ! [ "$L" == "$LOGLEVEL" ]
 then log_warning_msg "loglevel $LOGLEVEL is not set"
 else log_success_msg "loglevel $LOGLEVEL is already set"
 fi
}

start(){
 if [ -z "$LOGLEVEL" ]; then configure_run; redraw; LOGLEVEL=${LOGLEVEL:-3}; fi
 if   log_warning_msg "Loglevel $LOGLEVEL setting"; echo $LOGLEVEL > /proc/sys/kernel/printk
 then log_success_msg "Loglevel $LOGLEVEL set"
 else log_failure_msg "Loglevel $LOGLEVEL not set"
 fi
}

configure(){ LOGLEVEL=; start; }
