#!/bin/bash

### BEGIN INIT INFO
# Default-Mode: 500
# Provides: $local_fs
# Required-Start: fsck mtab
# Should-Start: root-rw
# Required-Stop: cryptmount cryptsetup finale halt mdadm reboot reboot-kexec vgchange
# Should-Stop: root-ro
# Default-Start: S 1 2 3 4 5
# Default-Stop: 0 6
# Short-Description: mounts and un-mounts file systems
### END INIT INFO

. /lib/lsb/init-functions

only start stop
deny control

if   rootfs
then FSTAB=/etc/fstab.rootfs
else FSTAB=/etc/fstab
fi

mkdirs(){
 local mkdir
 if   [      -x /usr/libexec/bash/mkdir ]
 then enable -f /usr/libexec/bash/mkdir mkdir &&
      mkdir=mkdir
 else mkdir=/bin/mkdir
 fi

 while read s d t; do
  if   [[    $s =~ \#     ]]; then continue
  elif [[    $t =~ noauto ]]; then continue
  elif [[ -z $d           ]]; then continue; fi
  $mkdir -pm 0755 "$d"
 done < $FSTAB
}

run(){
 if   [ -f $FSTAB ]
 then mkdirs && /bin/mount -a -T $FSTAB
 fi
}

start(){
 if   log_warning_msg "/bin/mount -a -T $FSTAB executing"; run
 then log_success_msg "/bin/mount -a -T $FSTAB executed"
 else log_success_msg "/bin/mount -a -T $FSTAB execution failed"
 fi
}

stop(){
 run(){
  sync
  [ -f /proc/mounts ] || mount -nrt proc proc /proc

  if   rootfs
  then /bin/cut -d ' ' -f2 /etc/mtab /proc/mounts
  else /bin/cut -d ' ' -f2 /etc/mtab
  fi |
  /bin/sort -ru |
  /bin/xargs -r --max-lines=256 \
  /bin/umount -l

#  sed  '\,^rootfs / rootfs,d
#        \,^proc /proc proc,d
#        \,^sysfs /sys sysfs,d
#        \,^tmpfs /run tmpfs,d
#        \,^devtmpfs /dev devtmpfs,d
#        \,^devpts /dev/pts devpts,d' /proc/mounts | cut -d ' ' -f2 |
#  sort -r | xargs -r --max-lines=256 umount -lr
 }

# run(){ sync; umount -Rlr /; }

 log_warning_msg 'File systems unmounting'; run
 log_success_msg 'File systems unmounted'
}
