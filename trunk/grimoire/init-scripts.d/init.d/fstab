#!/bin/bash

### BEGIN INIT INFO
# Default-Mode: 500
# Should-Start: alt_boot find_ir udevsettle
# Default-Start: S
# Short-Description: avoids kernel parameter bash when /+/base is not in /etc/fstab
# Description: verifies /etc/fstab is sufficient
#	auto modifies   /etc/fstab if necessary
#	interacts with person at keyboard when baffled.
### END INIT INFO

read < /proc/cmdline
if   [ -d /home ] || [[ $REPLY =~ boot=IR ]]
then exit 0
fi

. /lib/lsb/init-functions

if ! rootfs; then trap - EXIT; exit 0; fi

only start
deny control

start(){
 root_menu(){
  block(){ /bin/find /dev -type b -printf '%p	%Y\n' | /bin/sed '/loop/d'; }

  /bin/dialog --backtitle fstab --stdout --no-cancel --title "Root Device Menu" \
              --menu "Expected /+/base in /etc/fstab" 0 0 0 /sbin/sulogin '' $( block )
 }

 interact(){
  # usb storage devices may not be immediately available?
  /bin/sleep 5
  ROOT=$( root_menu )
  case $ROOT in
   /sbin/sulogin) /sbin/sulogin -t 300 1>/dev/console 2>&1 0</dev/console ;;
   /dev*) echo "$ROOT /+/base auto defaults 0 0" >> /etc/fstab
  esac
 }

 modify(){
  /bin/sed  -i 's:[ \t]\{1\}/[ \t]\{1\}: /+/base :
                s:[ \t]\{1\}/media/root/: /+/:g' /etc/fstab
  /bin/grep -q '/+/' /etc/fstab
 }

 if   log_warning_msg '/etc/fstab contains /+/ checking'; /bin/grep -q '/+/' /etc/fstab
 then log_success_msg '/etc/fstab contains /+/ verified'
 elif log_success_msg '/etc/fstab automatic modification attempting'; modify
 then log_success_msg '/etc/fstab automatic modification successful'
 else log_failure_msg '/etc/fstab lacks root file systems'; interact
 fi
}
