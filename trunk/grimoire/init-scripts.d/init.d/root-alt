#!/bin/bash

### BEGIN INIT INFO
# Default-Mode: 500
# Required-Start: root-rw-retry
# Default-Start: S
# Short-Description: alternate roots if SA made mistake.
# Description: If a root file system did not mount
#	and the root file system is not expected to be encrypted
#	then present a selection of
#	alternate UUID and devices to be mounted as root.
### END INIT INFO

# Copyright 2012 through 2012 by Kyle Sallee,
# All rights reserved.
# For use with the Sorcerer distribution only.

if   grep -v rootfs  /proc/mounts           |
     grep -q " /media/root/.* .*rw"         ||
     grep    /media/root/ /etc/fstab.rootfs |
     grep -q luks                           ||
     grep -q boot=IR /proc/cmdline          ||
     [ -d /home ]
then exit 0
fi

. /lib/lsb/init-functions

only start

start(){
 root_menu(){
  dialog --backtitle alt_boot --stdout --no-cancel --title "Root Device Menu" \
         --menu "Please select device for /" 0 0 0 $( block )
 }

 block(){ find /dev -type b -printf '%p	%Y\n' | sed '/loop/d'; }
 new_root(){ echo "$( root_menu ) /media/root/real auto defaults 0 0" >> /etc/fstab.rootfs; }

 not_mounted(){
  local MSG=$"A root file system did not mount.
This outcome is undesirable, but not unanticipated."

  dialog --backtitle root-alt --stdout --no-cancel --timeout 60 \
         --title "Please pardon the interruption." --msgbox \
         "$MSG" 0 0
 }

 choose(){
  dialog --backtitle alt_boot --item-help --stdout --no-cancel --timeout 60 \
         --title     "Root device decision menu" \
         --menu      "Please select an option within 60 seconds" 0 0 0 \
         "select"    "for manual selection of a device" \
                     "block devices from /dev will be displayed on a menu" \
         "initramfs" "for mouting the initramfs as root" \
                     "good for examining and trouble shooting a boot problem"
 }

 not_mounted
 if [ "$( choose )" == select ]; then
  new_root
  /etc/init.d/root-rw start
 fi
}
