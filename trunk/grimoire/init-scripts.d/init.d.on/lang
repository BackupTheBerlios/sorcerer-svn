#!/bin/bash

# Copyright Kyle Sallee 2011
# All rights reserved.
# For use with the distribution sorcerer only!

### BEGIN INIT INFO
# Required-Start: $local_fs
# Default-Start: S
# Short-Description: checks and sets LANG in /etc/bash.d/noninteractive/LANG
### END INIT INFO

# omit log

. /lib/lsb/init-functions

if   [ -f   /media/root/usr/lib64/locale/locale-archive ] 
then config /media/root/usr/lib64/locale/locale-archive 
     name   /media/root/etc/bash.d/noninteractive/LANG
elif [ -f   /media/root/usr/lib/locale/locale-archive ] 
then config /media/root/usr/lib/locale/locale-archive 
     name   /media/root/etc/bash.d/noninteractive/LANG
elif [ -f   /usr/lib64/locale/locale-archive ] 
then config /usr/lib64/locale/locale-archive 
     name   /etc/bash.d/noninteractive/LANG
elif [ -f   /usr/lib/locale/locale-archive ] 
then config /usr/lib/locale/locale-archive 
     name   /etc/bash.d/noninteractive/LANG
fi

run(){

 lang_list(){ locale -a | sed "s:$:	locale:"; }

 lang_menu(){
  BACKTITLE=$"Locale Configuration Menu"
      TITLE=$"Locale Selection"
       HELP=$"Please select the computer's default locale within 60 seconds."

  dialog \
   --backtitle "$BACKTITLE"  \
   --title     "$TITLE"      \
   --timeout 60              \
   --stdout --no-cancel      \
   --menu "$HELP" 0 0 0      \
   $( lang_list )
 }

 LANG="$( lang_menu )"
 if [ "$LANG" ]; then
  rm -f  $NAME
  mkdir -vpm 755 ${NAME%/*}
  echo "export LANG=$LANG" > $NAME
  chmod 755 $NAME
 fi
}

status(){
 if   log_warning_msg "$NAME checking"; [ -f $NAME ]
 then log_success_msg "$NAME checked"
 else log_warning_msg "$NAME missing"; return 1
 fi
}

start(){ if ! status; then run; fi; }

       stop(){ :; }
     reload(){ rm -f $NAME; start; }
    restart(){ :; }
try_restart(){ :; }
parse "$@"
