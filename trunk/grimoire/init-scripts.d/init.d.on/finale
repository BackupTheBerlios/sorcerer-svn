#!/bin/bash
# Copyright 2011 by Kyle Sallee
# All Rights Reserved
# For use on Sorcerer only

### BEGIN INIT INFO
# Default-Mode: 500
# Default-Start: 0 6
# Short-Description: final pause, login, and rebound before the halt or reboot
### END INIT INFO

# To disable rebound
# then edit /etc/init.d/conf.d/halt
# and add function declarations:
# rebound(){ :; }

. /lib/lsb/init-functions

rebound(){
 [ -f /proc/mounts ] || return
 find /var/log/init/ -maxdepth 1 -type f |
 while read; do mv $REPLY{,.old}; done
 /etc/init.d/rcS
 telinit $REPLY
 exit
}

critical(){
 alert(){
  short(){ echo -en "\a"; }
   long(){ for ((CX=0;CX<35;CX++)); do echo -en "\a"; sleep 0.0016; done; }
  pause(){ sleep 0.5; }

  S(){ echo -n "S"; short; pause; short; pause; short; pause; pause; }
  O(){ echo -n "O"; long;  pause; long;  pause; long;  pause; pause; }

  S; O; S; echo; sleep 1; S; O; S;
 }

 warn(){
  echo "/etc/init.d/$1 reported an error"
  echo "reboot/shutdown request denied"
  echo "Rebounded to runlevel 3"
 }

 deny(){ warn $1 | tee -a /etc/issue.rootfs; alert; REPLY=3; rebound; }

   if [ -f /var/log/init/failed/lilo      ]; then deny lilo
 elif [ -f /var/log/init/failed/initramfs ]; then deny initramfs
 fi
}

count_down(){
 critical
 local CX=10
 echo -n "(p)ause; (s)ulogin; (#)runlevel"
 while (( CX-- > 0 )); do
  if read -p " $CX" -n 1 -t 1; then
   echo
   case $REPLY in
    p) read -n 1 -t 300 ;;
    s) sulogin   -t 300 ;;
    [0-7]) rebound      ;;
    *) CX=0             ;;
   esac
  fi
 done
}

case $1 in
start) log_warning_msg "Finale begins"; count_down ;;
esac
