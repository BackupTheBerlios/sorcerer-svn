#!/bin/bash
# Copyright 2011 by Kyle Sallee
# All Rights Reserved
# For use on Sorcerer only

trap : INT QUIT TSTP
export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
umask 022

run(){
 local s="${1##*/}"; s=${s:3:256}
 local f=/var/log/init/failed/$s
 local p=/var/log/init/passed/$s
 local t=/var/log/init/$s

 if         $1 $2 2>&1
 then echo "$1 $2" > $t.p
 else echo "$1 $2" > $t.f
 fi | tee -a $t

 if   [ -f $p ]; then rm $p
 elif [ -f $f ]; then rm $f; fi

   if [ -f $t.p ]; then cat $t.p $t >> $p; rm $t.p $t
 elif [ -f $t.f ]; then cat $t.f $t >> $f; rm $t.f $t; fi
}

load_newer(){
 rm -rf           /etc/{init.d,rc.d}
 cp -a /media/root/etc/{init.d,rc.d} /etc/
}

current(){
 if [ -d /media/root/etc/init.d ]; then
  chroot /media/root /etc/init.d/rc.d

  if   [ /media/root/etc/init.d/prc -nt /etc/init.d/prc ]
  then load_newer; exec /etc/init.d/prc "$@"
  else load_newer
  fi
 fi
}

linear(){
 for F in /etc/rc.d/rc${RL}.d/${1}*;
 do if [ -f $F ]; then run $F $2; fi
 done
}

# Breaking out of the loop early might cause a bug.

parallel(){
 SEQ=0
 while [ $SEQ -lt 100 ]; do
  if   [ $SEQ -lt 10  ]; then NOW="0$SEQ"; else NOW="$SEQ"; fi
  for F in /etc/rc.d/rc${RL}.d/$1${NOW}*
  do if [ -f $F ]; then run $F $2 & else break 2; fi
  done
  wait
  SEQ=$(($SEQ+1))
 done
 wait
}

ssp(){ parallel K stop; parallel S start; }
ssl(){ linear   K stop; linear   S start; }
log(){ $1; echo End runlevel $RL; }
rcl(){ find /etc/rc.d/rc${RL}.d/ -type l; }

ssm(){
 while  [ -n "$1" ]; do
  if    [ -f "$1" ]; then
   if   [[ $1 =~ d/K ]]
   then run $1 stop
   else run $1 start
   fi
  fi
  shift
 done
}

try_chroot(){
 if   [ -f /media/root/etc/init.d/prc ]
 then exec /bin/chroot /media/root /etc/init.d/prc "$@" c
 fi
}

par_chroot(){
 current "$@"
 if [ -f /media/root/etc/init.d/prc ]; then
  /bin/chroot /media/root /etc/init.d/prc "$@" c
  ssm $( rcl | LC_ALL=C sort | sed '/mount/,999p;d' )
  exit
 else
  ssm $( rcl | LC_ALL=C sort | sed '0,/mount/p;d' | sed '/mount/d' ) 2>&1 |
  tee /var/log/runlevel.$RL
  if   [ -z "$2" ]
  then ssm $( rcl | LC_ALL=C sort | sed '/mount/,999p;d' )
  fi
  exit
 fi
}

 RL=$1
RLL=/var/log/init/runlevel.$RL
RLC=/etc/init.d/dev.d/rl

if   [ -c "$RLC" ] && echo > $RLC
then cap(){ tee $RLL > $RLC; }
else cap(){ tee $RLL; }
fi

case $RL in
 1|2|3|4|5|7) try_chroot "$@" ;;
 0|6)         par_chroot "$@" ;;
esac

case $RL in
 3|5|1) log ssl 2>&1 | cap ;;
   2|4) log ssp 2>&1 | cap ;;
     7) ssl ;;
esac
