#!/bin/bash
### BEGIN INIT INFO
# Required-Stop: $local_fs proc udev
# Should-Stop: initramfs tmp
# Default-Stop: 0 6
# Short-Description: lilo.conf regenerates /etc/lilo.conf when necessary
### END INIT INFO

# Copyright 2008 by Kyle Sallee, all rights reserved.
# for use with Sorcerer only

. /lib/lsb/init-functions

NAME=/etc/lilo.conf

lilo_conf_update(){
 img(){
  echo "image			=	/boot/$REPLY/linux"; [ -f /etc/init.d/initramfs ] &&
  echo "	initrd		=	/boot/$REPLY/initrf"
  echo "	label		=	$REPLY"
  echo "	read-only"
  echo "	restricted"
  echo
 }

 local LOC=/etc/lilo.conf.local
 local OLD=/etc/lilo.conf.old
 local CON=/etc/lilo.conf
 local FAS=/etc/lilo.conf.fast
 local ICX=0
 local LIM=8

 local HEAD=/etc/lilo.conf.head
 local TAIL=/etc/lilo.conf.tail

 if   [[ -f /etc/init.d/initramfs ]]
 then LIM=4
 fi

 if  ! [[ -f $HEAD ]]; then 
  if   [[ -f $LOC  ]]
  then mv    $LOC $HEAD
  else
   cp       $CON $OLD
   sed   "/^image/,1000d" $OLD > $HEAD
   chmod 600                     $HEAD
  fi
 fi

 cp $HEAD $CON
 cp $HEAD $FAS

 REPLY=fast img >> $FAS

 find /boot -mindepth 2 -maxdepth 2 -type f -name linux -printf '%T@\t%h\n' |
 sort -gr |
 sed '\,/boot/fast,d; s:.*/::' |
 while read; do
  (( ICX++ ))
  if (( ICX < $LIM ))
  then img
  else
   rm -fr /boot/$REPLY \
   /lib/modules/$REPLY \
   /lib/modules/$REPLY.old
  fi
 done | tee -a $FAS >> $CON

 if   [[ -f $TAIL ]]
 then cat   $TAIL | tee -a $FAS >> $CON
 fi

 if [[ -x /etc/init.d/initramfs ]]
 then     /etc/init.d/initramfs
 else /sbin/lilo -P ignore
 fi
}

both(){
 find /boot -mindepth 2 -maxdepth 2 -type f -name linux -printf '%P\n'
 sed 's:#.*::;s: ::g;s:\t::g;s:image=/boot/::p;d' /etc/lilo.conf
}

current(){ ! both | sed '\,fast/linux,d' | sort | uniq -u | grep -q .; }

begin(){
 if   current
 then return
 elif log_warning_msg "$NAME updating"; lilo_conf_update
 then log_success_msg "$NAME updated"
 else log_failure_msg "$NAME failed"
  if   [[ -n $1 ]]
  then sulogin -t 300 &>/dev/console 0</dev/console
  fi
 fi
}

main(){
 if ! [[ -d /boot ]] ||
      [ -z "$( find /boot -mindepth 2 -maxdepth 2 -type f -name linux )" ]
 then return
 fi
 log_warning_msg "$NAME checking"; begin $1
 log_success_msg "$NAME checked"
}

export LC_ALL=C
case $1 in
 stop) main s ;;
    *) main ;;
esac
