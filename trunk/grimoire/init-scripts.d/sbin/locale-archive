#!/bin/bash

# Copyright Kyle Sallee 2011, 2012, 2013
# All rights reserved.
# For use with the distribution sorcerer only!
# Run by /etc/init.d/locale-archive

if   [ -f /etc/init.d/conf.d/locale-archive ]
then .    /etc/init.d/conf.d/locale-archive
fi

delay(){ while (( $( pgrep -u root localedef | wc -l ) > LOAD )); do sleep 1; done; }

acad(){
 if [ -f /proc/acpi/ac_adapter/*/state ]; then local REPLY
  read < /proc/acpi/ac_adapter/*/state
  [[ $REPLY =~ on-line ]]
 fi
}

generate_locales(){
 while ! acad; do sleep 60; done

 LOAD=$( sed "/^processor/p;d" /proc/cpuinfo | wc -l )

 local SUPPORTED="/usr/share/i18n/SUPPORTED"

 if   [[ $HOSTTYPE == x86_64 ]]
 then mkdir -pm 755 /usr/lib{,64}/locale
 else mkdir -pm 755 /usr/lib/locale
 fi

   if [ -n "$LOCALES" ]; then echo "$LOCALES"
 elif [ -f $SUPPORTED ]; then cat $SUPPORTED
 fi | grep / | cut -d ' ' -f1 |
 while read; do
  CHARMAP="${REPLY##*/}"
     NAME="${REPLY%/*}"
   SOURCE="${NAME%.*}"
  echo localedef --no-archive -i $SOURCE -c -f $CHARMAP $NAME
       localedef --no-archive -i $SOURCE -c -f $CHARMAP $NAME &
  sleep 1
  delay
 done

 wait
 LOAD=0
 delay

 rm -f /usr/lib{64,}/locale/locale-archive

 if   [[ $HOSTTYPE == x86_64 ]]
 then find /usr/lib64/locale -maxdepth 1 -mindepth 1 -type d
 else find /usr/lib/locale   -maxdepth 1 -mindepth 1 -type d
 fi | xargs --max-lines=1024 echo localedef --add-to-archive

 if   [[ $HOSTTYPE == x86_64 ]]
 then find /usr/lib64/locale -maxdepth 1 -mindepth 1 -type d
 else find /usr/lib/locale   -maxdepth 1 -mindepth 1 -type d
 fi | xargs --max-lines=1024      localedef --add-to-archive

 if   [[ $HOSTTYPE == x86_64 ]]
 then find /usr/lib64/locale -maxdepth 1 -mindepth 1 -type d
 else find /usr/lib/locale   -maxdepth 1 -mindepth 1 -type d
 fi | xargs --max-lines=1024 rm -fr

 if   [[ $HOSTTYPE == x86_64 ]]
 then cp -a /usr/lib{64,}/locale/locale-archive
 fi
}

start(){ generate_locales &>/var/log/locale-archive & }

if   [      -f /usr/libexec/bash/sleep ]
then enable -f /usr/libexec/bash/sleep sleep
fi

start
