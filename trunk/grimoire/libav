with version stable 9.1 0.8.4 0.8.3
with base    bzip2 nasm zlib
with also    --enable-swscale --enable-gpl --enable-shared --enable-pthreads --disable-debug
#with also    --enable-swscale --enable-postproc --enable-gpl --enable-shared --enable-pthreads --disable-debug
case $VERSION in
  9.1*) with also    --enable-nonfree --disable-static --disable-doc ;;
  0.8*) with also    --enable-nonfree --disable-static --disable-doc ;;
 0.7.3) with also    --enable-nonfree --disable-static --disable-doc ;;
esac

# avisynth is broke so do not enable
#with elect   jackit

with elect   SDL            ''                       --disable-ffplay  to build ffplay media player
with elect   XviD           --enable-libxvid         --disable-libxvid
with elect   a52dec
# celt is optional for ffmpeg version 0.8 and later
#with elect   celt           --enable-libcelt         --disable-libcelt
with elect   faac           --enable-libfaac         --disable-libfaac
# frei0r-plugins creates requirement loop with OpenCV and ffmpeg
#with elect   frei0r-plugins --enable-frei0r          --disable-frei0r
with elect   gsm            --enable-libgsm          --disable-libgsm
with elect   lame           --enable-libmp3lame      --disable-libmp3lame
with elect   libdc1394      --enable-libdc1394       --disable-libdc1394
with elect   libtheora      --enable-libtheora       --disable-libtheora
with elect   libvorbis      --enable-libvorbis       --disable-libvorbis
with elect   libvpx         --enable-libvpx          --disable-libvpx
# ffmpeg does not recognize the installation of openjpeg
#with elect   openjpeg       --enable-libopenjpeg     --disable-libopenjpeg
# ffmpeg does not recognize rtmpdump's librtmp library
#with elect   rtmpdump       --enable-librtmp         --disable-librtmp
with elect   schroedinger   --enable-libschroedinger --disable-libschroedinger
with elect   speex          --enable-libspeex        --disable-libspeex
with elect   x264           --enable-libx264         --disable-libx264
with role    video
with trait   library makej optimize
with source  http://www.libav.org/releases/libav-$VERSION.tar.xz
with info    last 20130110
with info    home http://www.libav.org/
with info    docs http://www.libav.org/documentation.html
with info    cite 'fork of ffmpeg'

build(){
 flags(){ grep flags < /proc/cpuinfo | grep -q $1 || OPTS+=" $2"; }

 local ARCH

 export   CFLAGS="${CFLAGS//-funroll-loops/}"
 export CXXFLAGS="${CXXFLAGS//-funroll-loops/}"
 export   CFLAGS="${CFLAGS//pentium-m /i686 }"
 export CXXFLAGS="${CXXFLAGS//pentium-m /i686 }"

 export  LDFLAGS+=' -ldl'

 flags mmx      --disable-mmx
#flags mmx2     --disable-mmx2
 flags sse      --disable-sse
 flags sse3     --disable-ssse3
 flags 3dnow    --disable-amd3dnow
 flags 3dnowext --disable-amd3dnowext

 local PREFIX=/opt/libav/${VERSION:0:3}/usr

 if   [[ $HOSTTYPE == x86_64 ]] && [[ $CFLAGS =~ -m32 ]]
 then ARCH=i686
 else ARCH=$HOSTTYPE
 fi

 if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
 then LIBDIR=$PREFIX/lib64
 else LIBDIR=$PREFIX/lib
 fi

 setarch $ARCH \
 ./configure   \
 --prefix=$PREFIX \
 --libdir=$LIBDIR \
 $OPTS &&  sed -i 's:LDFLAGS=:LDFLAGS+=:' config.mak &&
 setarch $ARCH make &&
 setarch $ARCH make install "DESTDIR=$DESTDIR"
# &&
# mkdir -pvm 755 "$DESTDIR/etc" &&
# install -m 644 doc/ffserver.conf "$DESTDIR/etc" &&
# sed -i 's:-L${libdir}::' $DESTDIR/$PREFIX/lib/pkgconfig/*.pc &&
# if    [[ $HOSTTYPE == x86_64   ]]; then
#  if   [[ $CFLAGS   =~ -m32     ]]; then mv $DESTDIR/$PREFIX/lib{,32}
#                                    else mv $DESTDIR/$PREFIX/lib{,64}
#    if [[ -d $DESTDIR/usr/lib32 ]]; then mv $DESTDIR/$PREFIX/lib{32,}; 
#fi
#  fi
# fi
}
