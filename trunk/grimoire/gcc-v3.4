   VERSION=( 3.4.6 )
    IGNORE='ada\|core\|g++\|g77\|java\|objc\|testsuite\|fortran\|^4\.\|200'
  CATEGORY='development/compiler'
 ATTRIBUTE='console library'
    SOURCE="gcc/gcc-$VERSION/gcc-$VERSION.tar.bz2"
       URL="$GNU_URL"
#      REQ='binutils coreutils'
# avoid recursive requirement loop on binutils
  HOMEPAGE='http://gcc.gnu.org'
  ESTIMATE='2613'
      DESC='gcc-v3.4 is the GNU compiler collection.
gcc - GNU Compiler Collection.
The GNU Compiler Collection is a suite of compilers
that compile C, C++, Objective C, Fortran, Java,
and Ada for a wide variety of architectures.'

build(){

 finish_install(){
  ln -sf gcc /opt/gcc/$VERSION/bin/cc

                    SEDIT='s:-L/usr/src/sorcery[^ ]*::g'
  case $HOSTTYPE in
   x86_64) sed -i "$SEDIT" /opt/gcc/$VERSION/lib64/lib*.la 2>/dev/null ;;
        *) sed -i "$SEDIT" /opt/gcc/$VERSION/lib/lib*.la   2>/dev/null ;;
  esac

  STRSTREAM=/opt/gcc/$VERSION/include/c++/$VERSION/backward/strstream

  if   [  -f           ${STRSTREAM}   ] &&
     ! [  -f           ${STRSTREAM}.h ]
  then ln -s strstream ${STRSTREAM}.h
  fi

  true
}

 ENABLE_LANGS="--enable-languages=${GCC_LANGUAGES:=c++}"

 export   CFLAGS="${CFLAGS/-fomit-frame-pointer/}"
 export CXXFLAGS="${CXXFLAGS/-fomit-frame-pointer/}"
 export CCACHE_DISABLE=1
 export LDFLAGS+=' -Wl,-R/opt/gcc/$VERSION/lib'
 case $HOSTTYPE in
  x86_64) LDFLAGS+='64' ;;
 esac
 export PATH="$( echo "$PATH" | sed "s/[^:]*ccache://" )"

 LCF="LIBCFLAGS=$CFLAGS"
 LCXF="LIBCXXFLAGS=$CXXFLAGS"
 BF="BOOT_CFLAGS=$CFLAGS"
 LJCF="LIBGCJ_CFLAGS=$CFLAGS"
 LJCXF="LIBGCJ_CXXFLAGS=$CXXFLAGS"
 LJJF="LIBGCJ_JAVAFLAGS=$CFLAGS"
 LDF="LDFLAGS=$LDFLAGS"

 patch -p1 < $SCRIPT_DIR/gcc-3.3.2.patch ;;

 case $HOSTTYPE in
  x86_64) OPTS+=' --disable-multilib' ;;
 esac


OPTS="$OPTS
  --host=$BUILD
  --prefix=/opt/gcc/$VERSION
  --enable-__cxa_atexit
  --enable-clocale=gnu
  --enable-shared
  --enable-long-long
  --enable-threads=posix
  --with-system-zlib
  $ENABLE_LANGS"             


 mkdir   BUILD
 cd      BUILD
 ../configure  $OPTS             &&
 make    bootstrap-lean          \
         "$BF"                   \
         "$LCF"  "$LCXF"  "$LDF" \
         "$LJCF" "$LJCXF"        && 
 prepare_install                 &&
 make    install                 &&
  finish_install
}
