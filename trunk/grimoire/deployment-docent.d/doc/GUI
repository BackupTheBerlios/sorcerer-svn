If the role of the deployed computer is workstation
then installing a desktop environment
and web browser could be desired.
kde and gnome are profile spells
useful for installing the KDE and Gnome desktop environments.
Although software projects are assigned roles

The catalog of software available
for immediate installation is called the grimoire.
Grimoire means book written in Latin.
Fortunately, the software catalog is not actually written in Latin.
It is written in BASH script fragments.
It also contains patch files and init-scripts.

A shell script is a type of computer program.
BASH is a shell.
A shell is an interpreted computer language.
An interpreter translates human readable source code
to computer code in real time.
Compiled languages translate human readable source code
into computer code during compilation.
And assembly language programs have their mnemonics
translated into computer codes by the assembler
when the programs are assembled.
Assembled programs and compiled programs
can execute faster than interpreted programs
because the overhead for translation happened separately.

Patch files describe how to adjust one or more files.
The purpose of a patch typically fixes a problem
that would prevent compilation, linking,
or installation of a software project.

init-scripts are programs written in BASH script
that perform tasks such as starting and stopping software
during booting, shutdown, and run level change.

The majority of BASH script fragments in the grimoire are spells.
Spells invoke the functions of of sorcery
in order to allow a very simple syntax describe
complicated tasks.
Many tasks that spells require are performed
implicitly when required rather than begin defined in the spell.
And that makes wielding sorcery a powerful rather than tedious experience.

Spells provide a terse yet dynamic method
for describing how software projects
should be downloaded, configured, installed, and run.
One or more spells are typically created for each software project.
In order to install a software project
the spell name must be known or discovered.
Fortunately, the spell names granted to software projects
typically are the same name as the software authors
used for naming the source tarball.

The exception might be profile spells.
A profile spell can requires many other software projects
to be installed.
Therefore, the small amount of effort required by the SA
in order to request a profile spell to be installed
can generate a momentous outcome where hundreds of spells
are cast and hundreds of software projects are installed.

The official software catalog tends to provide
between 3000 and 5000 spells.
It provides spells for highly popular software
that is commonly installed by several POSIX.
A spell name can be grepped from the grimoire like so:

# au grimoire | grep -i kde

The above command outputs many spell names.
The reason for that is because spells typically
are given the same name that the software author
gave to the software tarball that provides the source.
For installing the K Desktop Environment
a profile spell is provided because the software
that comprises KDE is provided by many spells.
Many of those spells should be concurrently installed.
Installing the kde profile removes guesswork
concerning which of the kde type spells should be installed.
Using the profile for installing
can provide the desired software
without wasting space by installing
many of the elective software components
that might not be immediately useful such as
the "Euskara," Basque language, translation files.
 
If firefox and KDE will suffice for now
then the commands to install the software
and watch the progress are:

# au begin firefox kde; au scry

Note that the examples above have au typed
instead of typing the full word augur.
That is because au is provided as an alias for augur.
Augur has more than one alias.
The au and aug aliases are identical to invoking augur.
However, the "a" alias is special and is described by:

# au help a


If the computer is server
then perhaps server software should be installed?
If it is a web server then installing httpd could be desired.
If so then those commands would be:

# au begin httpd; au scry

The purpose of augur scry is to see
what will happen, what is happening, and what happened.
The lines at the top are future events.
The lines in the center are current events.
The lines at the bottom are historical events.
And the 4 lines at the bottom provide information about
the state of the queues and the box.

Forcing a reboot or power cycle during software installation
will typically cause the queued states to be retained.
On the next boot the sorcery utilities
will automatically resume where interrupted.
However, compilation of a software project
will not resume where it was interrupted.
Instead that begins again from the beginning.
That helps to ensure that files
were not truncated or corrupted
by the unexpected interruption.

Wane cleans /aux/run/
If the only queue that remains processing is wane's queue
then rebooting is fine.
wane could require some time to complete
If only wane is running
and the other queues are empty
then all the software specified
for installation and removal was processed.
Pressing "q" exits augur scry.
augur scry also exists automatically after wane completes.

With the exception of software removal
and some configuration of the sorcery tools
then augur is used almost exclusively
for installing and updating installed software.
However, for a menu driven interface exists.
The menu driven interface is invoked by running
/usr/sbin/sorcery

A SA's general shell utilization skill
determines effectiveness when wielding augur.
Effectiveness with augur effects the experience administration.
Those with excellent skills enjoy the experience.
Those lacking skill experience confusion and disinterest.
Reading documentation helps circumvent confusion and disinterest.
Running augur without parameters provides an overview
of all of augur's command modules.
Running augur with

# au help $COMMAND

where command is the name of an augur command module;
will provide verbose help about that command module
including purpose, syntax, examples, etc...

Most important of all is to make time to read
the BASH manual page.
Or read the manual page of the shell that is preferred.

A wand manifests a wizard's magical intent.
Likewise a shell manifests a SA's administration intent.
Therefore, every SA learns how to use at least one shell.
Otherwise their lore remains
only about as effective as a user.
