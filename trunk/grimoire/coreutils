# Uncertain if libcap is optional

   version stable 8.17
   require acl gmp libcap
    switch -static '' to make static linked cut sort uniq
#  require libselinux
  category utility
 attribute console lto makej optimize solo
    source $GNU_URL coreutils/coreutils-$VERSION.tar.xz
      info last 20120513
      info home http://www.gnu.org/software/coreutils/
      info docs http://www.gnu.org/software/coreutils/manual/
   protect /bin/cat
   protect /bin/chmod
   protect /bin/chown
   protect /bin/cp
   protect /bin/cut
   protect /bin/date
   protect /bin/dd
   protect /bin/echo
   protect /bin/kill
   protect /bin/ls
   protect /bin/mkdir
   protect /bin/mv
   protect /bin/rm
   protect /bin/rmdir
   protect /bin/sleep
   protect /bin/sort
   protect /bin/stat
   protect /bin/tail
   protect /bin/tee
   protect /bin/touch
   protect /bin/tr
   protect /bin/tsort
   protect /bin/uniq
   protect /bin/wc
   protect /usr/bin/basename
   protect /usr/bin/dirname
   protect /usr/bin/du
   protect /usr/bin/install
   protect /usr/bin/md5sum
   protect /usr/bin/nohup
      desc 'file, shell and text manipulation utilities

coreutils provides:

chgrp		changes group ownership
chown		changes ownership
chmod		changes permissions
cp		copies
dd		copies and converts
df		shows filesystem disk usage.
dir		gives brief directory listing
dircolors	setup program for the color version of GNU ls
du		shows disk usage
install		copies and sets permissions
ln		creates links
ls		lists directory contents
mkdir		creates directories
mkfifo		creates FIFOs (named pipes)
mknod		creates special files
mv		renames
rm		removes (deletes)
rmdir		removes empty directories
shred		deletes a file securely
sync		synchronizes memory and disk
touch		changes filestamps
vdir		long directory listing (like ls -l)

basename	removes the path prefix from a given pathname 
chroot		changes the root directory 
date		prints the system date and time
dirname		removes the last level or filename from a pathname 
echo		prints a line of text 
env		displays/modifies the environment 
expr		evaluates expressions 
factor		prints prime factor 
false		returns an unsuccessful exit status 
groups		prints the groups the user belongs to 
id		print real/effective/uid/gid
logname		prints current login name 
nice		modifies scheduling priority
nohup		lets a command keep running after logging out 
pathchk		checks file name portability 
pinky		lightweight finger program; prints user information 
printenv	prints environment variables 
printf		formats and prints data 
pwd		prints the working (current) directory 
seq		prints numeric sequences 
sleep		suspends execution for a specified time 
stty		prints/changes terminal settings 
tee		sends output to multiple files 
test		evaluates an expression 
true		returns a successful exit status 
tty		prints terminal name 
uname		prints system information 
uptime		tells how long the system has been running 
users		prints current user names 
who		prints a list of all users currently logged in 
whoami		prints effective user ID 
yes		prints a string indefinitely

cat		concatenates and prints files on the standard output
cksum		checksum and count the bytes in a file
comm		compares two sorted files line by line
csplit		splits a file into sections determined by context lines
cut		remove sections from each line of files
expand		convert tabs to spaces
fmt		simple optimal text formatter
fold		wrap each input line to fit in specified width
head		output the first part of files
join		join lines of two files on a common field
md5sum		compute and check MD5 messsage digest
nl		number lines of files
od		dump files in octal and other formats
paste		merge lines of files
ptx		produce a permuted index of file contents
pr		convert text files for printing
sort		sort lines of text files
split		split a file into pieces
sum		checksum and count the blocks in a file
tac		concatenates and prints files in reverse
tail		outputs the last part of files
timeout		run a command with a time limit
tr		translates or deletes characters
tsort		perform topological sort
unexpand	convert spaces to tabs
uniq		remove duplicate lines from a sorted file
wc		prints the number of bytes, words, and lines in files'

build(){
 local STATIC

 place_files(){
  echo 'Placing files'
  hash -r
  cd $DESTDIR
  mkdir -pvm 755 bin

  mv -fv {usr/,}bin/cat		# /etc/init.d/mount
  mv -fv {usr/,}bin/chmod	# /etc/init.d/loadkeys
  mv -fv {usr/,}bin/chown	# /etc/init.d/var_run_wpa_priv
  mv -fv {usr/,}bin/chroot	# /etc/init.d/mount
  mv -fv {usr/,}bin/cp		# /etc/init.d/udev
  mv -fv {usr/,}bin/cut		# /etc/init.d/mount
  mv -fv {usr/,}bin/date	# Kyle's whim
  mv -fv {usr/,}bin/dd		# Kyle's whim
  mv -fv {usr/,}bin/df		# Kyle's whim
  mv -fv {usr/,}bin/echo	# legacy probably not required
  mv -fv {usr/,}bin/false	# legacy probably not required
  mv -fv {usr/,}bin/kill	# Kyle's whim
  mv -fv {usr/,}bin/ln		# used by something
  mv -fv {usr/,}bin/ls		# for SA and /etc/init.d/loadkeys
  mv -fv {usr/,}bin/mkdir	# /lib/udev/rule_generator.functions
  mv -fv {usr/,}bin/mknod	# for SA
  mv -fv {usr/,}bin/touch	# Kyle's whim
  mv -fv {usr/,}bin/tr		# for /etc/init.d/wpa_supplicant
  mv -fv {usr/,}bin/tsort	# for /lib/lsb/install_initd invoked by /etc/init.d/rc.d
  mv -fv {usr/,}bin/uniq	# Kyle's whim
  mv -fv {usr/,}bin/wc		# Kyle's whim
  mv -fv {usr/,}bin/mv		# for SA
  hash -r
  mv -fv {usr/,}bin/readlink	# /lib/udev/rule_generator.functions
  mv -fv {usr/,}bin/rm		# /lib/udev/rule_generator.functions
  mv -fv {usr/,}bin/rmdir	# /lib/udev/rule_generator.functions
  mv -fv {usr/,}bin/sync	# /etc/init.d/mount
  mv -fv {usr/,}bin/sleep	# /lib/udev/rule_generator.functions
  mv -fv {usr/,}bin/sort	# /etc/init.d/{loadkeys,mount}
  mv -fv {usr/,}bin/tail	# /lib/lsb/init-functions:redraw()
  mv -fv {usr/,}bin/tee		# /etc/{rcS,prc}
  mv -fv {usr/,}bin/timeout	# /etc/{rcS,prc}
  mv -fv {usr/,}bin/true	# legacy probably not required
  hash -r
 }

 sync_fix(){ install -m 755 $SCRIPT_DIR/sync $DESTDIR/usr/bin/; hash -r; }

 make_static(){
  if [ -n "$STATIC" ]; then
   export LDFLAGS+=" $STATIC"
   rm -f src/{cut,sort,uniq}
   make "LDFLAGS=$LDFLAGS"
   install -vm 755 src/cut  $DESTDIR/usr/bin/
   install -vm 755 src/sort $DESTDIR/usr/bin/
   install -vm 755 src/uniq $DESTDIR/usr/bin/
  fi
 }

 if [[ $OPTS =~ -static ]]; then
    OPTS=${OPTS/-static}
        STATIC="-static"
 fi

 FORCE_UNSAFE_CONFIGURE=1 \
 ac_cv_sys_xsi_stack_overflow_heuristic=no \
 default_build &&
 make_static   &&
 place_files   &&
 sync_fix
}

post_remove(){
 hash -r
 default_post_remove
}

post_install(){
 rm -f /usr/bin/tail
 default_post_install
}

current(){
 case $VERSION in
  8.17) [ -f /bin/tail ] ;;
 esac
}
