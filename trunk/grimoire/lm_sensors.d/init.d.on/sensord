#!/bin/bash

### BEGIN INIT INFO
# Provides: sensord
# Required-Start: sensors run
# Should-Start: 
# Required-Stop: syslog kill 
# Should-Stop: 
# Default-Start:  2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: sensord is lm_sensors hardware health monitoring daemon
# Description: sensord starts the lm_sensors hardware health monitoring
# daemon which log the health status into syslog or a round-robin database. 
### END INIT INFO

. /lib/lsb/init-functions

PIDF="/var/run/sensord.pid"
SERV="/usr/bin/sensord"
NAME="sensord"

# Configuration of sensord

SCAN=1m		# interval between scanning for sensor alarms
LAG=30m		# interval between logging  all sensor readings


status()  {
  PIDS="$( pidofproc -p $PIDF $SERV )"
  if   [ -n "$PIDS" ]; then log_warning_msg "$NAME is running ($PIDS)"; return 0
  elif [ -f "$PIDF" ]; then log_warning_msg "$NAME is dead and $PIDF exists"; return 1
                       else log_warning_msg "$NAME is not running"; return 3
  fi
}

start()  {
  if    [  -x  /usr/bin/sensord  ]        &&
        log_warning_msg  "$NAME starting" && start_daemon -p $PIDF $SERV -i $SCAN -l $LAG
  then  log_success_msg  "$NAME started"
  else  log_failure_msg  "$NAME not started"
  fi
}

stop()  {
  if    log_warning_msg "$NAME stopping";  killproc  -p $PIDF -s 15  $SERV
  then  log_success_msg "$NAME stopped"
  else  log_failure_msg "$NAME not stopped"
  fi
}

    restart() { stop;  sleep  1;  start;  }
try_restart() { status  &&  restart; }
help() { echo "Usage: $0 {restart|try-restart|start|status|stop}" 1>&2; }

case  $1  in
     restart)      restart  ;;
 try-restart)  try_restart  ;;
       start)  start        ;;
      status)  status       ;;
        stop)  stop         ;;
           *)  help         ;;
esac
