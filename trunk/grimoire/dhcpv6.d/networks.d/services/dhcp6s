#!/bin/sh
#
### BEGIN INIT INFO
# Provides: dhcp6s
# Default-Start: 3 4 5
# Default-Stop: 0 1 6
# Should-Start: $network
# Required-Start:
# Required-Stop:
# Short-Description: Start and stop the DHCPv6 server agent
# Description: dhcp6s provides IPv6 addresses and prefix assignment
#              administrative policy and configuration information for
#              DHCPv6 clients.  dhcp6s also manages those addresses and
#              prefixes, such as IPv6 addresses, prefixes, DNS server
#              addresses, or ntp server addresses.
### END INIT INFO
#
# The fields below are left around for legacy tools (will remove later).
#
# chkconfig: 2345 66 36
# description: dhcp6s provides IPv6 addresses and prefix assignment \
#              administrative policy and configuration information for \
#              DHCPv6 clients.  dhcp6s also manages those addresses and \
#              prefixes, such as IPv6 addresses, prefixes, DNS server \
#              addresses, or ntp server addresses.
# processname: dhcp6s
# config: /etc/dhcp6s.conf
# config: /etc/sysconfig/dhcp6s
. /lib/lsb/init-functions

RETVAL=0

prog=dhcp6s
NAME=$prog
PIDF="/var/run/dhcp6s.pid"
SERV=/usr/sbin/dhcp6s
# specify the interface for dhcp6s
DHCP6SIF=
# Command line options here
DHCP6SARGS=


start() {
	set -x
		log_warning_msg  "$NAME about to start"

    # return 5 if program is not installed
    [ -x $SERV ] || exit 5

    # return 6 if program is not configured
    [ -f /etc/dhcp6s.conf ] || exit 6

    if [ -z "$DHCP6SIF" ]; then
        log_warning_msg  "$prog listening on ALL interfaces"
    fi

		[      -d  /var/empty  ]  ||
		mkdir  -p  /var/empty
		if    start_daemon     -p $PIDF $SERV -c /etc/dhcp6s.conf $DHCP6SARGS $DHCP6SIF
	  then  log_success_msg  "$NAME started"
	  else  log_failure_msg  "$NAME not started"
		      status
	  fi
		set +x
}

stop() {
	log_warning_msg "$NAME about to stop"
  if     killproc        -p $PIDF -s 15  $SERV
  then  log_success_msg "$NAME stopped"
  else  log_failure_msg "$NAME not stopped"
        status
        return 0
  fi
}

usage() {
	echo $"Usage: $0 {start|stop|restart|try-restart|reload|force-reload|status}"
	return 3
}

# See how we were called.
case "$1" in
    start) start ;;
    stop) stop ;;
    restart|force-reload) stop && start ;;
    status) status ;;
    *) usage ;;
esac

