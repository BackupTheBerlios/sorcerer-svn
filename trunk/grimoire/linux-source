# waiting for newer NVIDIA-Linux
# before  updating to linux version 3.11.1
# Currently NVIDIA's kernel driver is not compatible
# with current stable linux source.

with info    last 20130915
with version stable	3.10.12		3.10.11		3.10.10
with version 3.11.x     3.11.1		3.11
with version 3.10.x	3.10.12		3.10.11		3.10.10
with version 3.9.x	3.9.11		3.9.10		3.9.9
with version 3.8.x	3.8.13		3.8.12		3.8.11
with version 3.7.x	3.7.10		3.7.9		3.7.8
with version 3.6.x	3.6.11		3.6.10		3.6.9
with version 3.5.x	3.5.7		3.5.6		3.5.5
with version 3.4.x	3.4.62		3.4.61		3.4.60
with version 3.3.x	3.3.8		3.3.7		3.3.6
with version 3.2.x	3.2.51		3.2.50		3.2.49
with version "git 3.2.y"	3.2.51	3.2.50		3.2.49
with version 3.1.x	3.1.10		3.1.9		3.1.6
with version 3.0.x	3.0.96		3.0.95		3.0.94
with version 2.6.39.x	2.6.39.4	2.6.39.3	2.6.39.2
with version 2.6.38.x	2.6.38.8	2.6.38.6	2.6.38.5
with version 2.6.37.x     2.6.37.6	2.6.37.4	2.6.37.3
with version 2.6.36.x	2.6.36.4	2.6.36.3	2.6.36.2
with version 2.6.35.x	2.6.35.14	2.6.35.13	2.6.35.12
with version 2.6.34.x	2.6.34.14	2.6.34.13	2.6.34.12
with version 2.6.32.x	3.6.32.61	2.6.32.60	2.6.32.59
with version 2.6.30.x	2.6.30.10	2.6.30.9	2.6.30.8
with version 2.6.27.x	2.6.27.62	2.6.27.59	2.6.27.58
with role    kernel
with trait   data

with source  stable	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.12.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.11.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.10.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.9.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.8.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.7.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.6.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.5.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.4.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.3.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.2.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  "git 3.2.y"	linux-v$VERSION.tar v$VERSION git://git.kernel.org/pub/scm/linux/kernel/git/bwh/linux-3.2.y.git
with source  3.1.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  3.0.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.39.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.38.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.37.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.36.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.35.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.34.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.33.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.32.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.30.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with source  2.6.27.x	$KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz
with vary    /usr/src/linux/Documentation/
with info    home http://www.kernel.org/
with info    cite 'installs linux kernel on /usr/src/linux'

build(){
   if   [ -z "$BUILD_DIR" ]; then return 1
 elif   [ -z "$DESTDIR"   ]; then return 1
 elif ! [ -f "Makefile"   ]; then return 1
 fi

 LC_ALL=C grep -l /bin/pwd $( find * -type f -name Makefile ) |
 xargs -r --max-lines=64 sed -i 's:/bin/pwd:pwd:'

 make  distclean
 install -dvm 755                 "$DESTDIR/"usr/src/
 chown -R root:root "$BUILD_DIR/"
 find               "$BUILD_DIR/" -type d | xargs --max-lines=64 chmod 755
 find               "$BUILD_DIR/" -type f | xargs --max-lines=64 chmod o-w
 mv    -v           "$BUILD_DIR/" "$DESTDIR/"usr/src/linux
                             [ -f "$DESTDIR/"usr/src/linux/Makefile ]
}

post_install(){
 auto_update(){
  local p v=uncertain
  p="$( get_provider "$1" )"
  p="${p:-$1}"

  # [ -f     "$VERSION_INDEX/$p" ] &&
  # read v < "$VERSION_INDEX/$p"
  # if [ "$VERSION" == "$v" ]; then return; fi

  touch "$GRIMOIRE/$p"
  event "$p" "$VERSION"   "Cast New"
  echo  "$p" | pipe_queue "$MOIL_QUEUE"
 }

 touch "$GRIMOIRE"/linux{,-config,-firmware,-headers,-kernel,-modules}

                  auto_update linux
                  auto_update linux-config
                  auto_update linux-headers
 [ -d /boot/ ] && auto_update linux-firmware
 [ -d /boot/ ] && auto_update linux-kernel
 [ -d /boot/ ] && auto_update linux-modules

 if   [ -f "$CURRENT_LOGS"/deployment-docent ] ||
      [ -f "$CURRENT_LOGS"/sorcerer-iso9660  ]
 then auto_update linux-documentation
 fi

 default_post_install
}

current(){ [ -f /usr/src/linux/Makefile ]; }
