   VERSION=( 1.3.5 1.2.1 )
  CATEGORY='development'
 ATTRIBUTE='console new'
    SOURCE="gnu-arch/tla-$VERSION.tar.gz"
  HOMEPAGE='http://www.gnuarch.org'
       URL="$GNU_URL"
       REQ='openssh'
  ESTIMATE='4252'
      DESC="$SPELL is a revision control tool
gnuarch is a revision control, source code and configuration 
management tool.

A revision control system is a librarian and coordination tool for 
trees of files and the changes made to them. For example, a typical 
software project uses revision control to keep track of how the 
project's source code evolves over time, to keep track of each change 
to that code (such as each bug fix or feature addition), to share 
those changes among all the programmers working on the project and 
help them remain in sync, and to combine changes made at different 
times and/or by different programmers into a single source tree.

A source management tool is one that helps you to manage large source 
trees even if they have many more files that you can keep track of 
by hand. For example, a source management tool can inventory the source 
files in a tree, distinguish the source files from scratch files and 
and other files that maybe stored there, and inform you when source 
files are added and deleted.

Configuration Management addresses the needs of projects which combine 
multiple, separately maintained source trees into a single tree. A 
configuration management tool helps you to easily construct the 
combined project and to keep track of how development on the component 
parts is synchronized.

arch  has a number of advantages compared to competing systems. Among 
these are:

Works on Whole Trees: arch keeps track of whole trees - not just 
individual files. For example, if you change many files in a tree, 
arch can record all of those changes as a group rather than file-by-file; 
if you rename files or reorganize a tree, arch can record those tree 
arrangements along with your changes to file contents.

Changeset Oriented: arch doesn't simply snapshot your project trees. 
Instead, arch associates each revision with a particular changeset: 
a description of exactly what has changed. arch provides changeset 
oriented commands to help you review changesets, merge trees by 
applying changesets, examine the history of a tree by asking what 
changesets have been applied to it, and so forth.

Fully Distributed arch doesn't rely on a central repository . For 
example, there is no need to give write access to a project's archive 
to all significant contributors, instead, each contributor can have 
their own archive for their work. arch seamlessly operates across 
archive boundaries. 
"

build() {
 mkdir  src/=build
 cd     src/=build
 ../configure	--prefix=/usr			\
		--config-shell /bin/bash  	\
		$OPTS				&&
 make						&&
 make  test					&&
 prepare_install				&&
 make  install					&&
 cd 	..					&&
 mkdir -p               /usr/doc/$SPELL		&&
 cp -rv ../=* docs-tla  /usr/doc/$SPELL
}
