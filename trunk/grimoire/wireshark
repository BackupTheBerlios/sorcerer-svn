# gtk+ gui code fails to compile in version 1.11.0
# 1.10.2 no longer compiles
# 1.11.2 fails to compile

with info    last 20131221
with version   stable 1.10.5 1.10.4 1.10.3
with version unstable 1.11.2
with base    e2fsprogs glib gtk+ libpcap libsmi pcre perl--Pod-Simple
with elect   GeoIP
with elect   gnutls    ''          ''                  for analyzing SSL packets
with elect   krb5   --with-krb5 --without-krb5      for kerberos
#with elect   krb5
#with elect   libcap    ''          --without-libcap    for POSIX.1e capabilities management
with elect   lua
with elect   net-snmp  ''          --without-net-snmp  to decode SNMP packets
with elect   openssl   --with-ssl  --without-ssl       for secure connections
with elect   portaudio ''          --without-portaudio for use with the rtp_player
with also    --enable-gtk2
with also    --enable-warnings-as-errors=no
with role    network
with trait   makej x11
with source    stable http://www.wireshark.org/download/src/wireshark-$VERSION.tar.bz2
with source  unstable http://www.wireshark.org/download/src/wireshark-$VERSION.tar.bz2
with info    home http://www.wireshark.org/
with info    cite 'network protocol analyzer
It allows you to examine data from a live
network or from a capture file on disk.
You can interactively browse the capture data,
viewing summary and detail information for each packet.
Ethereal has several powerful features, including
a rich display filter language and the ability to
view the reconstructed stream of a TCP session.'

build(){
 LC_ALL=C grep -lr python * |
 xargs -r --max-lines=64 \
 sed -i 's:#!/usr/bin/env python$:#!/usr/bin/python2:
         s:#!/usr/bin/python$:#!/usr/bin/python2:
         s:#! /usr/bin/python$:#!/usr/bin/python2:'

 mkdir -pvm 755                       bin
 echo '#!/bin/bash'                 > bin/python
 echo 'exec /usr/bin/python2 "$@"' >> bin/python
 chmod 755                            bin/python

 local  RATH="$PATH"
 local  PATH="$PWD/bin:$RATH"
 export PATH

 rm -f CMakeLists.txt
 echo "OPTS=[$OPTS]"
 if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
 then LDFLAGS+=" -L/usr/lib64 -L/lib64"
 else LDFLAGS+=" -L/usr/lib -L/lib"
 fi
 default_build
}
