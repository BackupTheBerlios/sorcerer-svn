# Spell also needs to be adjusted for DESTDIR
# but not worth the effort since the software does not install/work

# This probably does not compile
# Compile log suggests that the source in ati-driver-installer has errors.
# Mon-Thu, eastern times
# 1 877 284 1566
# Phone number for ATI support

    stable 10-10-x86.x86_64 10-4-x86.x86_64 9-3-x86.x86_64
   require MesaLib fontconfig libXcursor libXinerama libXrandr
#  require MesaLib gcc-v3.3
  optional rovclock '' '' to underclock the ATI GPU before the fan melts
  category kernel
 attribute linux-26-module x11 x86
    source http://www2.ati.com/drivers/linux/ati-driver-installer-$VERSION.run
case $VERSION in
 10-10-x86.x86_64)
    source http://www.cosmicencounter.net/mirror/patch/ati-drivers-2.6.36.patch
    source http://www.cosmicencounter.net/mirror/patch/arch-2.6.36.patch
    source http://www.cosmicencounter.net/mirror/patch/ati-drivers-fix_compilation-bug-297322.patch
    source http://www.cosmicencounter.net/mirror/patch/sema_init.patch ;;
esac
  homepage http://www.ati.com/support/drivers/linux/radeon-linux.html
      vurl http://ati.amd.com/support/drivers/linux/linux-radeon.html
      desc 'xorg and linux kernel drivers provided by ATI for radeon class graphics cards

The fglrx module will probably load if agpgart and radeon
modules are not loaded nor compiled directly into the kernel.

A sample configuration file is in:
$GRIMOIRE/ati-driver-installer.d/

You may also want to install rovclock and reduce the clock speed of
the ATI GPU in order to prevent lockups, fan meltdown, and chip meltdown.

The display driver requires linux versions 2.6.x and POSIX shared memory.'


build_broke(){
# running sh $SOURCE --install does not install anything.
 sh $SOURCE --install
}


pre_build(){
                       BUILD_DIR="${BUILD_DIR:-$SOURCE_DIR/ati-driver-installer}"
 sh $SOURCE --extract $BUILD_DIR &&
 chown -R root:root   $BUILD_DIR &&
 cd                   $BUILD_DIR &&
 case $VERSION in
  10-10-x86.x86_64)
   patch           -p1 < ${SOURCE[1]} &&
   patch -d common -p1 < ${SOURCE[2]} &&
   patch -d common -p1 < ${SOURCE[3]} &&
   patch -d common -p1 < ${SOURCE[4]} ;;
 esac

#default_pre_build
}


build(){
 make_install(){
  cd        $BUILD_DIR

  /sbin/ldconfig -n           arch/$AVER/usr/X11R6/lib
  rm -rf common/{lib,usr/src} arch/$AVER/lib

  mkdir -p $DESTDIR
  cp -av common/* $XVER/* arch/$AVER/* $DESTDIR

#  find common $XVER arch/$AVER -type f -printf "%p %P\n" |
#  while read         FROM   TO
#  do    install -vD $FROM /$TO
#  done
#  find common $XVER arch/$AVER -type l -printf "%p %P\n" |
#  while read         FROM   TO
#  do    mv     -v   $FROM /$TO
#  done

  # cp  -rv  common/*  $XVER/*     arch/$AVER/usr  /
 }


 case $HOSTTYPE in
  x86_64) XVER+=x760_64a ; AVER=x86_64 ;;
       *) XVER+=x760     ; AVER=x86    ;;
 esac

 LVER=$( installed_version $( get_provider linux-kernel ) )
 LVER="${LVER:-$( uname -r )}"

 cd common/lib/modules/fglrx/build_mod

 sed -i "s:modprobe \$module:true:
         s:rmmod \$module:true:"     ../make_install.sh
 sed -i "s:\`uname -r\`:\"$LVER\":"  ../make_install.sh make.sh
 sed -i "s:hit=0:hit=1:"                                make.sh
 sed -i "s:\$\(shell uname -r\):$LVER:" 2.6.x/Makefile
#sed -i "/LIBIP_PREFIX=/d"           make.sh
 sed -i '/LIBIP_PREFIX=\./d' make.sh
 sed -i "s:LIBIP_PREFIX=\$.*:LIBIP_PREFIX=\$LIBIP_PREFIX \\\:" make.sh
 sed -i "s:OS_MOD=/lib/modules:OS_MOD=$DESTDIR/lib/modules:" ../make_install.sh

 LIBIP_PREFIX=../../../../../../arch/$AVER/lib/modules/fglrx/build_mod \
 sh -x ./make.sh &&
 cd .. &&
 sh ./make_install.sh &&
      make_install
}

# post_install(){ depmod -a -q -F /boot/System.map; }
