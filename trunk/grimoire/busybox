   VERSION=( "1.3.1" "1.1.3" "1.1.2" "1.1.1" "1.1.0" "1.2.2" "1.2.1" "1.2.0" )
    IGNORE="pre\|rc\|^1\.2\.\|^1\.0"
  CATEGORY="utility/shell"
 ATTRIBUTE="console"
case  $VERSION  in
  1.3.1)
    SOURCE=( "busybox-$VERSION.tar.bz2"
             "fixes-$VERSION/busybox-$VERSION.shadow.patch" ) ;;
      *)
    SOURCE="busybox-$VERSION.tar.bz2"  ;;
esac
       URL="http://www.busybox.net/downloads/"
  HOMEPAGE="http://www.busybox.net"
       REQ=( ""
             "uClibc:-static:-dynamic:link with uClibc if statically linking" )
 FRESHMEAT="busybox"
  ESTIMATE="800"
      DESC="busybox is a tiny rescue shell.
busybox combines tiny versions of many common
UNIX utilities into a single small executable.
It provides minimalist replacements for most
of the utilities you usually find in GNU
fileutils, shellutils, etc."


configure()  {
  local  CUR="$CONFIG_LOGS/$SPELL/busybox-config"
  local  OLD="$CONFIG_LOGS/$SPELL/busybox-config.old"

  if      !  [  -f  $CUR  ];  then
    if    !  sources_cached;  then
      echo  "Sources must be download before configuration."
      leech  -w  $SPELL
    fi
    pre_build                    &&
    optimize                     &&
    cp         "$OLD"   .config  &&
    make       menuconfig        &&
    cp         .config  $CUR
    if    [   -n   "$BUILD_DIR"  ]  &&
          [   -d   "$BUILD_DIR"  ]
    then  rm  -fr  "$BUILD_DIR"
    fi
  fi
}


build()  {

  restore_busybox_configs()  {
    local  CUR="$CONFIG_LOGS/$SPELL/busybox-config"
    local  OLD="$CONFIG_LOGS/$SPELL/busybox-config.old"

    if    [  -f   $CUR  ];  then  cp  $CUR  .config
    elif  [  -f   $OLD  ];  then  cp  $OLD  .config
    fi
  }


  store_config()  {  cp  .config  $CONFIG_LOGS/$SPELL/busybox-config;  }


  compile_and_install()  {
    if  echo  "$OPTS"  |  grep  -q  "static";  then
      uClibc_include="--sysroot=$( find /usr/*-linux-uclibc -maxdepth 0 -type d )"
      export  CPPFLAGS="$uClibc_include"
      export    CFLAGS="$uClibc_include $CFLAGS"
      export   LDFLAGS="$uClibc_include"
    else
      unset  LDFLAGS
    fi

    yes   ""  |  make  oldconfig
    store_config                      &&
    make  "CFLAGS=$CFLAGS"            \
          KBUILD_VERBOSE=1            &&
    prepare_install                   &&
    install  -m 0755  busybox  /bin   &&
    mkdir    -p                /bbin  &&
    cd                         /bbin  &&
    busybox  --help |
    grep "^	"   |
    grep ","        |
    tr   -d ' \t'   |
    tr   ',' '\n'   |
    grep '.'        |
    while  read;  do
      rm  -f           "$REPLY"
      ln  /bin/busybox "$REPLY"
    done
  }

  restore_busybox_configs
  compile_and_install
}
