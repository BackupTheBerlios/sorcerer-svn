with info    good 20131030
with version stable 2.12.0
with base    FlightGear-data

declare -A aircraft
while read     REPLY FILE; do
with switch  "$REPLY" "" '* the box to provide the aircraft'; aircraft["$REPLY"]="$FILE"
done < "$SPELL_DIR"/FlightGear-Aircraft.d/aircraft

[ -f   "$OPT_ON_LOGS"/FlightGear-Aircraft ] &&
while read REPLY; do
           REPLY="${aircraft["${REPLY//:/}"]}"
[ -n     "$REPLY" ] &&
with source  stable http://mirrors.ibiblio.org/flightgear/ftp/Aircraft-2.12/"$REPLY"
#with source  stable http://mirrors.ibiblio.org/flightgear/ftp/Aircraft-2.12/"$( sed "s:^${REPLY//:/}\t::p;d" "$SPELL_DIR"/FlightGear-Aircraft.d/aircraft )"
done < "$OPT_ON_LOGS"/FlightGear-Aircraft

with role    game game/3d/flightsim
with trait   data x11
with info    home http://www.flightgear.org/download/aircraft-v2-12/
with info    cite 'additional elective aircraft for FlightGear'

configure(){
 touch "$SPELL_DIR"/FlightGear-Aircraft
 generate_index
 echo FlightGear-Aircraft | pipe_queue "$LOAD_QUEUE"
}

build(){
 ## till's method for providing sources is insufficient for FlightGear-Aircraft

 local      BUILD_DIR="${SOURCE_DIR:=/aux/run/source}"/FlightGear-Aircraft
 rm   -fr "$BUILD_DIR"
 mkdir -p "$BUILD_DIR"
 cd       "$BUILD_DIR"

 local CX=0
 while [ -n "${SOURCE[$CX]}" ];
 do  unzip  "${SOURCE[$CX]}"; (( CX++ ))
 done

 install -vm 755 -d "$DESTDIR"/usr/share/flightgear/Aircraft/
 mv              -t "$DESTDIR"/usr/share/flightgear/Aircraft/ *
 chown -R root:root "$DESTDIR"/usr/share/flightgear/Aircraft/
 find               "$DESTDIR"/usr/share/flightgear/Aircraft/ -type d | xargs -r -d '\n' --max-lines=256 chmod 755
 find               "$DESTDIR"/usr/share/flightgear/Aircraft/ -type f | xargs -r -d '\n' --max-lines=256 chmod 644
}
