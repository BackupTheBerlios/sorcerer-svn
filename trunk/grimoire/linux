# linux sneakily invokes subversion during compilation
# however there is no apparent reason why.

   version stable	3.1.0		3.0.8		3.0.4
   version 3.0.x	3.0.8		3.0.4		3.0.3		3.0.2		3.0.1		3.0.0
   version 2.6.39.x	2.6.39.4	2.6.39.3	2.6.39.2	2.6.39.1
   version 2.6.38.x	2.6.38.8	2.6.38.6	2.6.38.5	2.6.38.4	2.6.38.3
   version 2.6.37.x     2.6.37.6	2.6.37.4	2.6.37.3	2.6.36.3
   version 2.6.36.x	2.6.36.4	2.6.36.3	2.6.36.2	2.6.36.1
   version 2.6.35.x	2.6.35.14	2.6.35.13	2.6.35.12	2.6.35.11	2.6.35.10
   version 2.6.34.x	2.6.34.10	2.6.34.9	2.6.34.8
   version 2.6.32.x	2.6.32.41	2.6.32.40	2.6.32.28	2.6.32.24
   version 2.6.30.x	2.6.30.10	2.6.30.9	2.6.30.8
   version 2.6.27.x	2.6.27.59	2.6.27.58	2.6.27.57	2.6.27.54

   require initramfs module-init-tools
  optional linux-firmware
  category kernel
 attribute console makej
case $VERSION in
 3.1.0) source $KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-${VERSION:0:3}.tar.xz ;;
 3.0.0) source $KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-${VERSION:0:3}.tar.xz ;;
 2.6.*) source $KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.6/linux-${VERSION:0:3}.tar.xz ;;
  *rc*) source $KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/testing/linux-$VERSION.tar.xz ;;
     *) source $KERNEL_URL pub/linux/kernel/v${VERSION:0:1}.x/linux-$VERSION.tar.xz ;;
esac
      info last  20110722
      info home  http://www.kernel.org/
   protect /boot
   protect /lib/modules
  eprovide linux-kernel
      desc 'stable linux kernels
linux is a clone of the Unix kernel,
written from scratch by Linus Torvalds
with assistance from a loosely-knit
team of hackers across the Net.
It aims towards POSIX and Single
UNIX Specification compliance.
It has all the features you would
expect in a modern fully-fledged
Unix kernel, including true multitasking,
virtual memory, shared libraries,
demand loading, shared copy-on-write
executables, proper memory management,
and TCP/IP networking.'

[ -f   $GRIMOIRE/linux.d/trim ] &&
while read        CONF      SIZE  DESC
do   switch OMIT_$CONF "" "$SIZE $DESC"
done < $GRIMOIRE/linux.d/trim


build(){

 geode(){
  if    grep -q Geode /proc/cpuinfo; then
   if   grep flags    /proc/cpuinfo | grep -wq 3dnow
   then echo GEODE_LX
   else echo MGEODGX1
   fi
  else false
  fi
 }

 amd(){
  if    grep "model name" /proc/cpuinfo | grep -q AMD; then
     if grep "flags"      /proc/cpuinfo | grep -qw "lm";       then echo K8
   elif grep "flags"      /proc/cpuinfo | grep -qw "3dnowext"; then echo K7
                                                               else echo K6
     fi
  else false
  fi
 }

 intel(){
# pentium MMX and pentium II has MMX, but pentium pro does not
# pentium III has SSE, but Pentium II does not.
# CONFIG_M686 is Pentium Pro the default

  if    grep "model name" /proc/cpuinfo | grep -q "Intel\|Celeron\|Pentium"; then
   if   grep "model name" /proc/cpuinfo | grep -q "Core\|Xeon"    &&
        grep "cpu family" /proc/cpuinfo | grep -q "6";            then echo CORE2
   elif grep "model name" /proc/cpuinfo | grep -q "Pentium\|Xeon" &&
        grep "cpu family" /proc/cpuinfo | grep -q "15";           then echo PENTIUM4
   elif grep "model name" /proc/cpuinfo | grep -q "Pentium(R) M"; then echo PENTIUMM
   elif grep "model name" /proc/cpuinfo | grep -q "Pentium III";  then echo PENTIUMIII
   elif grep "flags"      /proc/cpuinfo | grep -qw "sse";         then echo PENTIUMIII
   elif grep "model name" /proc/cpuinfo | grep -q "Pentium II";   then echo PENTIUMII
   elif grep "flags"      /proc/cpuinfo | grep -qw "mmx";         then echo PENTIUMII
   fi
   else false
  fi
 }


 get_cpu_ia32(){
  geode ||
  amd   ||
  intel
 }

 get_cpu_x86_64(){
  if   grep "model name" /proc/cpuinfo | grep -q "AMD";   then echo K8
  elif grep "model name" /proc/cpuinfo | grep -q "Atom";  then echo ATOM
  elif grep "model name" /proc/cpuinfo | "Core\|Xeon" &&
       grep "cpu family" /proc/cpuinfo | grep -q "6";     then echo CORE2
  elif grep "model name" /proc/cpuinfo | grep -q "Intel"; then echo PSC
  else false
  fi
 }


 adjust_config(){
  if [ -n "$2" ]; then
   sed -i "s:$1=y:# $1 is not set:" .config
   sed -i "s:# CONFIG_M$2 is not set:CONFIG_M$2=y:" .config
  fi
 }


 get_cpu(){
  case $HOSTYPE in
   x86_64) adjust_config "CONFIG_GENERIC_CPU" $( get_cpu_x86_64 ) ;;
        *) adjust_config "CONFIG_M686"        $( get_cpu_ia32   ) ;;
  esac
 }


 backup_modules(){
  if [ -d  /lib/modules/$VERSION ]; then
  rm   -rf /lib/modules/$VERSION.old
  cp   -a  /lib/modules/$VERSION \
           /lib/modules/$VERSION.old
  fi
 }

 install_kernel(){
  SM="System.map"
  BV="${VERSION}"
  BZ=$( find . -type f -name bzImage )

  rm    -rf               $DESTDIR/boot/$BV
  mkdir -p                $DESTDIR/boot/$BV
  cp       $BZ            $DESTDIR/boot/$BV/linux
  chmod 600               $DESTDIR/boot/$BV/linux
  cp           System.map $DESTDIR/boot/$BV
  rm    -f                $DESTDIR/boot/System.map
  ln    -s $BV/System.map $DESTDIR/boot/System.map
 }

 install_header(){
  mkdir   -vm 755 -p                                     $DESTDIR/usr/include/{asm,linux}
  install -vm 644 include/generated/asm-offsets.h        $DESTDIR/usr/include/asm
  install -vm 644 include/generated/{autoconf,compile}.h $DESTDIR/usr/include/linux
  true
 }

 restore_linux_configs(){

  local NAME
  case $HOSTTYPE in
   x86_64) NAME=x86_64 ;;
        *) if   [ -f /root/linux-smp ]; then NAME="ia32-smp"
           elif [ -f /root/linux-up  ]; then NAME="ia32-up"
           elif gzip -cd /proc/config.gz | grep CONFIG_SMP=y
           then NAME="ia32-smp"
           else NAME="ia32-up"
           fi ;;
  esac

  if   [ -f            $SCRIPT_DIR/$PROGRESS/$NAME ]
  then install -vm 600 $SCRIPT_DIR/$PROGRESS/$NAME    .config
  else install -vm 600 $SCRIPT_DIR/$PROGRESS/ia32-smp .config
  fi

  [ -n "${FEATURE[base]}" ] || get_cpu
 }

 trim_config(){
  for OMIT in $OPTS; do
   case $OMIT in
    OMIT_NETDEV_1000)
            sed -i "s:CONFIG_SCSI_BNX2_ISCSI=m:# CONFIG_SCSI_BNX2_ISCSI is not set:" .config
            sed -i "s:${OMIT/OMIT_/CONFIG_}=.*:# ${OMIT/OMIT_/CONFIG_} is not set:" .config  ;;
    OMIT_*) sed -i "s:${OMIT/OMIT_/CONFIG_}=.*:# ${OMIT/OMIT_/CONFIG_} is not set:" .config  ;;
   esac
  done
 }

 gzip_modules(){
  if ! spell_installed sorcerer-installer; then
   local KO="$DESTDIR/lib/modules/$VERSION/kernel/"
 # find $KO -type f -size +4096c | xargs -r --max-lines=64 gzip -v1
   find $KO -type f -size +4096c | xargs -r --max-lines=64 gzip -v9
   find $KO -type f              | sed   -n '/\.gz$/p' |
   while read; do mv -v "$REPLY" "${REPLY%\.gz}"; done
  fi
 }

 strip_modules(){
  find $DESTDIR/lib/modules/$VERSION/kernel -type f -name \*.ko |
  xargs --max-lines=256 strip --strip-unneeded
 }

 tame_oom_killer(){
  if [ -f mm/oom_kill.c ] && grep -q "force_sig(SIGKILL" mm/oom_kill.c; then
   echo "Adjusting oom-killer from SIGKILL to SIGTERM"
   sed -i "s:force_sig(SIGKILL:force_sig(SIGTERM:" mm/oom_kill.c
  fi
 }

 compile_and_install(){
# tame_oom_killer
  restore_linux_configs
  trim_config
  yes "" | make oldconfig
  make modules &&
  make bzImage &&
  make modules_install  INSTALL_MOD_PATH=$DESTDIR && strip_modules &&
  make firmware_install INSTALL_MOD_PATH=$DESTDIR &&
  install_kernel &&
  install_header &&
  gzip_modules   &&
  rm -fr /lib/modules/$VERSION
 }

 rm -fr        /usr/src/linux &&
 mv $BUILD_DIR /usr/src/linux &&
 cd            /usr/src/linux &&
 compile_and_install
}


post_install(){
 if   [[ -x /usr/bin/mail  ]]; then MAILER=/usr/bin/mail
 elif [[ -x /usr/bin/mailx ]]; then MAILER=/usr/bin/mailx
 fi

 if   [[ -n $MAILER   ]] &&
      [[ -n $SORCERER ]]
 then
  echo    -e "New linux kernel installed.\nReboot the box, please." |
  $MAILER -s "Reboot reminder from sorcery." $SORCERER
 fi

 grep -lr   '^/lib/modules/' $INSTALL_LOGS |
 sed        "s:.*[/]::;/^$/d;/^$SPELL$/d"  |
 pipe_queue "$CAST_QUEUE"

 rm -rf /boot/fast
 true
}

current(){
 case $VERSION in
  2.6.38.6) zcat /proc/config.gz | grep -q "CONFIG_BLK_CGROUP=y" ;;
 esac
}
