inherit linux
       REQ=( 'lilo module-init-tools'
             'laptop-mode-tools:::for conserving battery power on laptops' )
  ESTIMATE='15000'
      DESC='linux-modular provides a modular plug and pray linux kernel.
cast linux instead to create an efficient custom configured performance kernel.
Expect linux-modular to require 2G in /usr/src/linux for ia32 architecture'

unset  -f  configure  current

configure() { :; }

build() {
  backup_modules()  {
    if  [  -d   /lib/modules/$VERSION      ];  then
    rm     -rf  /lib/modules/$VERSION.old
    cp     -a   /lib/modules/$VERSION      \
                /lib/modules/$VERSION.old
    fi
  }

  install_kernel()  {
    SM="System.map"
    BV="${VERSION}"
    BZ=$(  find  .  -name  bzImage  )

    rm     -rf                  /boot/$BV
    mkdir  -p                   /boot/$BV
    cp          $BZ             /boot/$BV/linux
    cp              System.map  /boot/$BV
    rm     -f                   /boot/System.map
    ln     -s   $BV/System.map  /boot/System.map
  }

  install_header()  {
    mkdir   -m 0755  -p                         /usr/include/asm
    install -m 0644  include/asm/asm-offsets.h  /usr/include/asm
    mkdir   -m 0755  -p                         /usr/include/linux
    install -m 0644  include/linux/autoconf.h   /usr/include/linux
    install -m 0644  include/linux/compile.h    /usr/include/linux
    true
  }

  restore_linux_configs()  {
    if    [  -d  /isolinux  ]
    then  local  MAC="$HOSTTYPE"
    else  local  MAC="$( uname -m )"
    fi

    if    [  -f  $SCRIPT_DIR/$MAC.config  ]
    then  cp     $SCRIPT_DIR/$MAC.config   .config
    else  cp     $SCRIPT_DIR/i586.config   .config
    fi
  }

  compile_and_install()  {
    # apply_linux_patch
    restore_linux_configs
    yes  ""  |  make  oldconfig
    make   bzImage          &&
    make   modules          &&  prepare_install  &&
    make   modules_install  &&
    install_kernel          &&
    install_header
  }

  enable_initramfs()  {
    case  $INITRAMFS  in
        full)  return  ;;
      module)  return  ;;
           *)  sed  -i  '/INITRAMFS=/d'          /etc/sorcery/local.config
               echo      'INITRAMFS=module'  >>  /etc/sorcery/local.config
                          INITRAMFS=module
               update_initramfs  ;;
    esac
  }

  rm  -fr              /usr/src/linux  &&
  mv       $BUILD_DIR  /usr/src/linux  &&
  cd                   /usr/src/linux  &&
  compile_and_install                  &&
  enable_initramfs
}


current()  {
  if    !  [  -f      /usr/include/linux/autoconf.h  ]
  then  cp  /usr/src/linux/include/linux/autoconf.h  \
                      /usr/include/linux/autoconf.h
        true
  fi
}
