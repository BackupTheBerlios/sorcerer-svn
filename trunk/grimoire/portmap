   VERSION=( "5beta" "4" )
  CATEGORY="network"
 ATTRIBUTE="server"
    SOURCE="portmap_$VERSION.tar.gz"
       URL="ftp://ftp.porcupine.org/pub/security"
  HOMEPAGE="ftp://ftp.porcupine.org/pub/security/index.html"
       REQ="tcp_wrappers"
  ESTIMATE="16"
      DESC="portmap manages RPC connections, which are used by NFS and NIS protocols.
portmap manages RPC connections,
which are used by protocols such as NFS and NIS.
The portmap server must be running on machines which act
as servers for protocols which make use of the RPC mechanism.
This portmapper supports hosts.{allow,deny} type access control."


install_init()  {


  cp  $SCRIPT_DIR/portmap.sh     /etc/init.d

  if  $PORTMAP_BOOT;  then
    ln  -sf  ../init.d/portmap.sh  /etc/rc0.d/K70portmap
    ln  -sf  ../init.d/portmap.sh  /etc/rc1.d/K70portmap
    ln  -sf  ../init.d/portmap.sh  /etc/rc2.d/K70portmap
    ln  -sf  ../init.d/portmap.sh  /etc/rc6.d/K70portmap

    ln  -sf  ../init.d/portmap.sh  /etc/rc3.d/S30portmap
    ln  -sf  ../init.d/portmap.sh  /etc/rc4.d/S30portmap
    ln  -sf  ../init.d/portmap.sh  /etc/rc5.d/S30portmap
  fi

}

##############################################
configure() {
 if  !  grep  -q  "PORTMAP_BOOT="  $SPELL_CONFIG;  then

  if    query  "Invoke portmap at boot?" n
  then  echo   "PORTMAP_BOOT=true"   >>  $SPELL_CONFIG
  else  echo   "PORTMAP_BOOT=false"  >>  $SPELL_CONFIG
  fi

 fi
}

build() {


 # fix problems with glibc-2.3.2
 patch -p1 < $SCRIPT_DIR/portmap_5beta.patch

 make  WRAP_DIR=/usr/lib  &&
 prepare_install          &&
 cp  portmap    /sbin     &&
 cp  pmap_dump  /sbin     &&
 cp  pmap_set   /sbin     &&
 install_init
}

post_install() {
 default_post_install
 RUNLEVEL=$( runlevel | cut -d ' ' -f2 )

 if    [   -x  /etc/rc$RUNLEVEL.d/S30portmap  ]
 then          /etc/rc$RUNLEVEL.d/S30portmap  start
 fi
}

pre_remove() {
 default_pre_remove
 RUNLEVEL=$( runlevel | cut -d ' ' -f2 )

 if    [  -x  /etc/rc$RUNLEVEL.d/K70portmap  ]
 then         /etc/rc$RUNLEVEL.d/K70portmap  stop
 fi
}

