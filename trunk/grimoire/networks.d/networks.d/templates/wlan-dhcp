# Template for wireless DHCP configured network connection
# See also man iwconfig

INTERFACE="wlan0"		# Required, might also be wifi0, eth1, ra0, ...
MODULE=				# Optional
KEY=				# Optional for encrypted networks
MODE="Managed"			# Required
ESSID=				# Optional (default is any)
AP=				# Optional address of the Access Point
DHCP_OPTS="-d -N"               # Optional

restore_resolv_conf()  {
  if    [    -f  /etc/resolv.conf.${0##*/}  ]
  then  cmp  -s  /etc/resolv.conf.${0##*/}  /etc/resolv.conf  ||
        cp       /etc/resolv.conf.${0##*/}  /etc/resolv.conf
  fi
}

test_dns() {
  local  NS=$(  grep   "nameserver"  /etc/resolv.conf  |
                sed  "s/nameserver//"  )
  if    [  -n  "$NS"  ]  &&
        which  nmap  &>/dev/null
  then         nmap  -n  -p 53  $NS  |  grep  -q  "open.*domain"
  fi
}

verify_connection()  {
  carrier()  {
    local  REPLY
    read < /sys/class/net/$INTERFACE/carrier 2>/dev/null
    (( REPLY == 1 ))
  }

  local     TIMEOUT=$SECONDS
         (( TIMEOUT += 10 ))
  while  (( TIMEOUT > SECONDS ))  &&
         !  carrier
  do     sleep 0.1
  done

  carrier              &&
  restore_resolv_conf  &&
  test_dns
}

start()  {
  [  -n  "$MODULE"  ]  &&  modprobe  "$MODULE"

                           iwconfig  $INTERFACE mode  "$MODE" 
  [  -n  "$KEY"     ]  &&  iwconfig  $INTERFACE key   "$KEY"	\
                       ||  iwconfig  $INTERFACE key   off
  [  -n  "$ESSID"   ]  &&  iwconfig  $INTERFACE essid "$ESSID"	\
                       ||  iwconfig  $INTERFACE essid any
  [  -n  "$AP"      ]  &&  iwconfig  $INTERFACE ap    "$AP"	\
                       ||  iwconfig  $INTERFACE ap    off

  if    [  -x  /sbin/dhclient  ];  then  /sbin/dhclient             $INTERFACE
  elif  [  -x  /sbin/dhcpcd    ];  then  /sbin/dhcpcd   $DHCP_OPTS  $INTERFACE
  else  false
  fi  &&

  verify_connection
}

stop()  {
               PIDF=/var/run/dhclient.pid ;  [  -f  $PIDF  ]  ||
               PIDF=/var/run/dhcpcd-$INTERFACE.pid
  [    -f     $PIDF  ]  	&&
  kill -p $(< $PIDF ) -s 15	&&
  rm   -f     $PIDF
}

$1
