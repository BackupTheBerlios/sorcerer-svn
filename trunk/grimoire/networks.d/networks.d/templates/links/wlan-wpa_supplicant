# Wireless configuration for the Homenet
#
INTERFACE="eth1"		# Required, might also be wifi0, eth1, ra0, ...
   MODULE="ipw2200"		# Optional
      KEY=			# Optional for encrypted networks
     MODE="Managed"		# Required
    ESSID=			# Optional (default is any)
       AP=			# Optional address of the Access Point
DHCP_OPTS="-d -N -n"            # Optional
  WPA_SUP="yes"                 # Use wpa_supplicant
 WPA_CONF=/etc/wpa_supplicant/wpa_wifi.conf	# Configuration file for wpa_supplicant

restore_resolv_conf()  {
  if    [    -f  /etc/resolv.conf.${0##*/}  ]
  then  cmp  -s  /etc/resolv.conf.${0##*/}  /etc/resolv.conf  ||
        { cp     /etc/resolv.conf.${0##*/}  /var/run/resolv.conf;
          [ -f   /etc/resolv.conf.default ]  || 
             cp  /etc/resolv.conf      /etc/resolv.conf.default 
          ln -sf /var/run/resolv.conf  /etc/resolv.conf
        }
  fi
}

test_dns() {
  local  NS=$(  grep   "nameserver"  /etc/resolv.conf  |
                sed  "s/nameserver//"  )
  if    [  -n  "$NS"  ]  &&
        which  nmap  &>/dev/null
  then         nmap  -n  -p 53  $NS  |  grep  -q  "open.*domain"
  fi
}

verify_connection()  {
  carrier()  {
    local  REPLY
    read < /sys/class/net/$INTERFACE/carrier 2>/dev/null
    (( REPLY == 1 ))
  }

  local     TIMEOUT=$SECONDS
         (( TIMEOUT += 10 ))
  while  (( TIMEOUT > SECONDS ))  &&
         !  carrier
  do     sleep 0.1
  done

  carrier              &&
  restore_resolv_conf
#  &&
#  test_dns
## namp is not available from the initramfs
}

start()  {
  [  -n  "$MODULE"  ]  &&  modprobe  "$MODULE"
  
  if [[ "$WPA_SUP" == "yes" ]]; then 
     # Start wpa_supplicant and let it manage wifi configuration
     [  -n "$WPA_CONF" ] 	\
	&&  /sbin/wpa_supplicant  -i${INTERFACE} -Dwext -c${WPA_CONF} -B	\
	||  /sbin/wpa_supplicant  -i${INTERFACE} -Dwext -B
	
     # Make sure wpa_cli is not running
     PID=/var/run/wpa_cli.${INTERFACE}
     [ -f $PID ]  &&  kill $( cat $PID )
     
     # Monitor connection status and run network (IP) configuration
     # script when wireless connection is established 
     # Wait until wpa_supplicant is running:
     for (( i=0; i<10; i++ ))
     do
	[ -S /var/run/wpa_supplicant/${INTERFACE} ]	&&
		break					||
		sleep 1
	echo -n "."
     done
     # Run wpa control interface in daemon mode executing the 
     # action file (-a <file>) that will perform actions on 
     # "CONNECT" and "DISCONNECT" events. See "man wpa_cli"
     # The script should, for example call dhcpcd on 'CONNECT'
     /sbin/wpa_cli -a /usr/local/sbin/wifi_autoconf.sh -i $INTERFACE -B -P "$PID"
  else
  # Use iwconfig
                              iwconfig  $INTERFACE mode  "$MODE" 
     [  -n  "$KEY"     ]  &&  iwconfig  $INTERFACE key   "$KEY"	\
                          ||  iwconfig  $INTERFACE key   off
     [  -n  "$ESSID"   ]  &&  iwconfig  $INTERFACE essid "$ESSID"	\
                          ||  iwconfig  $INTERFACE essid any
     [  -n  "$AP"      ]  &&  iwconfig  $INTERFACE ap    "$AP"	\
                          ||  iwconfig  $INTERFACE ap    off

     sleep 1

     [  -x  /usr/sbin/dhcpcd   ]  &&  
            /usr/sbin/dhcpcd   $DHCP_OPTS  $INTERFACE
  fi

  verify_connection
}

stop()  {
               PIDF=/var/run/dhclient.pid ;  [  -f  $PIDF  ]  ||
               PIDF=/var/run/dhcpcd-$INTERFACE.pid
  [    -f     $PIDF  ]  	&&
  kill -p $(< $PIDF ) -s 15	&&
  rm   -f     $PIDF		

  ifconfig    $INTERFACE  down
  /sbin/wpa_cli -i $INTERFACE terminate 2>/dev/null
}

$1
