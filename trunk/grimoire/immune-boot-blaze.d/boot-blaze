#!/bin/bash
# Copyright 2007, 2008, 2011 by Kyle Sallee,
# All rights reserved.
# For use with the distribution Sorcerer only.
# boot-blaze accelerates booting

load(){ /usr/bin/cut -f2- $CFG | /bin/tar --no-recursion -chPT - | /bin/cat; }
load(){ /usr/bin/cut -f2- $CFG | /usr/bin/xargs  -r --max-lines=256 /bin/cat; }
file(){ while read T F; do [[ -f $F ]] && echo "$T	$F"; done; }
used(){ find /bin /etc /usr /sbin -anewer $TMP -printf '%A@\t%p\n' | sort -g; }

remo(){
 /bin/cut  -d ' '  -f2  <  /proc/mounts |
 /bin/sed  -n '\,^/$,p;\,^/usr$,p'      |
 /bin/sort -u                           |
 while read; do /bin/mount -o remount$1 $REPLY; done
}

base(){
 declare -i  SEC    ORI=$( head -n 1 $1 | cut -f1 )
 while read  SEC         WHT
 do    ((    SEC -= ORI ))
       echo "$SEC	$WHT"
 done < $1
}

watch(){
 if   [[ -f $CFG ]] && [ -z "$( find $CFG -mtime +1 )" ]
 then return
 fi

 echo -n > $TMP
 remo ,atime; sleep 300; remo

 [[ -f $TMP ]] || return

  used >       $RAW;  mv     $CFG $CFG.old
  base         $RAW | cat -       $CFG.old |
  sort -uk2         |
  sort -g           | file > $CFG
  rm   -f $TMP $RAW
}

find_cgroup(){
 if [ -n "$CG" ]; then return 0; fi
 local DEV JUNK TYPE
 while read DEV CG TYPE JUNK; do
  if   [[ $DEV == cgroup_root ]] && [[ $TYPE == tmpfs  ]]; then return 0
  elif [[ $DEV == cgroup      ]] && [[ $TYPE == cgroup ]]; then return 0
  fi
 done < /proc/mounts
 unset CG
 return 1
}

main(){
 watch &>/dev/null & disown
 if find_cgroup; then
  echo 100 > $CG/blkio/daemon/boot-blaze/blkio.weight
  echo   8 > $CG/cpu/daemon/boot-blaze/cpu.shares
 fi
 if [[ -f $CFG ]]; then
  load &>/dev/null & disown
 fi
}

trap : SIGHUP SIGINT SIGQUIT SIGILL SIGABRT SIGSTOP
umask 077
EXT="$$.$RANDOM$RANDOM"
TMP=/tmp/boot-blaze.tmp.$EXT
RAW=/tmp/boot-blaze.raw.$EXT
CFG=/etc/boot-blaze
export LC_ALL=C
if   [[     -x /usr/libexec/bash/sleep ]]
then enable -f /usr/libexec/bash/sleep sleep
fi
main &>/dev/null
