#! /bin/bash

### BEGIN INIT INFO
# Provides: sshd
# Required-Start: $network
# Required-Stop:  $network
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: aiccu provide ipv6 tunel client to sixxs network
# Description: aiccu provide ipv6 tunel client to sixxs network
### END INIT INFO


NAME=aiccu
SERV="/usr/sbin/${NAME}"
DESC="SixXS Automatic IPv6 Connectivity Client Utility (${NAME})"
BACKGROUND=true
PIDF="/var/run/aiccu.pid"

# Options
OPTIONS=""

. /lib/lsb/init-functions

verify() {
    if [ -f /etc/default/${NAME} ]; then
    	. /etc/default/${NAME}
    fi
    
    # Verify that the configuration file exists
    if [ ! -f /etc/aiccu.conf ]; then
    	echo "AICCU Configuration file /etc/aiccu.conf doesn't exist"
    	return 1;
    fi
    
    # Verify that the configuration is correct
    if [ `grep -c "^username" /etc/aiccu.conf 2>/dev/null` -ne 1 ]; then
    	echo "AICCU is not configured, edit /etc/aiccu.conf first"
    	return 1;
    fi
    
    # Verify that it is in daemonize mode, otherwise it won't ever return
    if [ `grep -c "^daemonize true" /etc/aiccu.conf 2>/dev/null` -ne 1 ]; then
    	echo "AICCU is not configured to daemonize on run"
    	return 1;
    fi
    
    if [ "$BACKGROUND" = "false" ]; then
    	return 1;
    fi
}

start() {
  log_warning_msg  "$NAME starting"
  [      -d  /var/empty  ]  ||
  mkdir  -p  /var/empty
  if    $SERV start
  then  log_success_msg  "$NAME started"
  else  log_failure_msg  "$NAME not started"
        status
  fi
}

stop() {
  log_warning_msg "$NAME stopping"
  if    $SERV stop
  then  log_success_msg "$NAME stopped"
  else  log_failure_msg "$NAME not stopped"
        status
        return 0
  fi
}

case "$1" in
  start)  verify && start   ;;
  stop)    stop    ;;
  restart|reload|force-reload)   stop && sleep1 && start ;;
  *)
	echo "Usage: /etc/init.d/$NAME {start|stop|reload|force-reload|restart}" >&2
	return 1
esac

return 0
