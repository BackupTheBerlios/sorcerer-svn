# Static libraries must be enabled or the build fails with
# g++: gdalinfo.o: No such file or directory
# odd, 1.7.2 the download url has gdal-1.7.2.tar.gz.md5
# but not the actual gdal-1.7.2.tar.gz

# actual 1.9.1 tarball missing, but gdal-1.9.1.tar.gz.md5 present

   version stable 1.9.1
case $VERSION in
 1.9.1)
      opts --with-gif=no ;;
esac
   require curl geos giflib hdf5 jasper libpng pixman proj sqlite tiff unixODBC
# temporarily disabling optional on libgeotiff while libgeotiff is broke
# optional libgeotiff ''             '' for external GeoTiff library
  optional openjpeg
  optional postgresql ''             '' for postgresql support
  optional xerces-c   --with-xerces  '' to include Xerces C++ XML Parser support for GML
    switch            --with-threads '' to support multi thread operation
#     opts --enable-static=yes
      opts --disable-static
  category utility/gis
 attribute console library makej multilib-dual
    source http://download.osgeo.org/gdal/gdal-$VERSION.tar.gz
      info good 20120716
      info last 20120527
      info home http://www.gdal.org/
      desc 'translator library for raster geospatial data formats
gdal also comes with a variaty of useful command line utilities
for data translation and processing:
    * gdalinfo - report information about a file.
    * gdal_translate - Copy a raster file, with control of output format.
    * gdaladdo - Add overviews to a file.
    * gdalwarp - Warp an image into a new coordinate system.
    * gdaltindex - Build a MapServer raster tileindex.
    * gdal_contour - Contours from DEM.
    * rgb2pct.py - Convert a 24bit RGB image to 8bit paletted.
    * pct2rgb.py - Convert an 8bit paletted image to 24bit RGB.
    * gdal_merge.py - Build a quick mosaic from a set of images.
    * gdal_rasterize - Rasterize vectors into raster file.
    * gdal-config - Get options required to build software using GDAL.'

build(){
 if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
 then export LDFLAGS+=' -L/usr/lib64'
 fi
 default_build
}
