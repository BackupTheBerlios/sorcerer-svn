# This probably does not compile
# Compile log suggests that the source in amd-driver-installer has errors.
# Mon-Thu, eastern times
# 1 877 284 1566
# Phone number for ATI support

   version stable 12-8-x86.x86_64 12-4-x86.x86_64
   version latest 12-8-x86.x86_64
   require MesaLib fontconfig libXcursor libXinerama libXrandr
  optional linux-kernel '' '' for kernel module
  optional rovclock '' '' to underclock the ATI GPU before the fan melts
  category kernel
 attribute library linux-module multilib-fail x11
    source http://www2.ati.com/drivers/linux/amd-driver-installer-$VERSION.zip
#   source http://www2.ati.com/drivers/linux/amd-driver-installer-$VERSION.run
      info last 20120814
      info home http://support.amd.com/us/gpudownload/linux/Pages/radeon_linux.aspx
 conflicts ati-driver-installer
      desc 'xorg and linux kernel drivers provided by ATI for radeon class graphics cards

The fglrx module will probably load if agpgart and radeon
modules are not loaded nor compiled directly into the kernel.

A sample configuration file is in:
$GRIMOIRE/amd-driver-installer.d/

You may also want to install rovclock and reduce the clock speed of
the ATI GPU in order to prevent lockups, fan meltdown, and chip meltdown.

The display driver requires linux versions 2.6.x and POSIX shared memory.

Observations about version 10-10-x86.x86_64
seems to cause black textures when pixel shading is enabled.
Also xinerama and compositing can not be used concurrently.
amdccle is the ATI Catalyst Control Center program
which can be run by root in order to fix the -15%
underscaling that ATI cards do by default.
The black screen board can be eliminated with this.
Logging out or restart X might cause X and/or KDM to hang
and/or the driver might crash making X impossible to kill
and will require a system reboot to fix.'


# pre_build(){
#                        BUILD_DIR="${BUILD_DIR:-$SOURCE_DIR/amd-driver-installer}"
#  sh $SOURCE --extract $BUILD_DIR &&
#  chown -R root:root   $BUILD_DIR &&
#  cd                   $BUILD_DIR
# }


build(){
 make_install(){
  cd $BUILD_DIR

  /sbin/ldconfig -n           arch/$AVER/usr/X11R6/lib
  rm -rf common/{lib,usr/src} arch/$AVER/lib

  mkdir -pvm 755 $DESTDIR
  cp -av common/* $XPIC/* arch/$AVER/* $DESTDIR
  cp -a  $DESTDIR/usr/X11R6/*          $DESTDIR/usr/
  rm -fr $DESTDIR/usr/X11R6
 }

 move_dirs(){
  if   [ -d       $DESTDIR/usr/lib64/modules ]; then
   mkdir -pvm 755 $DESTDIR/usr/lib64/xorg
   mv             $DESTDIR/usr/lib64/modules \
                  $DESTDIR/usr/lib64/xorg/
  fi
  if   [ -d       $DESTDIR/usr/lib/modules ]; then
   mkdir -pvm 755 $DESTDIR/usr/lib/xorg
   mv             $DESTDIR/usr/lib/modules \
                  $DESTDIR/usr/lib/xorg/
  fi

  if   [ -d $DESTDIR/usr/lib64/xorg/modules/dri ]; then
   mv       $DESTDIR/usr/lib64/xorg/modules/dri \
            $DESTDIR/usr/lib64/
  fi
  if   [ -d $DESTDIR/usr/lib/xorg/modules/dri ]; then
   mv       $DESTDIR/usr/lib/xorg/modules/dri \
            $DESTDIR/usr/lib/
  fi
 }

 activate_opengl(){
  mkdir  -pvm 755 $DESTDIR/etc/opengl
  if   [ -f       $DESTDIR/usr/lib64/fglrx/fglrx-libGL.so.1.2 ]; then
   mkdir -pvm 755 $DESTDIR/usr/lib64/ati
   mv             $DESTDIR/usr/lib64/fglrx/fglrx-libGL.so.1.2 \
                  $DESTDIR/usr/lib64/ati/libGL.so.1.2
   mv             $DESTDIR/usr/lib64/xorg/modules/extensions/fglrx/fglrx-libglx.so \
                  $DESTDIR/usr/lib64/xorg/modules/extensions/libglx.so
   ldconfig -n    $DESTDIR/usr/lib64/ati
   echo                   /usr/lib64/ati > $DESTDIR/etc/opengl/ati
  fi
  if   [ -f       $DESTDIR/usr/lib/fglrx/fglrx-libGL.so.1.2 ]; then
   mkdir -pvm 755 $DESTDIR/usr/lib/ati
   mv             $DESTDIR/usr/lib/fglrx/fglrx-libGL.so.1.2 \
                  $DESTDIR/usr/lib/ati/libGL.so.1.2
   mv             $DESTDIR/usr/lib/xorg/modules/extensions/fglrx/fglrx-libglx.so \
                  $DESTDIR/usr/lib/xorg/modules/extensions/libglx.so
   ldconfig -n    $DESTDIR/usr/lib/ati
   echo                   /usr/lib/ati  >> $DESTDIR/etc/opengl/ati
  fi
 }

 local src=$( find  $BUILD_DIR -type f -name \*.run )
 sh $src --extract  $BUILD_DIR &&
 chown -R root:root $BUILD_DIR

 local MVER LVER XPIC AVER

 if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
 then MVER=x86_64
 else MVER=x86
 fi

 LVER=$( installed_version $( get_provider linux-kernel ) )
 LVER="${LVER:-$( uname -r )}"

 cp -v arch/$MVER/lib/modules/fglrx/build_mod/libfglrx_ip.a \
           common/lib/modules/fglrx/build_mod

 cd common/lib/modules/fglrx/build_mod

 sed -i "s:modprobe \$module:true:
         s:rmmod \$module:true:"     ../make_install.sh
 sed -i "s:\`uname -r\`:\"$LVER\":"  ../make_install.sh make.sh
 sed -i "s:hit=0:hit=1:"                                make.sh
#sed -i "s:\$\(shell uname -r\):$LVER:" 2.6.x/Makefile
#sed -i "/LIBIP_PREFIX=/d"           make.sh
 sed -i '/LIBIP_PREFIX=\./d' make.sh
 sed -i "s:LIBIP_PREFIX=\$.*:LIBIP_PREFIX=\$LIBIP_PREFIX \\\:" make.sh
 sed -i "s:OS_MOD=/lib/modules:OS_MOD=$DESTDIR/lib/modules:" ../make_install.sh

 if   LIBIP_PREFIX=../../../../../../arch/$MVER/lib/modules/fglrx/build_mod \
      sh ./make.sh &&
      cat  make.sh.log &&
      cd .. &&
      sh ./make_install.sh
 then echo "Kernel Module fglrx.ko should be installed"
 else echo "A problem might exist in /usr/src/linux"
      echo "Kernel module fglrx.ko will not be installed"
      echo "3D will not be hardware accelerated."
 fi &&
 
      XPIC=xpic;     AVER=x86;    make_install &&
 if   [[ $HOSTTYPE == x86_64 ]]
 then XPIC=xpic_64a; AVER=x86_64; make_install
 fi
 move_dirs &&
 activate_opengl
}
