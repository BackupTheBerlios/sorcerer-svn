# This probably compiles and installs
# but omits the kernel module.
# it does not appreciate the linux kernel source
# provided for it.

# Mon-Thu, eastern times
# 1 877 284 1566
# Phone number for ATI support

with info    edit 20131211
with info    good 20130903
with info    last 20130529
with version stable 13-4-linux-x86.x86_64 12-8-x86.x86_64
with base    MesaLib fontconfig libXcursor libXinerama libXrandr
if   [ -f "$VERSION_INDEX"/linux-modules ]; then
with elect   linux-modules '' '' for kernel module
fi
with elect   rovclock '' '' to underclock the ATI GPU before the fan melts
with role    kernel
with trait   library linux-module multilib-fail x11
with source  stable http://www2.ati.com/drivers/linux/amd-driver-installer-catalyst-13-4-linux-x86.x86_64.zip
# with source  stable http://www2.ati.com/drivers/linux/amd-driver-installer-$VERSION.zip
with info    home http://support.amd.com/us/gpudownload/linux/Pages/radeon_linux.aspx
with clash   ati-driver-installer
with info    cite 'xorg and linux kernel drivers provided by ATI for radeon class graphics cards

The fglrx module will probably load if agpgart and radeon
modules are not loaded nor compiled directly into the kernel.

A sample configuration file is in:
$TECHNIC_DIR/amd-driver-installer.d/

You may also want to install rovclock and reduce the clock speed of
the ATI GPU in order to prevent lockups, fan meltdown, and chip meltdown.

The display driver requires linux versions 2.6.x and POSIX shared memory.

Observations about version 10-10-x86.x86_64
seems to cause black textures when pixel shading is enabled.
Also xinerama and compositing can not be used concurrently.
amdccle is the ATI Catalyst Control Center program
which can be run by root in order to fix the -15%
underscaling that ATI cards do by default.
The black screen board can be eliminated with this.
Logging out or restart X might cause X and/or KDM to hang
and/or the driver might crash making X impossible to kill
and will require a system reboot to fix.'


# pre_build(){
#                        BUILD_DIR="${BUILD_DIR:-$SOURCE_DIR/amd-driver-installer}"
#  sh $SOURCE --extract $BUILD_DIR &&
#  chown -R root:root   $BUILD_DIR &&
#  cd                   $BUILD_DIR
# }


build(){
 make_install(){
  cd $BUILD_DIR

  /sbin/ldconfig -n           arch/$AVER/usr/X11R6/lib
  rm -rf common/{lib,usr/src} arch/$AVER/lib

  install -dvm 755 "$DESTDIR"/
  cp -av common/* $XPIC/* arch/$AVER/* "$DESTDIR"/
  cp -a  "$DESTDIR"/usr/X11R6/*        "$DESTDIR"/usr/
  rm -fr "$DESTDIR"/usr/X11R6
 }

 move_dirs(){
  if   [ -d         "$DESTDIR"/usr/lib64/modules ]; then
   install -dvm 755 "$DESTDIR"/usr/lib64/xorg
   mv               "$DESTDIR"/usr/lib64/modules \
                    "$DESTDIR"/usr/lib64/xorg/
  fi
  if   [ -d         "$DESTDIR"/usr/lib/modules ]; then
   install -dvm 755 "$DESTDIR"/usr/lib/xorg
   mv               "$DESTDIR"/usr/lib/modules \
                    "$DESTDIR"/usr/lib/xorg/
  fi

  if   [ -d "$DESTDIR"/usr/lib64/xorg/modules/dri ]; then
   mv       "$DESTDIR"/usr/lib64/xorg/modules/dri \
            "$DESTDIR"/usr/lib64/
  fi
  if   [ -d "$DESTDIR"/usr/lib/xorg/modules/dri ]; then
   mv       "$DESTDIR"/usr/lib/xorg/modules/dri \
            "$DESTDIR"/usr/lib/
  fi
 }

 activate_opengl(){
  install -dvm 755  "$DESTDIR"/etc/opengl/
  if   [ -f         "$DESTDIR"/usr/lib64/fglrx/fglrx-libGL.so.1.2 ]; then
   install -dvm 755 "$DESTDIR"/usr/lib64/ati
   mv               "$DESTDIR"/usr/lib64/fglrx/fglrx-libGL.so.1.2 \
                    "$DESTDIR"/usr/lib64/ati/libGL.so.1.2
   mv               "$DESTDIR"/usr/lib64/xorg/modules/extensions/fglrx/fglrx-libglx.so \
                    "$DESTDIR"/usr/lib64/xorg/modules/extensions/libglx.so
   ldconfig -n      "$DESTDIR"/usr/lib64/ati
   echo                       /usr/lib64/ati > "$DESTDIR"/etc/opengl/ati
  fi
  if   [ -f         "$DESTDIR"/usr/lib/fglrx/fglrx-libGL.so.1.2 ]; then
   install -dvm 755 "$DESTDIR"/usr/lib/ati
   mv               "$DESTDIR"/usr/lib/fglrx/fglrx-libGL.so.1.2 \
                    "$DESTDIR"/usr/lib/ati/libGL.so.1.2
   mv               "$DESTDIR"/usr/lib/xorg/modules/extensions/fglrx/fglrx-libglx.so \
                    "$DESTDIR"/usr/lib/xorg/modules/extensions/libglx.so
   ldconfig -n      "$DESTDIR"/usr/lib/ati
   echo                       /usr/lib/ati  >> "$DESTDIR"/etc/opengl/ati
  fi
 }

 prepare_linux_dir(){
  if ! [ -f /usr/src/linux/Makefile ]; then
   echo    "/usr/src/linux is missing."
   echo    "Therefore, trying to compile and install without kernel module."
  else
   mkdir "$BUILD_DIR"/linux
   cd    "$BUILD_DIR"/linux
   local    d=/usr/src/linux
   local c=$d/.config.custom
   local s=$d/.config.stock

   cp -a /usr/src/linux .

     if [ -f $c ]; then cp $c linux/.config
   elif [ -f $s ]; then cp $s linux/.config
   else
    echo "$c does not exist"
    echo "$s does not exist"
    echo "$c or $s must exist"
    echo "try casting linux-config first"
    cd "$OLDPWD"
    return 1
   fi

   cd linux
   yes '' |
   make oldconfig
 # make silentoldconfig
   make prepare scripts
   cd "$OLDPWD"
  fi
 }

 prepare_linux_dir

 local MVER LVER XPIC AVER

 if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
 then MVER=x86_64
 else MVER=x86
 fi

 LVER=$( installed_version $( get_provider linux-modules ) )
 LVER="${LVER:-$( uname -r )}"

 local src=$( find    "$BUILD_DIR" -type f -name \*.run )
 sh "$src" --extract  "$BUILD_DIR" &&
 chown -R root:root   "$BUILD_DIR" &&
 cd                   "$BUILD_DIR" &&

 cp -v arch/$MVER/lib/modules/fglrx/build_mod/libfglrx_ip.a \
           common/lib/modules/fglrx/build_mod &&

 cd common/lib/modules/fglrx/build_mod &&

 sed -i "s:modprobe \$module:true:
         s:rmmod \$module:true:"     ../make_install.sh &&
 sed -i "s:\`uname -r\`:\"$LVER\":"  ../make_install.sh make.sh &&
 sed -i "s:hit=0:hit=1:"                                make.sh &&
#sed -i "s:\$\(shell uname -r\):$LVER:" 2.6.x/Makefile &&
#sed -i "/LIBIP_PREFIX=/d"           make.sh &&
 sed -i '/LIBIP_PREFIX=\./d' make.sh &&
 sed -i "s:LIBIP_PREFIX=\$.*:LIBIP_PREFIX=\$LIBIP_PREFIX \\\:" make.sh &&
 sed -i "s:OS_MOD=/lib/modules:OS_MOD=$DESTDIR/lib/modules:" ../make_install.sh &&
 sed -i "s:/usr/src/linux:$BUILD_DIR/linux:" make.sh &&

 if   LIBIP_PREFIX=../../../../../../arch/$MVER/lib/modules/fglrx/build_mod \
      sh ./make.sh &&
      cat  make.sh.log &&
      cd .. &&
      sh ./make_install.sh
 then echo "Kernel Module fglrx.ko should be installed"
 else echo "Kernel module fglrx.ko will not be installed"
      echo "3D will not be hardware accelerated."
 fi &&

       XPIC=xpic;     AVER=x86;    make_install &&
 if   [[ $HOSTTYPE == x86_64 ]]
 then XPIC=xpic_64a; AVER=x86_64; make_install
 fi &&
 move_dirs &&
 activate_opengl
}
