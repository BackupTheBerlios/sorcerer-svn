# Copyright Kyle Sallee 2011, 2012, 2013
# All rights reserved.
# For use with the distribution sorcerer only!

with info    last   20131211
with version stable 20131211
with base    md5crypt tomoyo-tools
with role    immune-system
with trait   solo stale
with info    home http://sorcerer.silverice.org/
with info    cite 'enhanced security

Tomoyo on Sorcerer has 5 generally used domain
<kernel> /sbin/init
<kernel> /domain/freedom
<kernel> /domain/user
<kernel> /domain/limited
<kernel> /domain/et

The first domain is a default domain and provides no restrictions.
The second domain provides no restrictions
The third domain provides restrictions appropriate for users.
The forth domain provides restrictions appropraite
for servers/daemons that do not provide user login.
The fifth domain has restrictions suitable for software compilation,
but not software installation.

The domains that begin with /domain/ are also mirrored
for each root file system so that
if a root file system is mounted on /+/base/
then /+/base/domain/{et,freedom,user,limited}
domains also exist.

Domain transition is accomplished by running
a domain transition script installed in /domain/

Transitioning to domain
<kernel> domain/freedom
is allowed only from
<kernel> /+/*/domain/user
and requires authentication.
Any user can authenticate with a password
that was specified by the SA
when the SA previously runs
# /etc/init.d/tomoyo-freedom-password configure
Authentication ensures that those who achieve root UID
are rightfully entitled to the privilege of root
rather than having acquired root
by exploiting a bug in a  UID 0 process or
by exploiting a bug in a SUID 0 executable file.

Processes in domain
<kernel> /domain/limited
<kernel> /domain/user
will be unable to modify files in
/aux/ /bin/ /boot/ /etc/ /home/ /lib/ /lib64/ /opt/ /usr/ /var/log/
Mounting also is disabled.
This limits the damage that can be done
when someone acquires UID 0 or EUID 0 without authentication.

Processes in domain
<kernel> /domain/limited
will be unable to execute files on temporary directories
and are unable to modify files in home directories.

tomyo can still be configured
to provide mandatory access control lists specific to programs
exactly as described in the tomoyo documentations.
Write the new domain files in /etc/tomoyo/sorcerer/domain/
Write the new exception files in /etc/tomoyo/sorcerer/exception/
Write the transition scripts  in /etc/tomoyo/sorcerer/transition/
That way the modifications are merged
with Sorcerer defaults and loaded into the kernel.

Tomoyo on Sorcerer does not replace traditional security.
Instead the traditional security model is enforced
by ensuring that those who become root
can also provide the root password or authenticate to /domain/freedom
before gaining privilege to make potentially unwated modifications.

Note that some services might have custom domains
that that are far more restrictive than the limited domain.'

build(){
 install -vm 755 -d "$DESTDIR"/usr/sbin/
 install -vm 755 -t "$DESTDIR"/usr/sbin/ "$SCRIPT_DIR"/sulogin
}

post_install(){
 rm -f           /root/.bash_history
 ln -s /dev/null /root/.bash_history
 if   [ -f /lib64/tomoyo/init_policy ]; then /lib64/tomoyo/init_policy --file-only-profile --max_learning_entry=65536
 elif [ -f   /lib/tomoyo/init_policy ]; then   /lib/tomoyo/init_policy --file-only-profile --max_learning_entry=65536
 fi
 return 0
}
