#!/bin/bash
# must be /bin/bash for $RANDOM
### BEGIN INIT INFO
# Required-Start: dmsetup
# Should-Start: loadkeys mdadm udev vgchange
# Required-Stop: finale halt reboot reboot-kexec vgchange
# Default-Start: S
# Default-Stop: 0 6
# Short-Description: cryptsetup finds luks encrypted devices and maps them to /dev/mapper/
#
# luks devices must have names in /etc/fstab such as
# /dev/mapper/luks-sda3       where /dev/sda3              is a LUKS encrypted partition or
# /dev/mapper/luks-total-root where /dev/mapper/total-root is a LUKS encrypted LVM2 logical volume
# /dev/mapper/luks-1234-5678  where /dev/disk/by-uuid      is a LUKS encrypted partition
#
# Not supported:
# lukes encrypted filesystems in files attached to loop devices
# Use a custom script if using luks on a loop device.
### END INIT INFO

. /lib/lsb/init-functions

NAME=cryptsetup

start(){
 ldev(){
  sed 's, #.*,,
       \,noauto,d
       \,/dev/mapper/luks-,p; d' /etc/fstab |
  while read DEV MNT TYP JNK; do
   REV="/dev/${DEV#*-}"
   MEV="/dev/mapper/${DEV#*-}"
   UEV="/dev/disk/by-uuid/${DEV#*-}"
   if   [ -b "$MEV" ] && cryptsetup isLuks $MEV; then echo "$MEV|$DEV|$TYP"
   elif [ -b "$REV" ] && cryptsetup isLuks $REV; then echo "$REV|$DEV|$TYP"
   elif [ -b "$UEV" ] && cryptsetup isLuks $UEV; then echo "$UEV|$DEV|$TYP"
   fi
  done
 }

# dialogs nested inside of of another pipe will not work
# when executed during sysinit, there for this ugly compaction
# an uncompaction is being used instead for now.

 run(){
  for LINE in $( ldev ); do
   REV=${LINE%%|*}
   TYP=${LINE##*|}
   DEV=${LINE%|*}
   DEV=${DEV##*|}
   if   [ "$TYP" = swap ]; then
     KEY="$RANDOM$RANDOM$RANDOM$RANDOM$RANDOM"
    KEY+="$RANDOM$RANDOM$RANDOM$RANDOM$RANDOM"
    KEY+="$RANDOM$RANDOM$RANDOM$RANDOM$RANDOM"
    KEY+="$RANDOM$RANDOM$RANDOM$RANDOM$RANDOM"
    echo "$KEY" | cryptsetup -c aes-xts-plain -s 512 luksFormat $REV 2>/dev/null
    echo "$KEY" | cryptsetup luksOpen $REV ${DEV##*/} 2>/dev/null
    mkswap $DEV
   else
    dialog \
     --backtitle cryptsetup --stdout --no-cancel --timeout 300 \
     --title "Device Password Menu" \
     --passwordbox "Password for $DEV?" 0 0 |
    cryptsetup luksOpen $REV ${DEV##*/}
   fi
  done
 }  

 log_warning_msg "$NAME checking for luks devices"; run
 log_success_msg "$NAME luks mappings created"
}


stop(){
 run(){
  find     /dev/mapper -type b             |
  sed   's:/dev/mapper/\(luks-.*\):\1:p;d' |
  xargs -r cryptsetup luksClose
 }

 log_warning_msg "$NAME closing luks devices"; run &&
 log_success_msg "$NAME luks devices closed."      ||
 log_failure_msg "$NAME luks devices not closed."
}

try_restart(){ :; }

parse "$@"
