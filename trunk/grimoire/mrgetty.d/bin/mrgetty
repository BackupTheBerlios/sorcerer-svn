#!/bin/bash

# multi-root getty by Kyle Sallee Copyright 2013 All Rights Reserved.

BOLD="[1m"
NORM="[0m"
TAB="	"

find_login(){
 if   [[ -d /+/          ]]; then /bin/find {/+/*,}/bin/          -maxdepth 1 -type f -name login -printf '%H\n'
 elif [[ -d /media/root/ ]]; then /bin/find {/media/root/*,}/bin/ -maxdepth 1 -type f -name login -printf '%H\n'
 fi | /bin/sed 's:bin/$::' |      /bin/sort -r
}

tri_column(){
 local -i cx=0
 while read; do
  if   (( cx == root ))
  then echo -n "-->${roots[$cx]}<--"
  else echo -n "   ${roots[$cx]}   "
  fi
  (( cx++ ))
  if (( cx % 3 == 0 ))
  then echo
  else echo -n ":"
  fi
 done | /bin/column -s ":" -t |
 sed "s/-->/$BOLD-->/; s/<--/<--$NORM/"
}

roots_show(){ find_login | tri_column; }

instruct(){
 echo
 echo $"Adjust using arrows keys."
 echo $"Select using space  bar."
 echo $"Select login file   system."
 echo $"Selected = ${roots[$root]}"
}

roots_prompt(){
 /bin/clear
 roots_show
 instruct
}

root_select(){
 local -a roots=( $( find_login )  )
 local -i time="$SECONDS"
 root=0

 roots_prompt
 while :; do
  if read -n 1 -t 60;  then
   case $REPLY in
      D) (( root == 0 ))            || (( root--  )); roots_prompt ;;
      A) (( root <  3 ))            || (( root-=3 )); roots_prompt ;;
      C) [ -z "${roots[$root+1]}" ] || (( root++  )); roots_prompt ;;
      B) [ -z "${roots[$root+3]}" ] || (( root+=3 )); roots_prompt ;;
    ' ') root="${roots[$root]}"; return ;;
   esac
  else
   return 1
  fi
 done
}

namespace_pid(){
 if [ "$root" == / ]; then pid=1; return; fi

 root="${root%/}"

 pid="$( /bin/pgrep -u 0 -f "init namespace ${root//+/\+}$" )"
 if   [ -z "$pid" ]; then
  echo $"namespace for $root does not exist."
  echo $"login will not be possible."
  echo $"Press space bar to continue."
  read -n 1
  return 1
 fi
}

run_login(){ /bin/clear; exec /bin/nsenter -t $pid -i -m -n -p -r -u -w -F /bin/login; }

release(){ /bin/deallocvt; printf "%b\033c"; }

trap : SIGHUP SIGINT SIGQUIT SIGILL SIGABRT SIGSTOP SIGTSTP

if [ -z "$1" ]; then exec /bin/openvt -s -- /bin/mrgetty $$; fi

release
root_select   &&
namespace_pid &&
run_login     ||
release
