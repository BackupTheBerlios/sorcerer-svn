# --enable-system-cairo does not work with version 13.0

# some of the system libraries commented out because they random crashes
# which ones I am not certain about.
# --with-system-jpeg --with-system-nspr --with-system-nss --enable-system-sqlite

# cairo glitz is deprecated code that no longer works
# therefore do not experiment with it.

with info    last 20131120
with version   stable 25.0.1 25.0 24.0
with base    GConf bzip2 hicolor-icon-theme imake libXScrnSaver libnotify startup-notification sqlite xorg-cf-files yasm zip
with base    corefonts webfonts
with also    --disable-gnomevfs --disable-crashreporter
#with elect   yasm       '' --disable-webm     for webm video codec
# webm must not be disabled otherwise firefox fails to compile
# with switch  --enable-glitz --disable-glitz 'enable glitz for use with cairo'

with also    --with-system-zlib --with-system-bz2
with also    --enable-startup-notification --disable-static
with also    --enable-system-lcms --enable-application=browser
with also    --without-system-nss --without-system-nspr --disable-gstreamer
with also    --with-system-png --enable-system-sqlite
with also    --with-system-jpeg

#with also    --with-system-libxul --with-libxul-sdk=/usr
#with also    --disable-libxul --disable-xul
#with also    --with-system-nspr --with-system-nss

## toolkit=cairo-gtk3 failed compilation version 24.0
#with also --enable-system-cairo
with also    --enable-default-toolkit=cairo-gtk3
#with also    --enable-default-toolkit=cairo-gtk2
with also    --disable-debug --disable-tests --disable-mochitest
with also    --enable-strip --enable-official-branding
# Enable official branding should be fine because we are not 
# distributing the builds. This option names the browser Firefox instead
# of Minefield but launches a EULA on the first start:

with also    --disable-necko-wifi
# necko-wifi is not supported

with also    --disable-updater --disable-installer
# These two should be safe for Sorcerer

with role    network/web
with trait   bottleneck client huge library litelink makej multilib-fail optimize stack-protector solo x11
# granted solo trait to compile faster using makej on SMP boxes
#with trait   clang

# release.mozilla.org might no longer be serving source tarballs.
# also mirrored at sourceforge, but can not write the source statements
# as $SOURCEFORGE_URL
with source  stable \
             http://releases.mozilla.org/pub/mozilla.org/firefox/releases/$VERSION/source/ \
                   ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/$VERSION/source/ \
             firefox-$VERSION.source.tar.bz2
with source  unstable \
             http://releases.mozilla.org/pub/mozilla.org/firefox/releases/$VERSION/source/ \
                   ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/$VERSION/source/ \
             firefox-$VERSION.source.tar.bz2
with info    home http://www.mozilla.com/en-US/firefox/firefox.html
with hold    mozilla
with info    cite 'web brower based upon mozilla gecko HTML rendering engine'

build(){
 link_icons(){
  local hi="$DESTDIR"/usr/share/icons/hicolor
  local id="$DESTDIR"/usr/lib
  if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
  then id+=64
  fi
  id+=/firefox-$VERSION/browser/chrome/icons/default/default

  install -vm 755 -d "$DESTDIR"/usr/share/applications/ \
                     "$DESTDIR"/usr/share/icons/hicolor/{16x16,32x32,48x48}/apps/
  install -vm 644 -t "$DESTDIR"/usr/share/applications/ \
                     "$SCRIPT_DIR"/applications.d/firefox.desktop

  ln -f "${id}16.png" "$hi/16x16/apps/firefox.png"
  ln -f "${id}32.png" "$hi/32x32/apps/firefox.png"
  ln -f "${id}48.png" "$hi/48x48/apps/firefox.png"
 }

 make_install(){
  rm   -f "$DESTDIR"/usr/bin/firefox
  if    [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]; then
   if   [ -d                    "$DESTDIR"/usr/lib64/firefox-$VERSION ]
   then ln -fs firefox-$VERSION "$DESTDIR"/usr/lib64/firefox
        ln -fs firefox-$VERSION "$DESTDIR"/usr/lib64/mozilla
   fi
   ln   -s "$( find "$DESTDIR"/usr/lib64 -type f -name firefox -printf "../lib64/%P\n" )" "$DESTDIR"/usr/bin/firefox
  else
   if   [ -d                    "$DESTDIR"/usr/lib/firefox-$VERSION ]
   then ln -fs firefox-$VERSION "$DESTDIR"/usr/lib/firefox
        ln -fs firefox-$VERSION "$DESTDIR"/usr/lib/mozilla
   fi
   ln   -s "$( find "$DESTDIR"/usr/lib -type f -name firefox -printf "../lib/%P\n" )" "$DESTDIR"/usr/bin/firefox
  fi
  rm -fr /usr/lib{,64}/mozilla
  link_icons
 }

 if    [[ $HOSTTYPE == x86_64 ]]; then
  if   [[ $CFLAGS   =~ -m32   ]]
  then with also "--host=${MACHTYPE/x86_64/i686}"
       export LDFLAGS+=" -Wl,-rpath,/usr/lib/firefox-$VERSION"
  else export LDFLAGS+=" -Wl,-rpath,/usr/lib64/firefox-$VERSION"
  fi
 else  export LDFLAGS+=" -Wl,-rpath,/usr/lib/firefox-$VERSION"
 fi

 # sed -i 's:/bin/pwd:pwd:g;s:/bin/ls:ls:g' build/unix/mozilla.in

 # if    [[ $HOSTTYPE == x86_64 ]] && [[ $CFLAGS =~ -m32 ]]
 # then with also --host="${MACHTYPE/x86_64/i686}" --disable-crashreporter
 # fi

 # case statement to remove references to curl's deprecated header
 # that was removed from curl during version 7.21.7.

 # CFLAGS="${CFLAGS//-mno-mmx/}"
 # CFLAGS="${CFLAGS//-mno-sse2/}"
 # CFLAGS="${CFLAGS//-mno-sse/}"

 # CXXFLAGS="${CXXFLAGS//-mno-mmx/}"
 # CXXFLAGS="${CXXFLAGS//-mno-sse2/}"
 # CXXFLAGS="${CXXFLAGS//-mno-sse/}"

 export   CFLAGS="${CFLAGS//-flto/}"
 export CXXFLAGS="${CXXFLAGS//-flto/}"
 export  LDFLAGS="$( echo "$LDFLAGS" | sed "s:-flto=[^ ]::" )"
 export        PATH="${PATH//\/usr\/bin.a:/}"
 export CCACHE_PATH=/usr/bin

 mkdir BUILD
 cd    BUILD
 ../configure \
 --prefix=/usr \
 --sysconfdir=/etc \
 --localstatedir=/var \
 --enable-optimize="$CFLAGS" \
 $OPTS &&
 make  &&
 make install DESTDIR="$DESTDIR" &&
 make_install
}

post_install(){
 default_post_install
 grep -lr "^/usr/lib/mozilla/plugins/\|^/usr/lib64/mozilla/plugins/" "$INSTALL_INDEX" |
 basenames |
 pipe_queue "$MOIL_QUEUE"
 true
}

current(){
 case $VERSION in
  25.0) [ -h /usr/bin/firefox ] ;;
 esac
}
