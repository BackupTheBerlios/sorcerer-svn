# commenting out --enable-system-sqlite should be followed by
# commenting out --enable-shared-js
# only comment those out when completely undesired.

with info    good 20140122
with info    last 20131215
with version   stable 26.0 25.0.1 25.0
with version unstable 26.0
with base    GConf bzip2 hicolor-icon-theme imake libXScrnSaver libjpeg-turbo libnotify libvpx nss startup-notification sqlite xorg-cf-files yasm zip
with base    corefonts webfonts
## with also    --enable-default-toolkit=cairo-gtk3	# failed with 25.0.1
##with also    --with-system-libxul	# Not compatible.
#with also    --with-system-png
## with also    --with-system-png	# commented out for 26.0.0
with role    network/web
with trait   bias bottleneck client huge library litelink multilib-fail optimize stack-protector x11
## With version 26.0 firefox makefiles are not parallel make compatible.
# with trait   bottleneck client huge library litelink makej multilib-fail optimize solo stack-protector x11

# release.mozilla.org might no longer be serving source tarballs.
# also mirrored at sourceforge, but can not write the source statements
# as $SOURCEFORGE_URL
with source  stable \
             http://releases.mozilla.org/pub/mozilla.org/firefox/releases/$VERSION/source/ \
                   ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/$VERSION/source/ \
             firefox-$VERSION.source.tar.bz2
with source  unstable \
             http://releases.mozilla.org/pub/mozilla.org/firefox/releases/$VERSION/source/ \
                   ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/$VERSION/source/ \
             firefox-$VERSION.source.tar.bz2
with info    home http://www.mozilla.com/en-US/firefox/firefox.html
with hold    mozilla
with info    cite 'web brower based upon mozilla gecko HTML rendering engine'

build(){
 link_icons(){
  local hi="$DESTDIR"/usr/share/icons/hicolor
  local id="$DESTDIR"/usr/lib
  if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
  then id+=64
  fi
  id+=/firefox-$VERSION/browser/chrome/icons/default/default

  install -vm 755 -d "$DESTDIR"/usr/share/applications/ \
                     "$DESTDIR"/usr/share/icons/hicolor/{16x16,32x32,48x48}/apps/
  install -vm 644 -t "$DESTDIR"/usr/share/applications/ \
                     "$SCRIPT_DIR"/applications.d/firefox.desktop

  ln -f "${id}16.png" "$hi/16x16/apps/firefox.png"
  ln -f "${id}32.png" "$hi/32x32/apps/firefox.png"
  ln -f "${id}48.png" "$hi/48x48/apps/firefox.png"
 }

 make_install(){
  rm   -f "$DESTDIR"/usr/bin/firefox
  if    [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]; then
   if   [ -d                    "$DESTDIR"/usr/lib64/firefox-$VERSION ]
   then ln -fs firefox-$VERSION "$DESTDIR"/usr/lib64/firefox
        ln -fs firefox-$VERSION "$DESTDIR"/usr/lib64/mozilla
   fi
   ln   -s "$( find "$DESTDIR"/usr/lib64 -type f -name firefox -printf "../lib64/%P\n" )" "$DESTDIR"/usr/bin/firefox
  else
   if   [ -d                    "$DESTDIR"/usr/lib/firefox-$VERSION ]
   then ln -fs firefox-$VERSION "$DESTDIR"/usr/lib/firefox
        ln -fs firefox-$VERSION "$DESTDIR"/usr/lib/mozilla
   fi
   ln   -s "$( find "$DESTDIR"/usr/lib -type f -name firefox -printf "../lib/%P\n" )" "$DESTDIR"/usr/bin/firefox
  fi
  # rm -fr /usr/lib{,64}/mozilla
  link_icons
 }

# if    [[ $HOSTTYPE == x86_64 ]]; then
#  if   [[ $CFLAGS   =~ -m32   ]]
#  then with also "--host=${MACHTYPE/x86_64/i686}"
#       export LDFLAGS+=" -Wl,-rpath,/usr/lib/firefox-$VERSION"
#  else export LDFLAGS+=" -Wl,-rpath,/usr/lib64/firefox-$VERSION"
#  fi
# else  export LDFLAGS+=" -Wl,-rpath,/usr/lib/firefox-$VERSION"
# fi

 export   CFLAGS="${CFLAGS//-flto/}"
 export CXXFLAGS="${CXXFLAGS//-flto/}"
 export  LDFLAGS="$( echo "$LDFLAGS" | sed "s:-flto=[^ ]::" )"
 export        PATH="${PATH//\/usr\/bin.a:/}"
 export CCACHE_PATH=/usr/bin

 mkdir BUILD
 cd    BUILD
 ../configure \
 --prefix=/usr \
 --disable-clang-plugin	\
 --disable-crashreporter \
 --disable-debug \
 --disable-gnomevfs \
 --disable-gstreamer \
 --disable-installer \
 --disable-maintenance-service \
 --disable-mochitest \
 --disable-necko-wifi \
 --disable-static \
 --disable-tests \
 --disable-updater \
 --enable-application=browser \
 --enable-optimize="$CFLAGS" \
 --enable-default-toolkit=cairo-gtk2 \
 --enable-official-branding \
 --enable-ogg \
 --enable-opus \
 --enable-readline \
 --enable-release \
 --enable-shared-js \
 --enable-startup-notification \
 --enable-strip \
 --enable-system-cairo \
 --enable-system-ffi \
 --enable-system-lcms \
 --enable-system-pixman \
 --enable-system-sqlite \
 --enable-threadsafe \
 --enable-webm \
 --with-pthreads \
 --with-system-bz2 \
 --with-system-jpeg \
 --with-system-nspr \
 --with-system-nss \
 --with-system-libvpx \
 --with-system-zlib \
 --with-system-icu &&
 make &&
 make install DESTDIR="$DESTDIR" &&
 make_install
}

post_install(){
 default_post_install
 grep -lr "^/usr/lib/mozilla/plugins/\|^/usr/lib64/mozilla/plugins/" "$INSTALL_INDEX" |
 basenames |
 pipe_queue "$MOIL_QUEUE"
 true
}
