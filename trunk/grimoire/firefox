# Seems to be linking with nspr and nss although it is instructed not to?


# some of the system libraries commented out because they random crashes
# which ones I am not certain about.
# --with-system-jpeg --with-system-nspr --with-system-nss --enable-system-sqlite

# cairo glitz is deprecated code that no longer works
# therefore do not experiment with it.

# Version 13.0 12.0 fails compilation

   version   stable 11.0 10.0.2 10.0.1 10.0
#  version unstable 13.0 12.0
   require GConf bzip2 hicolor-icon-theme imake libXScrnSaver libnotify startup-notification sqlite xorg-cf-files zip
#  require GConf-dbus bzip2 hicolor-icon-theme libnotify startup-notification sqlite zip
# gnome-vfs makes firefox crash during downloading on x86_64
      opts --disable-gnomevfs
  optional yasm       '' --disable-webm     for webm video codec
#   switch --enable-glitz --disable-glitz 'enable glitz for use with cairo'
#      opts --with-system-jpeg
      opts --with-system-zlib
      opts --with-system-bz2
      opts --enable-startup-notification
      opts --disable-static
      opts --enable-system-cairo
      opts --enable-system-lcms
      opts --enable-application=browser
#     opts --with-system-libxul
#     opts --with-libxul-sdk=/usr
#     opts --disable-libxul
#     opts --disable-xul
#      opts --with-system-nspr
#      opts --with-system-nss
      opts --without-system-nss
      opts --without-system-nspr
      opts --enable-strip
      opts --enable-default-toolkit=cairo-gtk2
      opts --disable-mochitest
      opts --disable-tests
      opts --enable-official-branding
#      opts --enable-system-sqlite

## --with-system-png requires png with apng support and currently the patch does not apply
#     opts --with-system-png

# Avoid failed cast when iwlib.h is not installed (provided by wireless-tools)
# Why does firefox need wireless anyway? 
# Furthermore, necko-wifi may not me supported on Linux anyway if I understand
# things correctly (J. Merka, 03/01/10).
      opts --disable-necko-wifi

# Enable official branding should be fine because we are not 
# distributing the builds. This option names the browser Firefox instead
# of Minefield but launches a EULA on the first start:
#      opts --enable-official-branding
#      opts --with-distribution-id='sorcerer'
# These two should be safe for Sorcerer
      opts --disable-updater
      opts --disable-installer

           #--with-system-png
           #--enable-cpp-rtti
#            'jdk:::for building the javaXPCOM components' )
# compilation with javaXPCOM component support is not working

  category network/web
 attribute bottleneck client huge library makej multilib-dual optimize stack-protector x11
    source http://releases.mozilla.org/pub/mozilla.org/firefox/releases/$VERSION/source/firefox-$VERSION.source.tar.bz2
      info last 20120606
      info home http://www.mozilla.com/en-US/firefox/firefox.html
 conflicts gnome-vfs
      desc 'web brower based upon mozilla gecko HTML rendering engine'

build(){

 symlink_icons(){
  install -vdm 755 $DESTDIR/usr/share/applications
  install -vm  644 $SCRIPT_DIR/applications.d/firefox.desktop $DESTDIR/usr/share/applications
  mkdir -p $DESTDIR/usr/share/icons/hicolor/{16x16,32x32,48x48}/apps
  ln -fs /usr/lib/firefox-$VERSION/chrome/icons/default/default16.png \
         $DESTDIR/usr/share/icons/hicolor/16x16/apps/firefox.png
  ln -fs /usr/lib/firefox-$VERSION/chrome/icons/default/default32.png \
         $DESTDIR/usr/share/icons/hicolor/32x32/apps/firefox.png
  ln -fs /usr/lib/firefox-$VERSION/chrome/icons/default/default48.png \
         $DESTDIR/usr/share/icons/hicolor/48x48/apps/firefox.png
  true
 }

 make_install(){
  if   [ -d                    $DESTDIR/usr/lib64/firefox-$VERSION ]
  then ln -fs firefox-$VERSION $DESTDIR/usr/lib64/firefox
       ln -fs firefox-$VERSION $DESTDIR/usr/lib64/mozilla
  fi
  if   [ -d                    $DESTDIR/usr/lib/firefox-$VERSION ]
  then ln -fs firefox-$VERSION $DESTDIR/usr/lib/firefox
       ln -fs firefox-$VERSION $DESTDIR/usr/lib/mozilla
  fi
  rm -fr /usr/lib{,64}/mozilla
  symlink_icons
 }

 if    [[ $HOSTTYPE == x86_64 ]]; then
  if   [[ $CFLAGS   =~ -m32   ]]
  then opts "--host=${MACHTYPE/x86_64/i686}"
       export LDFLAGS+=" -Wl,-rpath,/usr/lib/firefox-$VERSION"
  else export LDFLAGS+=" -Wl,-rpath,/usr/lib64/firefox-$VERSION"
  fi
 else  export LDFLAGS+=" -Wl,-rpath,/usr/lib/firefox-$VERSION"
 fi

 # sed -i 's:/bin/pwd:pwd:g;s:/bin/ls:ls:g' build/unix/mozilla.in

 # if    [[ $HOSTTYPE == x86_64 ]] && [[ $CFLAGS =~ -m32 ]]
 # then opts --host="${MACHTYPE/x86_64/i686}" --disable-crashreporter
 # fi

 # case statement to remove references to curl's deprecated header
 # that was removed from curl during version 7.21.7.

 case $VERSION in
  [5-7].0*) sed -i '\,curl/types\.h,d' js/src/config/system-headers \
                toolkit/crashreporter/google-breakpad/src/common/linux/{http_upload.cc,libcurl_wrapper.cc}
            cp security/coreconf/Linux{2.6,3.1}.mk
            cp security/coreconf/Linux{2.6,3.0}.mk ;;
 esac


 # CFLAGS="${CFLAGS//-mno-mmx/}"
 # CFLAGS="${CFLAGS//-mno-sse2/}"
 # CFLAGS="${CFLAGS//-mno-sse/}"

 # CXXFLAGS="${CXXFLAGS//-mno-mmx/}"
 # CXXFLAGS="${CXXFLAGS//-mno-sse2/}"
 # CXXFLAGS="${CXXFLAGS//-mno-sse/}"

 export   CFLAGS="${CFLAGS//-flto/}"
 export CXXFLAGS="${CXXFLAGS//-flto/}"
 export  LDFLAGS="$( echo "$LDFLAGS" | sed "s:-flto=[^ ]::" )"

 ./configure \
 --prefix=/usr \
 --sysconfdir=/etc \
 --localstatedir=/var \
 --enable-optimize="$CFLAGS" \
 $OPTS &&
 make  &&
 make install "DESTDIR=$DESTDIR" &&
 make_install
}

post_install(){
 default_post_install
 grep -lr "^/usr/lib/mozilla/plugins/\|^/usr/lib64/mozilla/plugins/" $INSTALL_LOGS |
 basenames |
 pipe_queue "$CAST_QUEUE"
 true
}
