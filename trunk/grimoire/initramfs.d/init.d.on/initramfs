#!/bin/bash
### BEGIN INIT INFO
# Required-Stop: kexec $local_fs root-ro udev
# Should-Stop: tmp
# Default-Stop: 0 6
# Short-Description: creates boot filesystems
### END INIT INFO

# Copyright 2007 through 2011 by Kyle Sallee, all rights reserved.
# for use with Sorcerer only

if [ "$1" = try-restart ]; then exit; fi

. /lib/lsb/init-functions

NAME=initramfs
DONE=false
SKIP="[32G"

mkinitrf(){ cat /boot/$1/modules /boot/initrf/*; }

initrf_update(){

 for REPLY in /etc/init.d/initramfs-*
 do  bash $REPLY stop
 done

 local          TEMPIF=/tmp/initramfs.$$.$RANDOM$RANDOM
 rm    -rf     $TEMPIF
 mkdir -pm 600 $TEMPIF/boot

 find /boot -maxdepth 2 -mindepth 2 -type f -name linux -printf '%h\n' |
 cut -d / -f3 | sed '\,rescue,d' |
 while read; do
  mkdir                  $TEMPIF/boot/$REPLY
  if   $LILO
  then mkinitrf $REPLY > $TEMPIF/boot/$REPLY/initrf
  else ln -s ../initrf   $TEMPIF/boot/$REPLY/initrf
  fi
 done

 if $LILO; then
  find /boot -maxdepth 2 -mindepth 2 -type f -name initrf -printf '%h\n' |
  cut -d / -f3 | sed '\,rescue,d' |
  while read
  do    mv /boot/$REPLY/initrf{,.old}
  done
  chmod 600 $TEMPIF/boot/*/initrf
 fi

 if ! cp -a $TEMPIF/boot /; then rm -f /boot/*/initrf.old
      cp -a $TEMPIF/boot /; fi
 rm -fr     $TEMPIF
 sync

 if ! [ -f /etc/init.d/find_ir ]; then
  if $EXTL; then
   if ! $DONE; then /etc/init.d/extlinux reload; fi
   /sbin/extlinux -U /boot/extlinux ||
   /sbin/extlinux -i /boot/extlinux
  elif $LILO; then
   if ! $DONE; then /etc/init.d/lilo reload; fi
   /sbin/lilo -P ignore -C /etc/lilo/conf ||
   /sbin/lilo -P ignore -C /etc/lilo/conf
  fi
 fi
}

stop(){
 if   log_warning_msg "$NAME $SKIP updating"; initrf_update $1
 then log_success_msg "$NAME $SKIP updated"
 else log_failure_msg "$NAME $SKIP failed"; false
 fi
}

status(){
 for REPLY in /etc/init.d/initramfs-*
 do  bash $REPLY status || return 1
 done
}

help(){ echo "Usage: $0 {stop|status|force|reload}"; }

if ! [[ -d /boot ]] ||
     [ -z "$( find /boot -mindepth 2 -maxdepth 2 -type f -name linux )" ]
then log_failure_msg "$NAME unknown boot method"; exit 1
fi

LILO=false
EXTL=false

if   [ -f /etc/init.d/lilo ] &&
     [ -x /etc/init.d/lilo ]
then LILO=true
fi

if   [ -f /etc/init.d/extlinux    ] &&
     [ -x /etc/init.d/extlinux    ] &&
     [ -f /boot/extlinux/menu.c32 ]
then EXTL=true; LILO=false
fi

export LC_ALL=C
case $1 in
   help) help ;;
 reload) DONE=true
         status || stop stop  ;;
 status) status               ;;
  force)           stop force ;;
   stop) status || stop stop  ;;
      *) status || stop stop  ;;
esac
