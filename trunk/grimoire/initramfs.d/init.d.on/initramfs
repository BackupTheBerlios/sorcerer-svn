#!/bin/bash
### BEGIN INIT INFO
# Required-Stop: kexec $local_fs root-ro udev
# Should-Stop: tmp
# Default-Stop: 0 6
# Short-Description: initramfs creates boot filesystems
### END INIT INFO

# Copyright 2007 through 2010 by Kyle Sallee, all rights reserved.
# for use with Sorcerer only

if [ "$1" = try-restart ]; then exit; fi

. /lib/lsb/init-functions

NAME=initramfs

mkinitrf(){
 cat $COMMON
 find /lib/modules/$1 | cpio -o -H newc --quiet
}

every(){
 local KBD L64

 exists(){ while read; do [[ -e $REPLY ]] && echo "$REPLY"; done; }

 if [[ -d  /usr/share/consolefonts ]]
 then KBD="/usr/share/consolefonts /usr/share/consoletrans /usr/share/keymaps /usr/share/unimaps"
 fi

 if [[ -d /lib64 ]]; then L64=/lib64; fi

 find /bin /dev /etc /lib $L64 /sbin $KBD |
 sed "\
\,^/dev/pts/,d
\,^/dev/.udev,d
\,^/dev/shm/,d
\,^/etc/[^/]*\.old$,d
\,^/etc/sorcery/,d
\,^/etc/selinux/,d
\,^/etc/asciidoc/,d
\,^/etc/avahi/,d
\,^/etc/chipcard,d
\,^/etc/courier/,d
\,^/etc/cups/,d
\,^/etc/elvis.default/stubs/,d
\,^/etc/fonts/,d
\,^/etc/gconf/,d
\,^/etc/gdm/,d
\,^/etc/gtk/,d
\,^/etc/httpd/,d
\,^/etc/init.d/log.d/,d
\,^/etc/kde,d
\,^/etc/lilo/,d
\,^/etc/mono/,d
\,^/etc/mplayer/,d
\,^/etc/mtab,d
\,^/etc/openldap/,d
\,^/etc/ppp/,d
\,^/etc/prelink,d
\,^/etc/sane.d/,d
\,^/etc/sound/,d
\,^/etc/squid/,d
\,^/etc/ssh/,d
\,^/etc/xdg/,d
\,^/etc/bootblaze,d
\,^/etc/xml,d
\,^/lib/modules/,d
\,^/lib.*\.la$,d
\,^/lib.*lib.*\.a$,d
\,^/bin/7zCon.sfx$,d
\,^/bin/bashbug$,d
\,^/sbin/mount.ecryptfs$,d
\,^/sbin/mount.smbfs$,d
\,^/sbin/sln$,d
1i/init
1i/media
1i/media/root
1i/proc
1i/sys
1i/tmp
1i/usr
1i/usr/share
1i/usr/share/pci.ids
1i/usr/share/usb.ids
1i/usr/share/terminfo
1i/usr/share/terminfo/l
1i/usr/share/terminfo/l/linux" | exists
}

initrf_update(){
 [ -d /boot/fast  ] && rm -rf /boot/fast
 [ -d /media/root ] || mkdir -pm 755 /media/root

 local       TEMPIF=/tmp/initramfs.$RANDOM$RANDOM
 rm    -rf  $TEMPIF
 mkdir -p   $TEMPIF/boot
 chmod 600  $TEMPIF

 local       COMMON="$TEMPIF/common"

 every | cpio -o -H newc --quiet > $COMMON

 find /boot -maxdepth 2 -mindepth 2 -type f -name linux -printf '%h\n' |
 cut -d / -f3 |
 sed '\,rescue,d' |
 while read; do
  mkdir             $TEMPIF/boot/$REPLY
  mkinitrf $REPLY > $TEMPIF/boot/$REPLY/initrf
 done

 chmod 600 $TEMPIF/boot/*/initrf
 cp -a     $TEMPIF/boot /
 rm -fr    $TEMPIF
 sync
 if ! [ -f /etc/init.d/find_ir ]
 then /sbin/lilo -P ignore -C /etc/lilo/conf
 fi
}

initrf_present(){
 find /boot -maxdepth 2 -mindepth 2 -type f -name linux -printf '%h\n' |
 while read; do [[ -f $REPLY/initrf ]] || return 1; done
}

initrf_current(){
 IRFL=/var/log/initramfs.log
 DIRS='/bin /etc/bash.d /etc/init.d /etc/lilo'
 DIRS+=' /etc/modules.d /etc/networks.d /etc/rc.d /etc/udev /lib /sbin'
 [[ -d /etc/lvm ]] && DIRS+=' /etc/lvm'
 [[ -d /lib64   ]] && DIRS+=' /lib64'

 FILES='/init /etc/fstab /etc/hostname /etc/inittab'
 FILES+=' /etc/passwd /etc/shadow'

 [[ -f /etc/exports    ]] && FILES+=' /etc/exports'
 [[ -f /etc/mdadm.conf ]] && FILES+=' /etc/mdadm.conf'
 [[ -f /etc/multipath.conf ]] && FILES+=' /etc/multipath.conf'

 IRF=$( find /boot -type f -name initrf -printf '%T@\t%p\n' | 
        sed '\,/boot/fast,d
             \,/boot/rescue,d' |
        sort -g | head -n1 | cut -f2 )
 if [[ -z $IRF ]]; then return 1; fi
 OLD="$( find $DIRS $FILES -type f -newer $IRF | sed '\,/log.d/,d' )"
 if [[ -n $OLD ]]; then
  echo   "$OLD" > $IRFL
  return 1
 else rm -f $IRFL
 fi
}


stop(){
 if   log_warning_msg "$NAME updating"; initrf_update
 then log_success_msg "$NAME updated"
 else log_failure_msg "$NAME failed"
  if   [[ -n $1 ]]
  then sulogin -t 300 &>/dev/console 0</dev/console
  fi
 fi
}

status(){
 if   log_warning_msg "$NAME checking"; initrf_present && initrf_current
 then log_success_msg "$NAME checked; status:     current"
 else log_warning_msg "$NAME checked; status: not current"; return 1
 fi
}

help(){ echo "Usage: $0 {stop|status|reload}"; }

if ! [[ -d /boot ]] ||
     [ -z "$( find /boot -mindepth 2 -maxdepth 2 -type f -name linux )" ]
then log_failure_msg "$NAME unknown boot method"; return 1
fi

export LC_ALL=C
case $1 in
   help) help             ;;
 status) status           ;;
  force)           stop   ;;
   stop) status || stop s ;;
      *) status || stop   ;;
esac
