#!/bin/bash
### BEGIN INIT INFO
# Default-Mode: 500
# Required-Stop: kexec $local_fs root-ro udev
# Should-Stop: tmp
# Default-Stop:
# Short-Description: creates boot filesystems
### END INIT INFO

# Copyright 2007 through 2013 by Kyle Sallee, all rights reserved.
# for use with Sorcerer only

. /lib/lsb/init-functions

only stop reload force-reload status
name initramfs-modules
INIT=initramfs-modules

allpaths(){ /bin/sed -nr "p;:a;s:(.+)/.*:\1:p;ta" | sort -u; }

exists(){ while read; do [[ -e $REPLY ]] && echo "$REPLY"; done; }

mkinitrf(){
 cd /
 ( echo -e "/lib\n/lib/modules\n/lib/modules/${1##*/}"
   /bin/find /lib/modules/${1##*/} |
   LC_ALL=C /bin/sort -u
 ) | /bin/cut -b2-1024 | /bin/cpio -o -H newc --quiet | /bin/gzip -1
}

initrf_update(){

 local               TEMPIF=/tmp/initramfs.$$.$RANDOM$RANDOM
 /bin/rm    -rf     $TEMPIF
 /bin/mkdir -pm 600 $TEMPIF/boot

 /bin/find /boot/linux/ -maxdepth 2 -mindepth 2 -type f -name kernel -printf '%h\n' |
 /bin/sed '\,rescue,d' |
 while read; do
  if   [ -n "$1" ]; then
   log_warning_msg "$REPLY/modules update"
   /bin/mkdir -p     $TEMPIF/$REPLY
   mkinitrf $REPLY > $TEMPIF/$REPLY/modules
   /bin/chmod 600    $TEMPIF/$REPLY/modules
   log_success_msg "$REPLY/modules update"
  fi
 done

 /bin/cp -a  $TEMPIF/boot /
 /bin/rm -fr $TEMPIF
 /bin/sync
}

initrf_current(){
 if [ -f /var/log/init/failed/$INIT/stop ]; then return 1; fi

 /bin/find /boot/linux/ -maxdepth 2 -mindepth 2 -type f -name kernel -printf '%h\n' |
 /bin/sed '\,/boot/linux/rescue,d' |
 while read; do
  if   log_warning_msg "$REPLY/modules check";
       [[ -f $REPLY/modules ]] &&
       ! /bin/find /lib/modules/${REPLY##*/} -newer $REPLY/modules |
       /bin/grep -v "/modules\.loaded$" |
       /bin/grep -q .
  then log_success_msg "$REPLY/modules check status:     current"
  else log_warning_msg "$REPLY/modules check status: not current"
       return 1
  fi
 done
}

run(){ initrf_update $1; }
status(){ initrf_current; }
stop(){ status || run stop; }
force_reload(){ run force-reload; }
reload(){ DONE=true; stop; }

export LC_ALL=C
