#!/bin/bash
### BEGIN INIT INFO
# Default-Mode: 500
# Required-Stop: kexec $local_fs root-ro udev
# Should-Stop: tmp
# Default-Stop:
# Short-Description: creates boot filesystems
### END INIT INFO

# Copyright 2007 through 2013 by Kyle Sallee, all rights reserved.
# for use with Sorcerer only

. /lib/lsb/init-functions

only stop reload force-reload status
name /boot/initrf/usr
INIT=initramfs-usr

allpaths(){ /bin/sed -nr "p;:a;s:(.+)/.*:\1:p;ta" | /bin/sort -u; }

exists(){ while read; do [[ -e $REPLY ]] && echo "$REPLY"; done; }

if_find(){ while if [[ -e $1 ]]; then find $1; fi; [[ -n $2 ]]; do shift; done; }

every(){
 echo /dev
 echo /dev/console
 echo /dev/kmsg
 echo /dev/null
 echo /init
 echo /proc
 echo /sys
 echo /tmp
 echo /usr
 echo /usr/share
 echo /usr/share/pci.ids
 echo /usr/share/usb.ids
 echo /usr/share/terminfo
 echo /usr/share/terminfo/l
 echo /usr/share/terminfo/l/linux

 if_find /fastboot /forcefsck /usr/libexec/bash \
         /usr/share/{console{fonts,trans},{key,uni}maps}
}

initrf_update(){

 local               TEMPIF=/tmp/initramfs.$$.$RANDOM$RANDOM
 /bin/rm    -rf     $TEMPIF
 /bin/mkdir -pm 700 $TEMPIF/boot/initrf

 local  COMMON="$TEMPIF/$NAME"

 cd /
 every |  allpaths | exists |
 /bin/cut -b2-1024 |
 /bin/cpio -o -H newc --quiet |
 /bin/gzip -1 > $COMMON
 /bin/chmod 600 $COMMON

 [       -f /boot/initrf ] &&
 /bin/rm -f /boot/initrf

 /bin/cp -a  $TEMPIF/boot /
 /bin/rm -fr $TEMPIF
 /bin/sync
}

initrf_present(){ [ -f $NAME ] || return 1; }

initrf_current(){
 if   [ -f /forcefsck ] && /bin/find /forcefsck -newer $NAME | /bin/grep -q .; then return 1
 elif [ -f /fastboot  ] && /bin/find /fastboot  -newer $NAME | /bin/grep -q .; then return 1
 elif /bin/find /init /usr/share/{pci,usb}.ids /usr/share/terminfo/l/linux -newer $NAME | /bin/grep -q .
 then return 1
 fi

 if [ -f /var/log/init/failed/$INIT/stop ]; then return 1; fi
} 

run(){
 if   log_warning_msg "update"; initrf_update
 then log_success_msg "update"
 else log_failure_msg "update"; false
 fi
}

status(){
 if   log_warning_msg "check"; initrf_present && initrf_current
 then log_success_msg "check status:     current"
 else log_warning_msg "check status: not current"; return 1
 fi
}

stop(){ status || run; }
force_reload(){ run; }
reload(){ DONE=true; stop; }

export LC_ALL=C
