   VERSION=( 2.3.5 2.2.6 2.2.5 2.2.1 2.1.1 2.0.2 2.0.1 2.0 )
    IGNORE="200\|smp\|pre\|win\|^2\.3$"
  CATEGORY='development/emulator'
 ATTRIBUTE='x11'
    SOURCE="bochs/bochs-$VERSION.tar.gz"
       URL="$SOURCEFORGE_URL"
  HOMEPAGE='http://bochs.sourceforge.net'
case  $VERSION  in
   2.3)  USE_GCC="gcc-v4.0"  ;;
  2.2*)  USE_GCC="gcc-v4.0"  ;;
esac
       REQ=( "ncurses readline zlib"
             "SDL:--with-sdl::use SDL libraries"
             "svgalib:--with-svga::add SVGAlib gui"
             "wxWidgets:--with-wx::add wxGTK gui" )
#            "wxGTK:--with-wx::add wxGTK gui" )
      OPTS="--enable-readline"
  ESTIMATE='3000'
      DESC="bochs is an i386 hardware emulator
bochs is a portable x86 PC emulation software package that emulates
enough of the x86 CPU, related AT hardware, and BIOS to run DOS,
Windows 95, Linux, FreeBSD, and other OS's, all on your workstation."

build()  {
# FDIR=/usr/X11R6/lib/X11/fonts/misc


case  $VERSION  in
  2.1.1)  sed  -i  "s:extern int FPU_load_int16(bx_address _s, FPU_REG \*loaded_data) BX_CPP_AttrRegparmN(2);:extern int FPU_load_int16(bx_address _s, FPU_REG *loaded_data) BX_CPP_AttrRegparmN(1);:"  fpu/fpu_proto.h  ;;
esac

./configure              \
--prefix=/usr            \
--sysconfdir=/etc        \
--enable-icache          \
--enable-vbe             \
--enable-mmx             \
--enable-fpu             \
--enable-sse=2           \
--enable-3dnow           \
--enable-x86-64          \
--enable-cpu-level-6     \
--enable-apic            \
--enable-compressed-hd   \
--enable-4meg-pages      \
--enable-pae             \
--enable-global-pages    \
--enable-guest2host-tlb  \
--enable-repeat-speedups \
--enable-plugins         \
--enable-apic            \
--enable-ne2000          \
--enable-pci             \
--enable-cdrom=yes       \
--enable-sb16=linux      \
--enable-debugger        \
--enable-disasm          \
--enable-all-optimizations \
--enable-instrumentation \
--enable-x86-debugger    \
--with-rfb               \
--with-term              \
$OPTS                    &&
make                     &&
prepare_install          &&
make    install
}
