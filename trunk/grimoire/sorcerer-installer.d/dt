#!/bin/bash
# Copyright 2010, 2011 by Kyle Sallee
# all rights reserved.
# For use with Sorcerer only

DIALOG="dialog
--backtitle
Dialog Tutorial
--stdout"

TAB="	"
ENTER="
"
export IFS="$TAB$ENTER"

msg(){     $DIALOG --cr-wrap      --msgbox "$1" 0 0; }
confirm(){ $DIALOG --cr-wrap "$1" --yesno  "$2" 0 0; }
yesno(){   $DIALOG --cr-wrap      --yesno  "$1" 0 0; }

msg "\
Greetings.  Welcome to the dialog tutorial.
Dialog is a program that is used for presenting choices
and for making a selection.
To state it simply, dialog is a menu program.
This is a msgbox, short for message box.
When reading is complete
then please press the large enter key to continue"

msg "\
Congratulations on completing the first exercise.
Most of the exercises are simple.
The dialog tutorial provides experience with using
the most frequently encountered dialog queries.
These queries are msgbox, yesno, menu, and checklist."

while 

msg "\
Only a few keys are used to navigate queries.
Up down left and right arrow keys,
the space bar key, and of course the enter key.
The enter key is pressed to finalize the input.
"

! confirm --defaultno "\
Do you remember dialog's input keys?"

do :; done

msg "\
Excellent.  msgbox and yesno exercises are complete."

yesno "\
So far the exercises have been fast and easy, yes?"

msg "\
The next exercises will be more challenging"

msg "\
The next screen is a menu.
A menu is used to select merely one item from a list
"


while

REPLY="$( $DIALOG --nocancel --title "Best House Pet" \
                  --default-item "$REPLY" \
                  --menu "Please select the best house pet." 20 75 10 \
                  cat "" dog "" rock "" )"

case "$REPLY" in
cat)  msg "No thanks to litter box and furballs.  Please try again." ;;
dog)  msg "No thanks to attention demanding indoor pooping puppies.  Please try again." ;;
rock) msg "Long life, no pet food bill, no indoor mess.  Good choice!" ; false ;;
esac

do :; done

msg "\
Checklists are like menus
except that more than one item can be selected.
Selected items have [x] next to them.
Items that are not selected have [ ] next to them.
On a checklist highlight an item.
Then press space bar.
Space bar toggles the [x] on and off."

while

REPLY="$( $DIALOG --nocancel --separate-output \
                  --title "Lawn Mower Hazards" \
                  --default-item "$REPLY" \
                  --checklist "Please select items avoid run over with a lawn mower." \
                  12 35 3 \
                  cat "" "off" dog "" "off" rock "" "off" )"

(( SCORE = 0 ));

if echo "$REPLY" | grep -q cat;  then (( SCORE++ )); else msg "Here kitty kitty."; fi
if echo "$REPLY" | grep -q dog;  then (( SCORE++ )); else msg "That is not the way to make a kosher hotdog!"; fi
if echo "$REPLY" | grep -q rock; then (( SCORE++ )); else msg "Pling, Zing, Smack!"; msg "Ow! My eye!!!"; fi

if   (( SCORE == 3 ))
then msg "Right on!"; false
else msg "Please try again and select all 3 items."
fi

do :; done

while

msg "\
So far only one exercise has required
the use of the left and right arrow keys.
The horizontal arrow keys modify
the action when enter is pressed.
When two buttons are near the bottom
one will normally say \"OK\" and the other will say \"Cancel.\"
However, sometimes they say \"Select\" and \"Done.\"
Using Cancel or Done is often a way
to exit a menu or checklist
that runs in a loop.
Please cancel out of the following menu to end the loop."

REPLY="$( $DIALOG --title "Best House Pet" \
                  --default-item "$REPLY" \
                  --menu "Please select the best house pet." 20 75 10 \
                  cat "" dog "" rock "" )"


do :; done

msg "\
The dialog tutorial is now complete.
You deserve a gold star!
No cats, dogs, rocks were injured during
the creation of this tutorial.
If the next step is to install Sorcerer
using the menu driven install program
then at the following command prompt
please type sinstall
Good luck."
