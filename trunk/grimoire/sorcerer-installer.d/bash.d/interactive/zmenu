show(){
 dialog --backtitle "Sorcerer Recommendations" \
        --title "RAM Recommendation"  \
        --msgbox "
A minimum of 3G of RAM must be installed.
The x86_64 Install/Rescue image
would have already failed booting
on a computer with less than 2.5G of RAM installed.

User and system process will be utilizing
the majority of the first gigabyte of RAM.
Between updates the kernel will utilize excess RAM
to cache fixed disk content and to provide 2M large pages
instead of 4096 byte pages for memory allocation requests.

An additional gigabyte of RAM
is required per processor
to achieve optimal performance.
During the updates of large software projects
the linker completely utilize 1G of RAM per linker process.
During software compilation, linking, and installation
full utilization of processors
requires commensurate amounts of RAM.

If less than 8G of RAM is installed on an 8 processor box
then sorcery might utilize fewer than 8 processors.
Software would require longer to deploy and update,
but the box would be usable
provided that it has at least 3G of RAM installed.
Sorcerer can be installed on netbooks provided
that the netbook has at least 3G of RAM installed.

Installing larger RAM modules or
installing a pre-compiled binary based distro
are the only options for computers
with less than 3G of RAM installed.

The RAM requirements for Sorcerer reflect
the decisions made by free software authors
in charge of utilities such as:
binutils which provide the linker /usr/bin/ld;
gcc which provide the GNU C++ compiler /usr/bin/g++;
firefox which can consume more than a gigabyte of RAM
after a short duration of use.

For the moment modern pre-compiled software such as firefox
can be run on boxes with 1G of installed RAM.
Swapping memory content to and from disk
helps under-built boxes maintain functionality
at the cost of performance when memory utilization
exceeds the amount of installed RAM.
A pre-compiled binary based distro
can be deployed and updated
without the larger amount of resources required
by a source based distro such as Sorcerer.

If the reader expects that free software authors
are incorrect by requiring copious amounts of RAM
then the solution is to install a fun
pre-compiled binary based distro instead of Sorcerer.
" 20 76


 dialog --backtitle "Sorcerer Recommendations" \
        --title "Processor Recommendation"  \
        --msgbox "
Congratulations, this box meets the minimum processor requirement.

The IA32 I/R requires at least an 80686
with PAE instruction set compatible processor.

The x86_64 I/R requires any x86_64 compatible processor.
Such machines have long mode instruction, 64 bit registers,
and can address 64 gigabytes of memory.

Using the x86_64 I/R will not necessarily
create an installation that runs faster
than the IA32 installation.
It will however use slightly more memory
for storage of pointers, integers,
and for saving registers and address
on the stack when calling functions.
And that can make it run slower.
However, for some programs the larger address space
could be convenient or essential.

Any box with 3G or less installed RAM should probably
install the IA32 port of Sorcerer.
Any x86_64 capable box with 4G or more installed RAM
should install the x86_64 image
because RAM can be utilized more effectively, without paging.
And ELF 32-bit libraries are still provided
for running 32-bit software such as wine.
 
X32-ABI Sorcerer that allows the use of 64 bit integers
and the full instruction set of the 64 bit processor,
yet uses 32-bits for pointers and function calls
is not provided now nor is planned for the future.
This is because the best aspect of x86_64
is being able to address more than 4G of memory." 20 76

 dialog --backtitle "Sorcerer Recommendations" \
        --title "Mass Storage Recommendation"  \
        --msgbox "
40 gigabytes of mass storage is the minimum recommendation.
This can be provided by fixed disk, SSD, USB SSD, NFS, etc...
As little as 40G might be do-able provided
that the SA constantly cleans the file system.
Otherwise the root file system
could fill to maximum capacity
during updates of installed software.

A dedicated 1G ext2 file system is required for /boot
when / exists on a filesystem other than ext3 or ext4
or upon a LUKS encrypted device.
For certain types of RAIDs a dedicated /boot is also required.

The SA is responsible for knowing
when a dedicated /boot is required.
Omission of a dedicated /boot when required
will create a box that might fail it's first boot
and definitely fail it's second boot.
If any doubt exists then make the 1G ext2 /boot" 20 76

 dialog --backtitle "Sorcerer Recommendations" \
        --title "Swap Recommendation"  \
        --msgbox "
A dedicated swap partition of
half the size of installed RAM is recommended.
If suspending to disk then a dedicated swap partition
equal to the size of installed RAM is recommended.
However, dedicated swap space is not required.

Sorcerer boxes allocate and activate swap files as needed.
During boot old swap files are eliminated,
provided that the box rather than the SA created them.

If the root file system resides on a LUKS encrypted device
then the swap partition also
can also be created on a LUKS encrypted device.
A swap partition on a LUKS device
receives a unique random key on each boot.

Boxes that will suspend to disk
require a dedicate non encrypted swap partition
that should be at least as large
as the amount of installed RAM.
Suspend to disk and suspend to RAM
is not recommened, but not difficult to accomplish.

Proper shutdown or proper rebooting of a box quarterly
is best for maintaining optimal performance.
Succinctly stated, certain important events
only happen during shutdown and reboot.
Boxes with extreme uptime will waste memory
and file systems will not be fscked." 20 76


 dialog --backtitle "Sorcerer Recommendations" \
        --title "Role Recommendation"  \
        --msgbox "
Sorcerer is suitable for deployment
for the purpose of both servers and workstations.
File server, print server, web server,
email server, database, digital video toaster,
firewall/router, laptop, kiosk and more is possible. 

Sorcerer is ideally suited for the deployment
of encrypted laptops where the root file system
resides on a LUKS enrypted device
and the /boot file system exists
on a separate detachable USB SSD key/thumb drive.
No method for security is perfect
however with this method
the most vulnerable point of attack
is the unencrypted /boot partition
on the USB SSD key/thumb drive,
or the person who posses it.

Sorcerer boxes without LUKS encrypted devices
have average typical linux style security.
However, linux style security can be better enforced
by the installation of immune-security-tomoyo.
After activation a separate domains protect
system installed areas from both modification
and the addition of new files
even after a process has acquired EUID 0.

For modification of protected areas
additional authentication must be successfully passed
in order to accomplish transition into the freedom domain.
The freedom domain allows EUID 0
to accomplish all that is expected.
Otherwise, system installed files
and those areas of the file system
appear as if behind a glass barrier.
Reading can be accomplished, but modification is denied." 20 76


 dialog --backtitle "Sorcerer Recommendations" \
        --title "Hardened/Enhanced Security"  \
        --msgbox "
As mentioned in previous sections
two popular method exist
for hardening a Sorcerer box.
First, installation can be done so that important files
exist on file systems created on LUKS encrypted devices.
With this method the files content
can not be deciphered while a box is powered down
nor when a box is booted without correct passphrases.

LUKS is a good method for protecting data
on boxes that are powered down.
Provided that the unencrypted /boot partition
is also secured separately from the computer
then a LUKS encrypted device can be better
than any safe, vault, or security room.

Secondly, immune-security-tomoyo can be installed
which will provide a transparent diamond shield
for /bin /boot /etc /lib /lib64 /opt /usr /var.
File modification and even addition of new files
to system installation locations will be prohibited
without successful transition to the freedom domain.
Therefore, this method thwarts
the installation of root kits.
However, it does not protect against data theft
by a process that gains EUID 0.

Files that must be protected against theft
while residing on a mounted file system
should be stored encrypted.
Sorcerer can install several software projects
that can provide file level encryption.

Intrusion detection and system monitoring
software projects can be installed
that can inform and/or provide automatic response
to potential attacks and scans.

Since Sorcerer favors tomoyo enhanced security
and variations which the SA creates using tomoyo;
Sorcerer boxes will not support selinux style hardening.
Tomoyo seems more flexible and easier
to deploy and maintain than selinux.
selinux works best on boxes that do not update.
However, Sorcerer box can update frequently and even automatically.
A tomoyo lattice of security automatically covers updated files
without the overhead, headache, time, and effort required by selinux.

A Sorcerer box's security potential
depends mostly upon the skill and effort of the SA.
A Sorcerer box is not necessarily any less secure
than a distrbituion that specializes in the niche of hardening.
However, a box can be made as insecure as a SA desires.
A box can be easily configured to provide
automatic login to an X session on every boot.
The X session can run KDE or any window manager
or programs that the SA prefers.
This may be desired when a box has a kiosk style role." 20 76
}

try_sat(){
 if dialog --backtitle "Sorcerer Install/Rescue" \
           --title "Preliminary SA Exam Option"  \
           --yesno "Do the exam and read documentation?" 10 70
 then sat
 fi
}

wait_for_prc(){
        running(){ ps -C prc --no-headers -o fname | grep -q prc; }
 if     running; then
  while running; do sleep 1; done
  read -n 1 -t 60 -p "Wait 60 seconds or press space to continue"
 fi
}

ir_menu(){
 show_menu(){
  dialog --backtitle "Sorcerer Install/Rescue" --title "Task Menu" --stdout \
         --ok-label Select --cancel-label Shell --item-help --menu "$HELP" 0 0 0 \
  Require  "Minimum system requirements and recommendations" \
           "All new SAs should read this." \
  Dialog   "Tutorial" \
           "Dialog skill is a must have" \
  Sentient "Automatic installation of KDE + firefox + xorg" \
           "Few questions asked and installs Sorcerer Sentient to a block device" \
  Sorcerer "Menu driven installation" \
           "Install Sorcerer Modern Magic for experienced SAs"
 }

 while REPLY=$( show_menu ); do
  case $REPLY in
   Dialog)   /sbin/dt ;;
   Sentient) /sbin/sinstall Sentient ;;
   Sorcerer) try_sat; /sbin/sinstall ;;
   Require)  show ;;
  esac
 done
}

if read < /proc/cmdline; [[ $REPLY =~ boot=IR ]]; then
 if   (( UID == 0 )) && ! pgrep sinstall >/dev/null
 then wait_for_prc; ir_menu
 else unset ir_menu wait_for_prc sentient_menu
 fi
fi
