show(){
 dialog --backtitle "Sorcerer Recommendations" \
        --title "RAM Recommendation"  \
        --msgbox "
The minimum amount of installed RAM is 2 gigabytes.
However, for each processor 1G of RAM should be installed.
Therefore, a quad core workstation
should have at least 4G of RAM installed.
An 8 processor machine should have 8G of RAM installed.
And a single uniprocesor machine should have 2G of RAM.

If less than specified amount of RAM is installed
then casting uses less than full processing potential.
If less than 2G of RAM is installed
then aggressive swap thrashing can occur
when linking software projects such as firefox.
If less than 1G of RAM is installed
then Sorcerer might not install,
and deployment and updates might cause
nearly endless swapping and heavy lag or near lock situations
during input/output to mass storage devices.

If desired then the \"min\" feature can be enabled
which limits cast to minimum resource utilization.
However, this still does not circumvent
the previously mentioned requirements." 20 76

 dialog --backtitle "Sorcerer Recommendations" \
        --title "Processor Recommendation"  \
        --msgbox "
Congratulations, this box meets the minimum processor requirement.

The IA32 I/R requires at the very least
an 80686 with PAE instruction set compatible processor.

The x86_64 I/R requires any x86_64 compatible processor.
Such machines have long mode instruction, 64 bit registers,
and can address 64 gigabytes of memory.

Using the x86_64 I/R will not necessarily
create an installation that runs faster
than the IA32 installation.
It will however use slightly more memory
for storage of pointers, integers, and for saving
address on the stack when calling functions.
And that can make it run slower.
However, for some programs the larger address space
will prove convenient or essential.

Any x86_64 capable box with 4G or more installed RAM
should proably install the x86_64 image because
RAM can be utilized more effectively, without paging.
And ELF 32-bit libraries are still provided
for running 32-bit software such as wine.
 
X32-ABI Sorcerer that allows the use of 64 bit integers
and the full instruction set of the 64 bit processor,
yet uses 32-bits for pointers and function calls
is not provided now nor is planned for the future.
This is because the best aspect of x86_64
is being able to address more than 4G of memory.
Those who prefer a 3% speed gain
should buy and install a faster microprocessor." 20 76

 dialog --backtitle "Sorcerer Recommendations" \
        --title "Mass Storage Recommendation"  \
        --msgbox "
40 gigabytes of mass storage is the minimum recommendation.
This can be provided by fixed disk, SSD, USB SSD, NFS, etc...
As little as 30G might be do-able provided
that the SA constantly cleans the file system.
Otherwise the root file system
could fill to maximum capacity
during updates of installed software.
At 40G or more then a box
will automatically clean it's own rubbish.
No problem should be anticipated unless users
aggressive use disk space.
If so then place home on a private file system.

When / exists on a file system other than ext3 or ext4
then a dedicated 2G ext2 file system for /boot could be required.
A dedicated /boot file system is also required
when / exists on a LUKS encrypted device.
For certain types of RAIDs a dedicated /boot is also required.
The SA is responsible for knowing when a dedicated /boot is required
and for making the partition and file system
while using the menu driven installer
or manually at a command prompt.
Omission of a dedicated /boot partition and file system
on an installation style where a /boot is required
creates a box that will might not achieve it's first boot
and will not achieve it's second." 20 76

 dialog --backtitle "Sorcerer Recommendations" \
        --title "Swap Recommendation"  \
        --msgbox "
Dedicated swap space is not required.
The box will allocate and activate swap files as needed.
At time of boot old swap files are eliminated,
provided that the box rather than the SA created them.

However, the convenience of swap files
incurs a small performance penalty.
Best performance is achieved
with a dedicated swap partition.
The proper amount of space for a swap partition varies.
Most SAs would allocate at least 1G as a minimum
and no more than half installed RAM as a maximum.
However, maximum values vary depending upon
the role of the box and the amount of installed RAM.
If the size of the dedicated swap partition is insufficient
then the box will create and activate swap files as necessary.

Normally, a box can not deplete all available memory.
However, an intentional fork bomb
could eventually swap lock a box,
unless the SA sets reasonable limits
to prevent an unreasonble amount of memory
and process usage by a user.

If the root file system resides on a LUKS encrypted device
then the swap partition also
can also be created on a LUKS encrypted device.
The swap partition will receive a unique random key on each boot.
This prevents data recovery from the swap partition.

Boxes that will suspend to disk
require a dedicate non encrypted swap partition
that should be at least as large
as the amount of installed RAM.
Suspend to disk and suspend to RAM
is not recommened, but not difficult to accomplish.

Proper shutdown or proper rebooting of a box quarterly
is best for maintaining optimal performance.
Succinctly stated, certain important events
only happen during shutdown and reboot.
For example on boxes with extreme uptime,
memory will be wasted
and file systems will not be fscked/checked." 20 76


 dialog --backtitle "Sorcerer Recommendations" \
        --title "Role Recommendation"  \
        --msgbox "
Sorcerer is suitable for deployment
for the purpose of both servers and workstations.
File servers, print servers, web servers, email servers,
database, kiosks and much more is possible. 
A Sorerer box can even be used as a gadget such as
for deployment for the single role of being a firewall/router.
However, other niche distributions may be better suited
for the role of a dedicated firewall/router.

Sorcerer is ideally suited for the deployment of encrypted laptops
where the root file system resides on a LUKS enrypted partition
and the /boot file system exists on a separate USB SSD key/thumb drive.
No method for security is perfect
however with this method
the most vulnerable point of attack
is the unencrypted /boot partition on the USB SSD key/thumb drive,
or the person who posses it.

Sorcerer boxes without LUKS encrypted devices
have average typical linux style security.
However, linux style security can be better enforced
by the installation of immune-security-tomoyo.
After activation a separate domains protect
system installed areas from both modification
and the addition of new files
even when a process has acquired EUID 0.

For modification of protected areas
additional authentication must be successfully passed
in order to accomplish transition into the freedom domain.
The freedom domain allows EUID 0 to accomplish all that is expected.
Otherwise, system installed files and
those areas of the file system
appear as if behind a glass barrier.
Reading can be accomplished, but modification is denied." 20 76


 dialog --backtitle "Sorcerer Recommendations" \
        --title "Hardened/Enhanced Security"  \
        --msgbox "
As mentioned in previous sections
two popular method exist
for hardening a Sorcerer box.
First, installation can be done so that important files
exist on file systems created on LUKS encrypted devices.
With this method the files content
can not be deciphered while a box is powered down
nor when a box is booted without correct passphrases.

LUKS is a good method for protecting data
on boxes that are powered down.
Provided that the unencrypted /boot partition
is also secured separately from the computer
then a LUKS encrypted device can be better
than any safe, vault, or security room.

Secondly, immune-security-tomoyo can be installed
which will provide a transparent diamond shield
for /bin /boot /etc /lib /lib64 /opt /usr /var.
File modification and even addition of new files
to system installation locations will be prohibited
without successful transition to the freedom domain.
Therefore, this method helps thwart the installation of root kits.
However, it does not protect against data theft
by a process that gains EUID 0.

Files that must be protected against theft
while residing on a mounted file system
should be stored encrypted.
Sorcerer can install several software projects
that can provide file level encryption.

Intrusion detection, and system monitoring software projects
can be installed on a box
that can inform and/or provide automatic response
to potential attacks and scans.

Since Sorcerer favors tomoyo enhanced security
and variations which the SA creates using tomoyo;
Sorcerer boxes will not support selinux style hardening.
Tomoyo seems more flexible and easier
to deploy and maintain than selinux.
selinux works best on boxes that do not update.
However, Sorcerer box can update frequently and even automatically.
A tomoyo lattice of security can automatically cover updated files
without the overhead, headache, time, and effort required by selinux.

A Sorcerer box's security potential
depends mostly upon the skill and forethought of the SA.
A Sorcerer box is not necessarily any less secure
than a distrbituion that specializes in the niche of hardening.
However, a box can be made as insecure as a SA desires.
A box can be easily configured to provide
automatic login to an X session on every boot.
The X session can run KDE or any window manager
or programs that the SA prefers.
This may be desired when a box has a kiosk style role." 20 76
}

try_sat(){
 if dialog --backtitle "Sorcerer Install/Rescue" \
           --title "Preliminary SA Exam Option"  \
           --yesno "Do the exam and read documentation?" 10 70
 then sat
 fi
}

wait_for_prc(){
        running(){ ps -C prc --no-headers -o fname | grep -q prc; }
 if     running; then
  while running; do sleep 1; done
  read -n 1 -t 60 -p "Wait 60 seconds or press space to continue"
 fi
}

ir_menu(){
 show_menu(){
  dialog --backtitle "Sorcerer Install/Rescue" --title "Task Menu" --stdout \
         --ok-label Select --cancel-label Shell --item-help --menu "$HELP" 0 0 0 \
  Require  "Minimum system requirements and recommendations" \
           "All new SAs should read this." \
  Dialog   "Tutorial" \
           "Dialog skill is a must have" \
  Sentient "Automatic installation of KDE + firefox + xorg" \
           "Few questions asked and installs Sorcerer Sentient to a block device" \
  Sorcerer "Menu driven installation" \
           "Install Sorcerer Modern Magic for experienced SAs"
 }

 while REPLY=$( show_menu ); do
  case $REPLY in
   Dialog)   /sbin/dt ;;
   Sentient) /sbin/sinstall Sentient ;;
   Sorcerer) try_sat; /sbin/sinstall ;;
   Require)  show ;;
  esac
 done
}

if read < /proc/cmdline; [[ $REPLY =~ boot=IR ]]; then
 if   (( UID == 0 )) && ! pgrep sinstall >/dev/null
 then wait_for_prc; ir_menu
 else unset ir_menu wait_for_prc sentient_menu
 fi
fi
