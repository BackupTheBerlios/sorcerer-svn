inherit glibc
unset  SOURCE  URL  REQ
  CATEGORY="documentation/i18n"
 ATTRIBUTE="data"
  ESTIMATE="5"
      DESC="glibc-locales provides locale databases for translating messages."

configure() {

locales_checklist()  { 
  if    [  -f      /usr/share/i18n/SUPPORTED  ]
  then  cat        /usr/share/i18n/SUPPORTED
  else  cat            $SCRIPT_DIR/SUPPORTED
  fi  |  grep  "/"  |  cut  -d ' '  -f1  |
  while  read;  do
#   CHARMAP="${REPLY##*/}"
       NAME="${REPLY%/*}"
     SOURCE="${NAME%.*}"

    echo  "$REPLY"
    grep  "title "  /usr/share/i18n/locales/$SOURCE  |  cut -d '"' -f2
    echo  "off"
  done
}

select_locales()  {
  BACKTITLE="Glibc Locale Configuration Menu"
      TITLE="Locale Selection"
       HELP="Translated messages are automatically installed, 
but the locale database that controls other behavior is not.  
Please select desired locale or locales.
If none are selected then all will be installed."

  dialog  --backtitle  "$BACKTITLE"  \
          --title      "$TITLE"      \
          --stdout                   \
          --separate-output          \
          --no-cancel                \
          --checklist  "$HELP"       \
          0 0 0                      \
          $(  locales_checklist  )
}

  if  !  grep  -q  "LOCALES="  $SPELL_CONFIG  2>/dev/null;  then
    (
      export  IFS=$'	\n'
      if    query  "Select individual locales?"  n
      then         LOCALES="$(  select_locales  )"
      else  unset  LOCALES
      fi
      echo    "LOCALES=\"$LOCALES\""      >  $SPELL_CONFIG
    )
  fi
}

build() {
  tmp_locale_archive()  {
    local  TMP=/tmp/locale.$RANDOM$RANDOM
    local  DIR=$TMP/usr/lib/locale
    local  SUPPORTED="/usr/share/i18n/SUPPORTED"

    mkdir  -p  $DIR

      if  [  -n  "$LOCALES"             ];  then  echo  "$LOCALES"
    elif  [  -f             $SUPPORTED  ];  then  cat              $SUPPORTED
    elif  [  -f  $SCRIPT_DIR/SUPPORTED  ];  then  cat   $SCRIPT_DIR/SUPPORTED
    fi  |  grep  "/"  |  cut  -d ' '  -f1  |
    while  read;  do
      CHARMAP="${REPLY##*/}"
         NAME="${REPLY%/*}"
       SOURCE="${NAME%.*}"
      echo       -n  "$NAME..."
      localedef  -i $SOURCE  -c  -f $CHARMAP  --prefix=$TMP  $NAME
      echo           " done"
    done
    mv  $DIR/locale-archive  /usr/lib/locale
    rm  -rf  $TMP
  }

  prepare_install
  rm     -rf  /usr/lib/locale
  mkdir  -p   /usr/lib/locale
  tmp_locale_archive
}
