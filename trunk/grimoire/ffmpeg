# to overcome the error:
# /usr/include/libavutil/common.h:154: error: 'UINT64_C' was not declared in this scope
# add a custom build to that spell such as:
#
# build(){
# # for ffmpeg version 0.6
#    CFLAGS+=' -D__STDC_CONSTANT_MACROS'
#  CXXFLAGS+=' -D__STDC_CONSTANT_MACROS'
#  export CFLAGS CXXFLAGS
#  default_build
# }


# opal version 3.6.4 requires ffmpeg 0.5
# Update and test linphone after updating ffmpeg, please.

# ffmpeg version 0.8 compiles fine, however
# much software does not compile with ffmpeg version 0.8

# Version 2.0 is too new for xine-lib version 1.2.2 to use for compilation.

with info    good 20131009
with info    last 20131008
with version   stable 2.0.2 1.2.1 1.2
with version unstable 2.0.2 2.0.1 2.0
with version   2.1.x  2.1
with version   2.0.x  2.0.2 2.0.1 2.0
with version   1.2.x  1.2.4 1.2.3 1.2.2
with version   1.1.x  1.1.7 1.1.6 1.1.5
with version   1.0.x  1.0.8 1.0.7 1.0.6
with version   legacy 0.11.2
with base    bzip2 nasm zlib
with also    --enable-swscale --enable-postproc --enable-gpl --enable-shared --enable-pthreads --disable-debug
with also    --enable-nonfree --disable-static --disable-doc --enable-x11grab
# --enable-pic causes compile failure
#     with also --enable-pic

# avisynth is broke so do not enable aswit elect
#with elect   jackit

with elect   SDL            ''                       --disable-ffplay  to build ffplay media player
with elect   XviD           --enable-libxvid         --disable-libxvid
with elect   a52dec
# celtwit elect   for ffmpeg version 0.8 and later
#with elect   celt           --enable-libcelt         --disable-libcelt
with elect   faac           --enable-libfaac         --disable-libfaac
# frei0r-plugins creates requirement loop with OpenCV and ffmpeg
#with elect   frei0r-plugins --enable-frei0r          --disable-frei0r
with elect   gsm            --enable-libgsm          --disable-libgsm
with elect   lame           --enable-libmp3lame      --disable-libmp3lame
with elect   libdc1394      --enable-libdc1394       --disable-libdc1394
with elect   libtheora      --enable-libtheora       --disable-libtheora
with elect   libvorbis      --enable-libvorbis       --disable-libvorbis
with elect   libvpx         --enable-libvpx          --disable-libvpx
# ffmpeg does not recognize the installation of openjpeg
#with elect   openjpeg       --enable-libopenjpeg     --disable-libopenjpeg
# ffmpeg does not recognize rtmpdump's librtmp library
#with elect   rtmpdump       --enable-librtmp         --disable-librtmp
with elect   schroedinger   --enable-libschroedinger --disable-libschroedinger
with elect   x264           --enable-libx264         --disable-libx264
with role    video
with trait   library makej optimize
with source    stable http://www.ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
with source  unstable http://www.ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
with source     2.1.x http://www.ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
with source     2.0.x http://www.ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
with source     1.2.x http://www.ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
with source     1.1.x http://www.ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
with source     1.0.x http://www.ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
with source    legacy http://www.ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
with info    home http://ffmpeg.mplayerhq.hu/
with info    docs http://ffmpeg.org/documentation.html
with info    cite 'complete video and audio broadcasting solution
ffmpeg is a complete and free Internet live audio
and video broadcasting solution for Linux/Unix.
It also includes a digital VCR.
It can encode in real time in many formats including
MPEG1 audio and video, MPEG4, h263, ac3, asf, avi, real, mjpeg, and flash.'

build(){
 flags(){ grep flags < /proc/cpuinfo | grep -q $1 || OPTS+=" $2"; }

 local ARCH

 export   CFLAGS="${CFLAGS//-funroll-loops/}"
 export CXXFLAGS="${CXXFLAGS//-funroll-loops/}"
 export   CFLAGS="${CFLAGS//pentium-m /i686 }"
 export CXXFLAGS="${CXXFLAGS//pentium-m /i686 }"

 export  LDFLAGS+=' -ldl'

 flags mmx      --disable-mmx
#flags mmx2     --disable-mmx2
 flags sse      --disable-sse
 flags sse3     --disable-ssse3
 flags 3dnow    --disable-amd3dnow
 flags 3dnowext --disable-amd3dnowext

 if   [[ $HOSTTYPE == x86_64 ]] && [[ $CFLAGS =~ -m32 ]]
 then ARCH=i686
 else ARCH=$HOSTTYPE
 fi

# if   [[ $HOSTTYPE == x86_64 ]] && ! [[ $CFLAGS =~ -m32 ]]
# then LDFLAGS+=' -L/usr/lib64'
# else LDFLAGS+=' -L/usr/lib'
# fi

 setarch $ARCH \
 ./configure   \
 --prefix=/usr \
 $OPTS &&  sed -i 's:LDFLAGS=:LDFLAGS+=:' config.mak &&
 setarch $ARCH  make  &&
 setarch $ARCH  make install "DESTDIR=$DESTDIR"     &&
 mkdir -pvm 755 "$DESTDIR/etc" &&
 install -m 644 doc/ffserver.conf "$DESTDIR/etc" &&
 sed -i 's:-L${libdir}::' $DESTDIR/usr/lib/pkgconfig/*.pc &&
 if    [[ $HOSTTYPE == x86_64   ]]; then
  if   [[ $CFLAGS   =~ -m32     ]]; then mv $DESTDIR/usr/lib{,32}
                                    else mv $DESTDIR/usr/lib{,64}
    if [[ -d $DESTDIR/usr/lib32 ]]; then mv $DESTDIR/usr/lib{32,}; fi
  fi
 fi
}
