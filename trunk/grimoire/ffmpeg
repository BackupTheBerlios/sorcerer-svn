# to overcome the error:
# /usr/include/libavutil/common.h:154: error: 'UINT64_C' was not declared in this scope
# add a custom build to that spell such as:
#
# build(){
# # for ffmpeg version 0.6
#    CFLAGS+=' -D__STDC_CONSTANT_MACROS'
#  CXXFLAGS+=' -D__STDC_CONSTANT_MACROS'
#  export CFLAGS CXXFLAGS
#  default_build
# }


# opal version 3.6.4 requires ffmpeg 0.5
# Update and test linphone after updating ffmpeg, please.

# ffmpeg version 0.8 compiles fine, however
# much software does not compile with ffmpeg version 0.8


   version stable 0.7.8 0.7.6 0.7.5 0.7.4 0.7.3 0.7.1
   version latest 0.8.5 0.8.4 0.8.3 0.8.2 0.8
   require bzip2 nasm zlib
      opts --enable-swscale --enable-postproc --enable-gpl --enable-shared --enable-pthreads --disable-debug
#   CFLAGS='-O2 -ffast-math'
#  LDFLAGS='-Wl,-O1'
case $VERSION in
 0.8.5) opts --enable-nonfree --disable-static --disable-doc ;;
 0.8.4) opts --enable-nonfree --disable-static --disable-doc ;;
 0.8.2) opts --enable-nonfree --disable-static --disable-doc ;;
   0.8) opts --enable-nonfree --disable-static --disable-doc ;;
 0.7.8) opts --enable-nonfree --disable-static --disable-doc ;;
 0.7.6) opts --enable-nonfree --disable-static --disable-doc ;;
 0.7.5) opts --enable-nonfree --disable-static --disable-doc ;;
 0.7.4) opts --enable-nonfree --disable-static --disable-doc ;;
 0.7.3) opts --enable-nonfree --disable-static --disable-doc ;;
 0.7.1) opts --enable-nonfree --disable-static --disable-doc ;;
esac

# avisynth is broke so do not enable as optional
# optional jackit

  optional SDL            ''                       --disable-ffplay  to build ffplay media player
  optional XviD           --enable-libxvid         --disable-libxvid
  optional a52dec
# celt optional for ffmpeg version 0.8 and later
# optional celt           --enable-libcelt         --disable-libcelt
  optional dirac          --enable-libdirac        --disable-libdirac
  optional faac           --enable-libfaac         --disable-libfaac
# frei0r-plugins creates requirement loop with OpenCV and ffmpeg
# optional frei0r-plugins --enable-frei0r          --disable-frei0r
  optional gsm            --enable-libgsm          --disable-libgsm
  optional lame           --enable-libmp3lame      --disable-libmp3lame
  optional libdc1394      --enable-libdc1394       --disable-libdc1394
  optional libtheora      --enable-libtheora       --disable-libtheora
  optional libvorbis      --enable-libvorbis       --disable-libvorbis
  optional libvpx         --enable-libvpx          --disable-libvpx
# ffmpeg does not recognize the installation of openjpeg
# optional openjpeg       --enable-libopenjpeg     --disable-libopenjpeg
# ffmpeg does not recognize rtmpdump's librtmp library
# optional rtmpdump       --enable-librtmp         --disable-librtmp
  optional schroedinger   --enable-libschroedinger --disable-libschroedinger
  optional speex          --enable-libspeex        --disable-libspeex
  optional x264           --enable-libx264         --disable-libx264
  category video
 attribute library makej optimize
    source http://www.ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
      info last 20111129
      info home http://ffmpeg.mplayerhq.hu/
      info docs http://ffmpeg.org/documentation.html
      desc 'complete video and audio broadcasting solution
ffmpeg is a complete and free Internet live audio
and video broadcasting solution for Linux/Unix.
It also includes a digital VCR.
It can encode in real time in many formats including
MPEG1 audio and video, MPEG4, h263, ac3, asf, avi, real, mjpeg, and flash.'

build(){
 flags(){ grep flags < /proc/cpuinfo | grep -q $1 || OPTS+=" $2"; }

 local ARCH

 export   CFLAGS="${CFLAGS//-funroll-loops/}"
 export CXXFLAGS="${CXXFLAGS//-funroll-loops/}"
 export   CFLAGS="${CFLAGS//pentium-m /i686 }"
 export CXXFLAGS="${CXXFLAGS//pentium-m /i686 }"

 export  LDFLAGS+=' -ldl'

 flags mmx      --disable-mmx
 flags mmx2     --disable-mmx2
 flags sse      --disable-sse
 flags sse3     --disable-ssse3
 flags 3dnow    --disable-amd3dnow
 flags 3dnowext --disable-amd3dnowext

 if   [[ $HOSTTYPE == x86_64 ]] && [[ $CFLAGS =~ -m32 ]]
 then ARCH=i686
 else ARCH=$HOSTTYPE
 fi

 setarch $ARCH \
 ./configure   \
 --prefix=/usr \
 $OPTS &&  sed -i 's:LDFLAGS=:LDFLAGS+=:' config.mak &&
 setarch $ARCH  make  &&
 setarch $ARCH  make install "DESTDIR=$DESTDIR"     &&
 mkdir -pvm 755 "$DESTDIR/etc" &&
 install -m 644 doc/ffserver.conf "$DESTDIR/etc" &&
 sed -i 's:-L${libdir}::' $DESTDIR/usr/lib/pkgconfig/*.pc &&
 if    [[ $HOSTTYPE == x86_64   ]]; then
  if   [[ $CFLAGS   =~ -m32     ]]; then mv $DESTDIR/usr/lib{,32}
                                    else mv $DESTDIR/usr/lib{,64}
    if [[ -d $DESTDIR/usr/lib32 ]]; then mv $DESTDIR/usr/lib{32,}; fi
  fi
 fi
}
