   VERSION=( "20070211" "20070130" "20070111" "20070108" "20070105" "20061223" "20061215" "20061211" )
      SAFE=( "20070211" )
  CATEGORY="file-system utility"
 ATTRIBUTE="library"
    SOURCE="fuse.gunzip-$VERSION.tar.gz"
       URL="http://fuse.gunzip.silverice.org/files/"
  HOMEPAGE="http://fuse.gunzip.silverice.org/"
       REQ="fuse zlib"
  ESTIMATE="20"
      DESC="fuse.gunzip provides transparent decompression for files on /usr

sorcery supports fuse.gunzip.
First, enable the feature.
sorcery -> Config -> Toggle Features
Next, select the algorithim used to select files for compression
sorcery -> Extended Features -> Reduce

Although drive throughput may be rated at 30 megs a second
or even 2 Gigs a second the actual performance is not that fast.
This is because some files become written in fragments.
The fragments may not reside close to each other on disk.
Also parts of multiple files to read may not reside physically close.
If disk drives were used with completely linear filesystems
where files to be read consecutively were advantageously 
placed next to each other then drives would be very fast.
However, that is not the case.

Even some of the best filesystems, such as UFS,
that try to place files in subdirectories physically close
still suffer fragmentation.
The same is true for reiserfs which tucks small files
and the tails of files into the directory tree.
In order to balance performance between reading and writing,
files do become fragmented, because the required size for
writing the full file is not revealed when the file is
opened and created.

Making files smaller reduces the amount of fragments
they can be stored in and probably enables a file
to be written using less fragments, which are also called extents.
That is what fuse.gunzip does.

The disk performance enhancer works because disk drives
tend to be several magnitudes slower than CPUs and RAM.
The equation for how it works is this:

Tu > Tc + Td

Tu = Time to read uncompressed file.
Tc = Time to read   compressed file.
Td = Time to decompress        file.

Basically, inflating gzip compressed files is so fast
on modern computers that a compressed file can be read
and inflated faster than the same file can be read from
disk if it is not compressed.
This is most often true when the entire file
is to be read and not merely the first block."

build() {
  default_build  &&
  make    install.init
}

post_install() { /lib/lsb/install_initd; }
pre_remove()   { /lib/lsb/remove_initd; }
