#!/bin/bash

# Copyright 2013 by Kyle Sallee All Rights Reserved
# ttyd is a daemon to identify an avaialble virtual console
# and allow activation of the virtual console and login

tty_num(){  sed "\,/dev/tty0$,d;s:.*/dev/tty::p;d"; }
tty_proc(){ find /proc/*/fd/0 -type l -xtype c -printf "%l\n"; }
tty_open(){ tty_proc | tty_num | sort -ug; }
tty_all(){  find /dev/ -type c -name "tty[0-9]*" | tty_num; }
tty_use(){  ( tty_open; tty_all ) | sort -g | uniq -u | sed "1p;d" | sed 's:^:/dev/tty:'; }
tty_clr(){  deallocvt; printf "%b\033c"; }

root_avail(){
 find /media/root/*/bin/login -maxdepth 0 -type f -executable |
 cut -d / -f4 | sort -u
}

root_select(){
 local -i loop=0
 local -i index=-1
 local -a roots
 read  -a roots <<< $( root_avail )
 tty_clr
 [ -f /bin/tty ] &&
      /bin/tty
 printf "%(%c)T\n" -1
 echo $"#  root file system name"
 while [ -n "${roots[$loop]}" ]; do
  if (( loop < 10 ))
  then printf     "$loop  ${roots[$loop]}\n" 
  else printf     "$loop ${roots[$loop]}\n"
  fi
  (( loop++ ))
 done
 printf $"Please select a root file system by number: "
 if read -t 3600 index &&
                  [ -n "${roots[$index]}" ]
 then root="/media/root/${roots[$index]}"
 else return 1
 fi
}

login_launch(){ tty_clr; exec /bin/chroot "$root" /bin/login; }

tty_activate(){
 local        root
 while [ -z "$root" ]; do root_select; done

 tty_await
 login_launch 
}

tty_await(){
 local       tty="$( tty_use )"
 if   [ -n "$tty" ];
 then tty_activate < $tty &> $tty 255<> $tty &
 fi
}

main(){ while :; do [ -n "$( jobs -p )" ] || tty_await; sleep 5; done; }

not_root(){ ! (( $UID == 0 )); }
not_rootfs(){ [ -z "$( find /media/root -mindepth 1 -maxdepth 1 -type d )" ]; }

if not_root || not_rootfs; then exit 1; fi

trap : SIGHUP SIGINT SIGQUIT SIGILL SIGABRT SIGSTOP
[      -f /usr/libexec/bash/sleep ] &&
enable -f /usr/libexec/bash/sleep sleep
exec 0>&- 1>&- 2>&- 255>&-
main &
# main < /dev/null &> /dev/null &
