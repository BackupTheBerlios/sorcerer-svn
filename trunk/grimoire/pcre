# cmake build for pcre 7.8 does not install libtool .la file for pcre
# and installs pcre shared libraries without the dot digits following the so
# Therefore, explicitly avoid using the cmake build for pcre 7.8
# Also not having pcre require cmake allows cmake to be omitted from I/R

with info    last 20131217
with version stable 8.34 8.33 8.32
if   [[ pcre == $TECHNIC ]]; then
with base    pkgconfig
#with base    cmake pkgconfig
with elect   gcc-g++
fi
with also    --exec-prefix= --bindir=/usr/bin
with role    development
with trait   library lto makej optimize
if   [[ pcre == $TECHNIC ]]; then
with trait   multilib-concurrent solo
fi
with source  stable ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-$VERSION.tar.bz2
with also    --enable-utf8 --enable-unicode-properties
#      with also -DCMAKE_INSTALL_PREFIX:PATH=/usr
#      with also -DBUILD_SHARED_LIBS:BOOL=TRUE
#      with also -DBUILD_STATIC_LIBS:BOOL=FALSE
#      with also -DPCRE_SUPPORT_UNICODE_PROPERTIES=TRUE
#      with also -DCMAKE_BUILD_TYPE=Release

## Specifying the below with also avoids a bug in the pcre's cmake files in version 7.8
#      with also -DNCURSES_LIBRARY:STRING=-lncurses

with info    home http://www.pcre.org/
with info    cite 'Perl compatible regular expression library
pcre is a library that implement regular expression pattern matching
using the same syntax and semantics as Perl 5, with just a few differences.'

build(){
 export PATH="${PATH//\/usr\/bin.a:/}"
 export CCACHE_PATH=/usr/bin

 with also --enable-static=no
 trim_html(){
  if     [ -f "$POST_LOGS"/sorcerer-iso9660 ] ||
         [ -f "$POST_LOGS"/deployment-docent ]
  then rm -fr "$DESTDIR"/usr/share/doc/pcre/html
  fi
 }

 export   CFLAGS="${CFLAGS//-flto/}"
 export CXXFLAGS="${CXXFLAGS//-flto/}"
 export  LDFLAGS="$( echo "$LDFLAGS" | sed "s:-flto=[^ ]::" )"
 rm -f CMakeLists.txt
 sed -i 's:hardcode_into_libs=yes:hardcode_into_libs=no:' configure
 default_build && trim_html
}
