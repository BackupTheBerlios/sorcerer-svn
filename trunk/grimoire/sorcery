    stable photon-20080924-0 photon-20080923-3 photon-20080922-0 photon-20080920-3 photon-20080919-0 photon-20080916-1 photon-20080915-0 photon-20080911-1 photon-20080910-0 photon-20080908-1 photon-20080904-3 photon-20080826-0 photon-20080825-2 photon-20080824-0
[[ -z $VERSION ]] &&
 VERSION=( photon-20080924-0 )
       url http://sorcerer.silverice.org/download/sorcery/
       URL=http://sorcerer.silverice.org/download/sorcery/
    source sorcery-$VERSION.tar.bz2
    SOURCE=sorcery-$VERSION.tar.bz2

# Temporarily disable requirement on curl due to:
# curl optionally requires openldap
# openldap currently requires db-v4.5
# db-v4.5 may not yet be installed
#  require bash bzip2 curl dialog diffutils file findutils gcc grep grimoire gzip init-scripts less make mktemp p7zip patch procps rpmunpack sorcery-sentinel tar which
   require bash bzip2      dialog diffutils file findutils gcc grep grimoire gzip init-scripts less make mktemp p7zip patch procps rpmunpack sorcery-sentinel tar which
  optional ccache            '' '' for faster compilation when updating installed software
  optional sdelta3           '' '' for downloading tiny source tarball patches
  optional sorcery-alien     '' '' for monthly tracking of installed alien files
  optional sorcery-backup    '' '' for monthly filesystem backup
  optional sorcery-bgz       '' '' for background compression of tarballs
  optional sorcery-bootblaze '' '' for faster booting and login
  optional sorcery-clean     '' '' for removal of old tarballs and old logs
  optional sorcery-defrag    '' '' for monthly file defragment
  optional sorcery-immune    '' '' for an immune system
  optional sorcery-md5sum    '' '' for weekly md5sum check of installed files

  category utility
 attribute archive_off solo sorcery

  homepage http://sorcerer.silverice.org/
   exclude /dev
   exclude /etc/sorcery/local.config
   exclude /home
   exclude /proc
   exclude /root
   exclude /tmp
   exclude /usr/src/sorcery
   exclude /var/cache
   exclude /var/lock
   exclude /var/run
   exclude /var/spool
   exclude /var/state
   exclude /var/tmp
   protect /etc/sorcery/config
   protect /etc/sorcery/dialogrc
   protect /etc/sorcery/log/history
   protect /etc/sorcery/log/snap
   protect /usr/libexec/sorcery/augur
   protect /usr/libexec/sorcery/cast
   protect /usr/libexec/sorcery/dispel
   protect /usr/libexec/sorcery/leech
   protect /usr/libexec/sorcery/share
   protect /usr/libexec/sorcery/sorcery
   protect /usr/sbin/augur
   protect /usr/sbin/cast
   protect /usr/sbin/dispel
   protect /usr/sbin/leech
   protect /usr/sbin/sorcery
  estimate 20
      desc 'sorcery contains source management tools.
augur   - provides detailed information about the box
cast    - installs spells
dispel  - removes installed spells
leech   - downloads sources for spells
sorcery - menu driven source manager'

build(){
 [[ -x   install ]] &&
 prepare_install    &&
 ./install $VERSION
}


post_install(){

 missing_init_script(){
  find  $VERSION_LOGS -type f -printf '%f\n' |
  while read
  do    [[ -d $GRIMOIRE/$REPLY.d/init.d.on ]] &&
        find  $GRIMOIRE/$REPLY.d/init.d.on -type f -printf '%f\n'
  done  |
  while read
  do    [[ -f /etc/init.d/$REPLY ]] || echo "$REPLY"
  done  |
  while read
  do    find $GRIMOIRE/*.d/init.d.on/$REPLY -type f
  done  |
  sed   "s:$GRIMOIRE/::;s:\.d/.*::" |
  pipe_queue $CAST_QUEUE com
 }

 move_ldd_logs(){
  [[ -d /etc/sorcery/log/elf ]] && return
  mv   -v     /etc/sorcery/log/ldd /etc/sorcery/log/elf
  grep -lr  '^/etc/sorcery/log/ldd' $INSTALL_LOGS | xargs -r --max-lines=2048 \
  sed  -i 's:^/etc/sorcery/log/ldd:/etc/sorcery/log/elf:'
 }

 make_progress(){
  if [ -d ${PROGRESS_LOGS:=/etc/sorcery/log/progress} ]; then return; fi
  mkdir -p $PROGRESS_LOGS
  [[ -d /etc/sorcery/log/hold ]] &&
  find /etc/sorcery/log/hold -type f -printf '%f\n' |
  while read; do installed_version $REPLY > $PROGRESS_LOGS/$REPLY; done
  [[ -d /etc/sorcery/log/sold ]] &&
  find /etc/sorcery/log/sold -type f -printf '%f\n' |
  while read; do echo secure > $PROGRESS_LOGS/$REPLY; done
  [[ -d /etc/sorcery/log/exile ]] &&
  find /etc/sorcery/log/exile -type f -printf '%f\n' |
  while read; do echo exile > $PROGRESS_LOGS/$REPLY; done
 }

 remove_old_logs(){
  rm -fr /etc/sorcery/log/{id,{boot,xinetd}.{on,off}}
  rm -fr /etc/sorcery/log/{exile,hold,sold}
 }

 discard_old_index(){
  . /etc/sorcery/config
  merge_grimoires
  generate_index   
 }

 fix_elf_logs(){
  mkdir_p ${ELF_LOGS:=/etc/sorcery/log/elf}

  [[ -d /etc/sorcery/log/ldd ]] &&
  find  /etc/sorcery/log/ldd -type f |
  while read; do
   mv $REPLY $ELF_LOGS
   sed -i "s:/etc/sorcery/log/ldd/:/etc/sorcery/log/elf/:" $INSTALL_LOGS/${REPLY##*/}
  done &&
  rm -fr /etc/sorcery/log/ldd

  find $ELF_LOGS -type f |
  while read; do
   read ONE TWO < $REPLY
   if [[ -n $ONE ]]; then
      [[ -n $TWO ]] || elf_of "${REPLY##*/}" > $REPLY
   fi
  done
 }

 move_temporary_logs(){
  move(){
   while [[ -n $1 ]]; do
    if   [[ -e   /etc/sorcery/log/$1 ]] && ! [[ -e /var/log/sorcery/$1 ]]
    then mv -v   /etc/sorcery/log/$1               /var/log/sorcery/$1
    else rm -vfr /etc/sorcery/log/$1
    fi
    shift
   done
  }

  [[ -h /etc/sorcery/log ]] && return
  [[ -h /var/log/sorcery ]] && return
  [[ -d /var/log/sorcery/activity ]] && return
  mkdir_p /var/log/sorcery
  move activity dispel.gz estimate event fail history.gz leech resume snap snap.gz
 }

 difuse_old_elf(){
  case $HOSTTYPE in
   x86_64) LC_ALL=C grep -lx "/lib64/libc.so.6" $ELF_LOGS | xargs -r --max-lines=256 sed -i '\,/lib64/libc.so.6,d' ;;
        *) LC_ALL=C grep -lx   "/lib/libc.so.6" $ELF_LOGS | xargs -r --max-lines=256 sed -i   '\,/lib/libc.so.6,d' ;;
  esac
 }

 [[ -d  /lib.old/modules ]] &&
 rm -fr /lib.old

 [[  -f /etc/sorcery/log/version/install ]] ||
 rm -fr /boot/isolinux


 #missing_init_script
 difuse_old_elf
 move_ldd_logs
 discard_old_index
 make_progress
 remove_old_logs
## uncomment fix_elf_logs when they should be fixed
## because the box went too long without updates.
#fix_elf_logs
 move_temporary_logs
 default_post_install
}
