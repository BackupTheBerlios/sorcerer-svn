    stable photon-20080719-0 photon-20080718-0 photon-20080715-0 photon-20080713-0 photon-20080712-2 photon-20080712-1 photon-20080712-0 implosion-20080709-0 implosion-20080708-1 implosion-20080707-1 implosion-20080704-0 implosion-20080704-4 implosion-20080702-1 implosion-20080701-6 implosion-20080630-1 implosion-20080629-2 implosion-20080628-4 implosion-20080627-1 implosion-20080626-0 implosion-20080625-0 implosion-20080619-3
[ -z "$VERSION" ] &&
 VERSION=( photon-20080719-0 photon-20080718-0 photon-20080715-0 photon-20080713-0 photon-20080712-2 photon-20080712-1 photon-20080711-1 implosion-20080709-0 implosion-20080708-1 implosion-20080707-1 implosion-20080704-0 implosion-20080704-4 implosion-20080702-1 implosion-20080701-6 implosion-20080630-1 implosion-20080629-2 implosion-20080628-4 implosion-20080627-1 implosion-20080626-0 implosion-20080625-0 implosion-20080619-3 )
       url http://sorcerer.silverice.org/download/sorcery/
       URL=http://sorcerer.silverice.org/download/sorcery/
    source sorcery-$VERSION.tar.bz2
    SOURCE=sorcery-$VERSION.tar.bz2

   require bash bzip2 curl dialog diffutils file findutils gcc grep grimoire gzip init-scripts less make mktemp p7zip patch procps rpmunpack sorcery-clean sorcery-sentinel tar which
  optional ccache            '' '' for faster compilation when updating installed software
  optional sdelta3           '' '' for downloading tiny source tarball patches
  optional sorcery-alien     '' '' for monthly tracking of installed alien files
  optional sorcery-backup    '' '' for monthly filesystem backup
  optional sorcery-bgz       '' '' for background compression of tarballs
  optional sorcery-bootblaze '' '' for faster booting and login
  optional sorcery-defrag    '' '' for monthly file defragment
  optional sorcery-immune    '' '' for an immune system
  optional sorcery-md5sum    '' '' for weekly md5sum check of installed files

  category utility
 attribute archive_off solo sorcery

  homepage http://sorcerer.silverice.org/
   exclude /dev
   exclude /etc/sorcery/local.config
   exclude /home
   exclude /proc
   exclude /root
   exclude /tmp
   exclude /usr/src/sorcery
   exclude /var/cache
   exclude /var/lock
   exclude /var/run
   exclude /var/spool
   exclude /var/state
   exclude /var/tmp
   protect /etc/sorcery/config
   protect /etc/sorcery/dialogrc
   protect /etc/sorcery/log/history
   protect /etc/sorcery/log/snap
   protect /usr/libexec/sorcery/augur
   protect /usr/libexec/sorcery/cast
   protect /usr/libexec/sorcery/dispel
   protect /usr/libexec/sorcery/leech
   protect /usr/libexec/sorcery/share
   protect /usr/libexec/sorcery/sorcery
   protect /usr/sbin/augur
   protect /usr/sbin/cast
   protect /usr/sbin/dispel
   protect /usr/sbin/leech
   protect /usr/sbin/sorcery
  estimate 20
      desc 'sorcery contains source management tools.
augur   - provides detailed information about the box
cast    - installs spells
dispel  - removes installed spells
leech   - downloads sources for spells
sorcery - menu driven source manager'

build(){
 [  -x   install ] &&
 prepare_install   &&
 ./install $VERSION
}


post_install(){

 missing_init_script(){
  find  $VERSION_LOGS -type f -printf '%f\n' |
  while read
  do    [ -d $GRIMOIRE/$REPLY.d/init.d.on ] &&
        find $GRIMOIRE/$REPLY.d/init.d.on -type f -printf '%f\n'
  done  |
  while read
  do    [ -f /etc/init.d/$REPLY ] || echo "$REPLY"
  done  |
  while read
  do    find $GRIMOIRE/*.d/init.d.on/$REPLY -type f
  done  |
  sed   "s:$GRIMOIRE/::;s:\.d/.*::" |
  pipe_queue $CAST_QUEUE com
 }

 move_ldd_logs(){
  [ -d /etc/sorcery/log/elf ] && return
  mv          /etc/sorcery/log/ldd /etc/sorcery/log/elf
  grep -lr  '^/etc/sorcery/log/ldd' $INSTALL_LOGS | xargs -r --max-lines=2048 \
  sed  -i 's:^/etc/sorcery/log/ldd:/etc/sorcery/log/elf:'
 }

 make_progress(){
  if [ -d ${PROGRESS_LOGS:=/etc/sorcery/log/progress} ]; then return; fi
  mkdir -p $PROGRESS_LOGS
  [ -d /etc/sorcery/log/hold ] &&
  find /etc/sorcery/log/hold -type f -printf '%f\n' |
  while read; do installed_version $REPLY > $PROGRESS_LOGS/$REPLY; done
  [ -d /etc/sorcery/log/sold ] &&
  find /etc/sorcery/log/sold -type f -printf '%f\n' |
  while read; do echo secure > $PROGRESS_LOGS/$REPLY; done
  [ -d /etc/sorcery/log/exile ] &&
  find /etc/sorcery/log/exile -type f -printf '%f\n' |
  while read; do echo exile > $PROGRESS_LOGS/$REPLY; done
 }

 remove_old_logs(){
  rm -fr /etc/sorcery/log/{id,{boot,xinetd}.{on,off}}
  rm -fr /etc/sorcery/log/{exile,hold,sold}
 }

 discard_old_index(){
  . /etc/sorcery/config
  merge_grimoires
  generate_index   
 }

 fix_elf_logs(){
  mkdir_p ${ELF_LOGS:=/etc/sorcery/log/elf}

  [ -d /etc/sorcery/log/ldd ] &&
  find /etc/sorcery/log/ldd -type f |
  while read; do
   mv $REPLY $ELF_LOGS
   sed -i "s:/etc/sorcery/log/ldd/:/etc/sorcery/log/elf/:" $INSTALL_LOGS/${REPLY##*/}
  done &&
  rm -fr /etc/sorcery/log/ldd

  find $ELF_LOGS -type f |
  while read; do
   read ONE TWO < $REPLY
   if [ -n "$ONE" ]; then
      [ -n "$TWO" ] || elf_of "${REPLY##*/}" > $REPLY
   fi
  done
 }

 [  -d  /lib.old/modules ] &&
 rm -fr /lib.old

 [  -f  /etc/sorcery/log/version/install ] ||
 rm -fr /boot/isolinux

 #missing_init_script
 move_ldd_logs
 discard_old_index
 make_progress
 remove_old_logs
## uncomment fix_elf_logs when they should be fixed
## because the box went too long without updates.
#fix_elf_logs
 default_post_install
}
