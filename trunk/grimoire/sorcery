  stable implosion-20080703-3 implosion-20080702-1 implosion-20080701-6 implosion-20080630-1 implosion-20080629-2 implosion-20080628-4 implosion-20080627-1 implosion-20080626-0 implosion-20080625-0 implosion-20080619-3 implosion-20080617-1 implosion-20080616-1 implosion-20080603-1
[ -n "$VERSION" ] ||
 VERSION=( implosion-20080703-3 implosion-20080702-1 implosion-20080701-6 implosion-20080630-1 implosion-20080629-2 implosion-20080628-4 implosion-20080627-1 implosion-20080626-0 implosion-20080625-0 implosion-20080619-3 implosion-20080617-1 implosion-20080616-1 implosion-20080603-1 )
  CATEGORY='utility'
 ATTRIBUTE='archive_off solo sorcery'
    SOURCE="sorcery-$VERSION.tar.bz2"
  HOMEPAGE='http://sorcerer.silverice.org/'
       URL='http://sorcerer.silverice.org/download/sorcery/'
       REQ=( 'bash bzip2 curl dialog diffutils file findutils gcc grep grimoire gzip init-scripts less make mktemp p7zip patch procps rpmunpack sorcery-clean sorcery-sentinel tar which'
             'ccache:::for faster compilation when updating installed software'
             'sdelta3:::for downloading tiny source tarball patches'
             'sorcery-alien:::for monthly tracking of installed alien files'
             'sorcery-backup:::for monthly filesystem backup'
             'sorcery-bgz:::for background compression of tarballs'
             'sorcery-bootblaze:::for faster booting and login'
             'sorcery-defrag:::for monthly file defragment'
             'sorcery-immune:::for an immune system'
             'sorcery-md5sum:::for weekly md5sum check of installed files' )
   EXCLUDE='/etc/sorcery/local.config
            /home
            /proc
            /root
            /tmp
            /usr/src/sorcery
            /var/cache
            /var/lock
            /var/run
            /var/spool
            /var/state
            /var/tmp'
   PROTECT='/dev
            /etc/sorcery/config
            /etc/sorcery/dialogrc
            /etc/sorcery/log/history
            /etc/sorcery/log/snap
            /usr/libexec/sorcery/augur
            /usr/libexec/sorcery/cast
            /usr/libexec/sorcery/dispel
            /usr/libexec/sorcery/leech
            /usr/libexec/sorcery/share
            /usr/libexec/sorcery/sorcery
            /usr/sbin/augur
            /usr/sbin/cast
            /usr/sbin/dispel
            /usr/sbin/leech
            /usr/sbin/sorcery'
  ESTIMATE='20'
      DESC='sorcery contains source management tools.
augur   - provides detailed information about the box
cast    - installs spells
dispel  - removes installed spells
leech   - downloads sources for spells
sorcery - menu driven source manager'

build(){
 [  -x   install ] &&
 prepare_install   &&
 ./install $VERSION
}


post_install(){

 missing_init_script(){
  find  $VERSION_LOGS -type f -printf '%f\n' |
  while read
  do    [ -d $GRIMOIRE/$REPLY.d/init.d.on ] &&
        find $GRIMOIRE/$REPLY.d/init.d.on -type f -printf '%f\n'
  done  |
  while read
  do    [ -f /etc/init.d/$REPLY ] || echo "$REPLY"
  done  |
  while read
  do    find $GRIMOIRE/*.d/init.d.on/$REPLY -type f
  done  |
  sed   "s:$GRIMOIRE/::;s:\.d/.*::" |
  pipe_queue $CAST_QUEUE com
 }

 move_ldd_logs(){
  [ -d /etc/sorcery/log/elf ] && return
  mv          /etc/sorcery/log/ldd /etc/sorcery/log/elf
  grep -lr  '^/etc/sorcery/log/ldd' $INSTALL_LOGS | xargs -r --max-lines=2048 \
  sed  -i 's:^/etc/sorcery/log/ldd:/etc/sorcery/log/elf:'
 }

 make_progress(){
  if [ -d ${PROGRESS_LOGS:=/etc/sorcery/log/progress} ]; then return; fi
  mkdir -p $PROGRESS_LOGS
  [ -d /etc/sorcery/log/hold ] &&
  find /etc/sorcery/log/hold -type f -printf '%f\n' |
  while read; do installed_version $REPLY > $PROGRESS_LOGS/$REPLY; done
  [ -d /etc/sorcery/log/sold ] &&
  find /etc/sorcery/log/sold -type f -printf '%f\n' |
  while read; do echo secure > $PROGRESS_LOGS/$REPLY; done
  [ -d /etc/sorcery/log/exile ] &&
  find /etc/sorcery/log/exile -type f -printf '%f\n' |
  while read; do echo exile > $PROGRESS_LOGS/$REPLY; done
 }

 remove_old_logs(){
  rm -fr /etc/sorcery/log/{id,{boot,xinetd}.{on,off}}
  rm -fr /etc/sorcery/log/{exile,hold,sold}
 }

 discard_old_index(){
  if ! [ -d ${PROGRESS_LOGS:=/etc/sorcery/log/progress} ]; then
   . /etc/sorcery/config
   merge_grimoires
   generate_index   
  fi
 }

 fix_elf_logs(){
  mkdir_p ${ELF_LOGS:=/etc/sorcery/log/elf}

  [ -d /etc/sorcery/log/ldd ] &&
  find /etc/sorcery/log/ldd -type f |
  while read; do
   mv $REPLY $ELF_LOGS
   sed -i "s:/etc/sorcery/log/ldd/:/etc/sorcery/log/elf/:" $INSTALL_LOGS/${REPLY##*/}
  done &&
  rm -fr /etc/sorcery/log/ldd

  find $ELF_LOGS -type f |
  while read; do
   read ONE TWO < $REPLY
   if [ -n "$ONE" ]; then
      [ -n "$TWO" ] || elf_of "${REPLY##*/}" > $REPLY
   fi
  done
 }

 [  -d  /lib.old/modules ] &&
 rm -fr /lib.old

 [  -f  /etc/sorcery/log/version/install ] ||
 rm -fr /boot/isolinux

 #missing_init_script
 move_ldd_logs
 discard_old_index
 make_progress
 remove_old_logs
 fix_elf_logs
 default_post_install
}
