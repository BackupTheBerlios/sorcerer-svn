# avahi correctly uses pkgconfig files to locate install locations for:
# qt-x11-free and qt-x11-opensource
# avahi-autoipd if started should be started from a template
# provided by networks rather than a separate init script
# since the purpose of avahi-autoipd is to automatically assign
# an IP address to a network interface.
# 0.6.21 may have acquired a requirement on libcap

    stable 0.6.23 0.6.22 0.6.21 0.6.20
   require dbus libcap libdaemon libglade intltool
  optional gtk+              '' --disable-gtk for gtk+ integration
  optional qt-x11-free       '' --disable-qt3 for Qt3 mainloop integration
  optional qt-x11-opensource '' --disable-qt4 for Qt4Core mainloop integration
  category utility
 attribute library
    source http://avahi.org/download/avahi-$VERSION.tar.gz
  homepage http://avahi.org/
      opts --with-distro=none --disable-mono --disable-python --disable-static --enable-compat-libdns_sd

#      opts --disable-qt4 --with-distro=none --disable-mono --disable-python --disable-static --enable-compat-libdns_sd
# --enable-compat-libdns_sd
# The above switch added so kdelibs can use avahi for zeroconf
# instead of mDNSResponder
  eprovide mDNSResponder
  estimate 1800
 conflicts howl
      desc 'avahi is a library and daemon for Multicast DNS Service Discovery.
It may also be called zeroconf.
It allows programs to publish and discover services
running on a local network with no specific configuration.
For example, you can plug into a network and instantly
find printers to print to, files to look at, and people to talk to.'

build(){
mkdir    -pm 755 /var/empty
groupadd -K GID_MIN=256 -K GID_MAX=511    avahi                     2>/dev/null
useradd  -K UID_MIN=256 -K UID_MAX=511 -g avahi -d /var/empty avahi 2>/dev/null

default_build
}

current(){
 local REPLY
 case $VERSION in
  0.6.22) # Required for rolling back dbus to 2006 stable release.
   read < $VERSION_LOGS/dbus
   if   [ "$REPLY" == "1.0.2" ]
   then grep  -q  '^dbus	1.0.2' $SNAP_LOGS/avahi
   fi ;;
 esac
}
