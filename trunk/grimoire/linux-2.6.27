    stable 2.6.27.53 2.6.27.48 2.6.27.47 2.6.27.46 2.6.27.45 2.6.27.44 2.6.27.43 2.6.27.42 2.6.27.41 2.6.27.40 2.6.27.39 2.6.27.38 2.6.27.37 2.6.27.36 2.6.27.35 2.6.27.34 2.6.27.33 2.6.27.32 2.6.27.31 2.6.27.30 2.6.27.29 2.6.27.28 2.6.27.27 2.6.27.26 2.6.27.25 2.6.27.24 2.6.27.23 2.6.27.22 2.6.27.21 2.6.27.20 2.6.27.19 2.6.27.18 2.6.27.17 2.6.27.16 2.6.27.15 2.6.27.14 2.6.27.13 2.6.27.12 2.6.27.11 2.6.27.10 2.6.27.9 2.6.27.8 2.6.27.7 2.6.27.6 2.6.27.5 2.6.27.4 2.6.27.3 2.6.27.2 2.6.27.1 2.6.27
   require initramfs lilo module-init-tools
  category kernel
 attribute console
case $VERSION in
 *rc*) source $KERNEL_URL pub/linux/kernel/v${VERSION:0:3}/testing/linux-$VERSION.tar.bz2 ;;
    *) source $KERNEL_URL pub/linux/kernel/v${VERSION:0:3}/linux-$VERSION.tar.bz2 ;;
esac
  homepage http://www.kernel.org
   protect /boot
   protect /lib/modules
  eprovide linux-kernel
  estimate 14000
      desc '2.6.27.x stable kernels'

build(){
 backup_modules(){
  if [ -d  /lib/modules/$VERSION ]; then
  rm   -rf /lib/modules/$VERSION.old
  cp   -a  /lib/modules/$VERSION \
           /lib/modules/$VERSION.old
  fi
 }

 install_kernel(){
  SM="System.map"
  BV="${VERSION}"
  BZ=$( find . -type f -name bzImage )

  rm    -rf               $DESTDIR/boot/$BV
  mkdir -p                $DESTDIR/boot/$BV
  cp       $BZ            $DESTDIR/boot/$BV/linux
  chmod 600               $DESTDIR/boot/$BV/linux
  cp           System.map $DESTDIR/boot/$BV
  rm    -f                $DESTDIR/boot/System.map
  ln    -s $BV/System.map $DESTDIR/boot/System.map
 }

 install_header(){
  mkdir   -vm 755 -p                                   $DESTDIR/usr/include/{asm,linux}
  install -vm 644 include/asm/asm-offsets.h            $DESTDIR/usr/include/asm
  install -vm 644 include/linux/{autoconf.h,compile.h} $DESTDIR/usr/include/linux
  true
 }

 restore_linux_configs(){
  local NOSMP

  if   ! LC_ALL=C grep -q 'processor.*1' /proc/cpuinfo
  then NOSMP=-nosmp
  fi

  if   [ -d /boot/isolinux ]
  then local MAC="$HOSTTYPE"; NOSMP=
  else local MAC="$( uname -m )"
  fi

  if   [ "$MAC" == x86_64 ]
  then NOSMP=
  fi

  CVER="$( echo "$VERSION" | cut -d '.' -f1-3 )"

  if   [ -f            $SCRIPT_DIR/$MAC-$CVER$NOSMP ]
  then install -vm 600 $SCRIPT_DIR/$MAC-$CVER$NOSMP .config
  else install -vm 600 $SCRIPT_DIR/i586-$CVER-nosmp .config
  fi
 }

 gzip_modules(){
  local KO="$DESTDIR/lib/modules/$VERSION/kernel/"
  find $KO -type f -size +4096c | xargs -r --max-lines=64 gzip -v1
  find $KO -type f              | sed   -n '/\.gz$/p' |
  while read; do mv -v "$REPLY" "${REPLY%\.gz}"; done
 }

 strip_modules(){
  find $DESTDIR/lib/modules/$VERSION/kernel -type f -name \*.ko |
  xargs --max-lines=256 strip --strip-unneeded
 }

 compile_and_install(){
  restore_linux_configs
  yes "" | make oldconfig
  make modules          &&
  make bzImage          &&
  make modules_install  INSTALL_MOD_PATH=$DESTDIR && strip_modules &&
  make firmware_install INSTALL_MOD_PATH=$DESTDIR &&
  install_kernel        &&
  install_header
 }

 rm -fr        /usr/src/linux &&
 mv $BUILD_DIR /usr/src/linux &&
 cd            /usr/src/linux &&
 compile_and_install
}


post_install(){
 update_etc_lilo_conf

 if   [[ -x /usr/bin/mail  ]]; then MAILER=/usr/bin/mail
 elif [[ -x /usr/bin/mailx ]]; then MAILER=/usr/bin/mailx
 fi

 if   [[ -n $MAILER   ]] &&
      [[ -n $SORCERER ]]
 then
  echo    -e "New linux kernel installed.\nReboot the box, please." |
  $MAILER -s "Reboot reminder from sorcery." $SORCERER
 fi

 grep -lr   '^/lib/modules/' $INSTALL_LOGS |
 sed        "s:.*[/]::;/^$/d;/^$SPELL$/d"  |
 pipe_queue "$CAST_QUEUE" com

 rm -rf /boot/fast
 true
}
