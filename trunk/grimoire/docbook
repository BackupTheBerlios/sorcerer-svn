if [ $SPELL == docbook ]; then
   version stable 4.x
fi
   require libxslt unzip
  category archive_off documentation profile
 attribute data solo
      info home  http://www.docbook.org/
      info docs  http://www.docbook.org/docs/
#  protect /etc/xml
      desc "$SPELL docbook standards."

if [ $SPELL == docbook ]; then
 attribute data profile
   require libxslt unzip
  optional docbook-xml-5.0   '' '' for XML DTD
  optional docbook-xml-4.5   '' '' for XML DTD
  optional docbook-sgml-4.5  '' '' for SGML DTD
  optional docbook-xml-4.4   '' '' for XML DTD
  optional docbook-sgml-4.4  '' '' for SGML DTD
  optional docbook-xml-4.3   '' '' for XML DTD
  optional docbook-sgml-4.3  '' '' for SGML DTD
  optional docbook-xml-4.2   '' '' for XML DTD
  optional docbook-sgml-4.2  '' '' for SGML DTD
  optional docbook-xml-4.1.2 '' '' for XML DTD
  optional docbook-xsl       '' '' for XSL stylesheets
else

case ${SPELL:8:3} in
 sgm) VERSION="${SPELL:13:5}" ;;
 xml) VERSION="${SPELL:12:5}" ;;
esac

case ${SPELL:8:9} in
 sgml-4.1)   source http://www.docbook.org/sgml/$VERSION/docbk41.zip ;;
 sgml-*)     source http://www.docbook.org/sgml/$VERSION/docbook-$VERSION.zip ;;
  xml-4.1.2) source http://www.docbook.org/xml/$VERSION/docbkx412.zip ;;
  xml-4.*)   source http://www.docbook.org/xml/$VERSION/docbook-xml-$VERSION.zip ;;
  xml-*)     source http://www.docbook.org/xml/$VERSION/docbook-$VERSION.zip ;;
  xsl*) ;;
esac

fi

build(){
 local  WHAT="$( echo "$SPELL" | cut -d '-' -f2  )"

 # Adjusting install location to where kdelibs-v4 expects to find it.
 # see kdelibs-4.5.0/cmake/modules/FindDocBookXML.cmake
 # see kdelibs-4.5.0/cmake/modules/FindDocBookXSL.cmake

 case $WHAT in
  xml) WHAT=xml-dtd; local WHERE=/usr/share/xml/docbook/$WHAT-$VERSION ;;
  xsl) WHAT=xsl;     local WHERE=/usr/share/xsl/docbook ;;
    *)               local WHERE=/usr/share/xml/docbook/$WHAT/$VERSION ;;
 esac


 if   [ $SPELL == docbook ]
 then echo "Profile $SPELL installed."; return
 fi

 if ! [ -f catalog.xml ] &&
      [ -f docbook.cat ]; then
  xmlcatalog --noout --create catalog.xml
  grep PUBLIC docbook.cat |
  sed "s: \":\t:g"        |
  tr  -d  '"'             |
  while IFS="$TAB$ENTER" read PUB       ORIG    REPLACE
  do  xmlcatalog -noout -add "public" "$ORIG" "$REPLACE" catalog.xml
  done
 fi

 if [ -f catalog.xml ]; then
  local  URI="http://www.oasis-open.org/docbook/$WHAT/$VERSION"
  sed  -i  "s,uri=\",uri=\"file://$WHERE/,"                       catalog.xml
  xmlcatalog --noout --add "rewriteSystem" "$URI" "file://$WHERE" catalog.xml
  xmlcatalog --noout --add "rewriteURI"    "$URI" "file://$WHERE" catalog.xml
 fi

 if  [[ ${SPELL:0:11} == docbook-xsl ]]; then
  local  URI="http://docbook.sourceforge.net/release/xsl/$version"
  local  CRI="http://docbook.sourceforge.net/release/xsl/current"
  rm         -f                                                   catalog.xml
  xmlcatalog --noout --create                                     catalog.xml
  xmlcatalog --noout --add "rewriteURI"    "$URI" "file://$WHERE" catalog.xml
  xmlcatalog --noout --add "rewriteSystem" "$URI" "file://$WHERE" catalog.xml
  xmlcatalog --noout --add "rewriteSystem" "$CRI" "file://$WHERE" catalog.xml
  xmlcatalog --noout --add "rewriteURI"    "$CRI" "file://$WHERE" catalog.xml
 fi

 mkdir -pvm 755 $DESTDIR/$WHERE &&
 cp    -rv *    $DESTDIR/$WHERE
}


post_install(){
 create_root_catalog(){
  local ROOTCATALOG=/etc/xml/catalog
  local CATALOG=/etc/xml/docbook
  local WHERE="file://$CATALOG"
  local  ORUL="http://www.oasis-open.org/docbook/"
  local   XCP="--noout --add"

  mkdir -pvm 755 /etc/xml
  rm -f $ROOTCATALOG
  xmlcatalog --noout --create $ROOTCATALOG
  xmlcatalog $XCP "delegatePublic" "-//OASIS//ENTITIES DocBook XML"  "$WHERE" $ROOTCATALOG
  xmlcatalog $XCP "delegatePublic" "-//OASIS//DTD DocBook XML"       "$WHERE" $ROOTCATALOG
  xmlcatalog $XCP "delegateSystem" "$OURL"         "$WHERE" $ROOTCATALOG
  xmlcatalog $XCP "delegateURI"    "$OURL"         "$WHERE" $ROOTCATALOG
  xmlcatalog $XCP "delegatePublic" "ISO 8879:1986" "$WHERE" $ROOTCATALOG
}


update_docbook_catalog(){
 local CATALOG=/etc/xml/docbook

 mkdir -pvm 755 /etc/xml
 rm    -f       /etc/xml/docbook
 xmlcatalog --noout --create $CATALOG
 sed   -i  "s:/>:>:"         $CATALOG
 grep  -v -h  "xml version\|catalog xmlns\|/catalog" \
       $( find /usr/share/xml/docbook \
               /usr/share/xsl/docbook \
               -type f -name catalog.xml ) |
 tr    -d   '\n'         |
 sed   "s:>:>\n:g"       |
 sed   "s: *uri=: uri=:" |
 grep  -v  "<\!--" >> $CATALOG
 echo "</catalog>" >> $CATALOG
}

 update_docbook_catalog
 cp /etc/xml/docbook /etc/xml/catalog

# create_root_catalog does not work properly
# but copying the docbook catalog works
#create_root_catalog
}
