#!/bin/bash
# Copyright 2011 2012 by Kyle Sallee,
# All rights reserved.
# For use with the Sorcerer distribution only.

# sentinel-resume periodically checks and resumes processing 
# of delayed or paused spells to avert intentional and unintentional stalls.

cgroup_load(){
 if   [ -f /lib/cgroup/functions ]
 then .    /lib/cgroup/functions
 fi
}

thaw(){
 find $CG/slow/sorcery/cast -name freezer.state -type f -mmin +480 |
 xargs -r --max-lines=64 grep -lr FROZEN |
 while read; do echo THAWED > "$REPLY"; done
}

tools(){
 pgrep -u root "^cast$"
 pgrep -u root "^dispel$"
 pgrep -u root "^leech$"
 pgrep -u root "^oust$"
 pgrep -u root "^provision$"
 pgrep -u root "^reuse$"
 pgrep -u root "^rush$"
}

queued(){
  [ -d $q ] &&
  find $q/{cast,dispel,leech,oust,provision,reuse,rush} \
       -mindepth 1 -maxdepth 1 -type f
}

pending(){ [ -n "$( queued )" ]; }
idle(){    [ -z "$( tools  )" ]; }
stalled(){ pending && idle; }
unstall(){ if stalled; then augur begin </dev/null & fi; }
scan(){ thaw; unstall; }

main(){
 sleep 120; scan
 while sleep 300; do scan; done
}

if   [[     -x /usr/libexec/bash/sleep ]]
then enable -f /usr/libexec/bash/sleep sleep
fi

q=/var/log/sorcery/queue
CG=
cgroup_load
cgroup_find
main </dev/null &>/dev/null &
exit 0
