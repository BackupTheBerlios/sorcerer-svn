#!/bin/bash
# Copyright 2011 by Kyle Sallee,
# All rights reserved.
# For use with the Sorcerer distribution only.

# sentinel-resume periodically checks and resumes processing 
# of delayed or paused spells to avert intentional and unintentional stalls.

cgroup_load(){
 if   [ -f /lib/cgroup/functions ]
 then .    /lib/cgroup/functions
 fi
}

thaw(){
 if [ -d /root/.sorcery/queue/cast ]; then
  find   /root/.sorcery/queue/cast/ -not -empty -mmin +480 -type f -printf "%f\n" |
  while read SPELL; do
   if   [ -f   $CG/sorcery/cast/$SPELL ] &&
        find   $CG/sorcery/cast/$SPELL/freezer.state -mmin +480 | grep -q .
   then read < $CG/sorcery/cast/$SPELL/freezer.state
    if   [[   FROZEN == $REPLY ]]
    then echo THAWED > $CG/sorcery/cast/$SPELL/freezer.state
    fi
   fi
  done
 fi
}

stalled(){
 if   [ -d          /root/.sorcery/queue/$1 ] &&
      [ -n "$( find /root/.sorcery/queue/$1 -maxdepth 1 -type f -mmin +1 )" ]
 then ! pgrep -u root "^$1$"
 else return 1
 fi
}

scan(){
 # cast might be waiting for a source to download.
 thaw
 if   stalled leech || stalled cast
 then augur begin </dev/null &
 fi
}

main(){
 sleep 120; scan
 while sleep 300; do scan; done
}

if   [[     -x /usr/libexec/bash/sleep ]]
then enable -f /usr/libexec/bash/sleep sleep
fi

CG=
cgroup_load
cgroup_find
main </dev/null &>/dev/null &
exit 0
