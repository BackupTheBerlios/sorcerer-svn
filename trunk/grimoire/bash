    stable 3.2.039 3.2.033 3.2.025 3.2.017 3.2.010 3.1.017 3.2 3.1 3.0.016 3.0
   require ncurses readline
  category development/interpreter utility/shell
 attribute console solo
    source bash-${VERSION:0:3}.tar.gz
       url "ftp://ftp.cwru.edu/pub/bash/
            ftp://ftp.gnu.org/pub/gnu/bash/"
       url "ftp://ftp.cwru.edu/pub/bash/bash-${VERSION:0:3}-patches/"
  case $VERSION in
    3.[1-2].*)  PATCHES=${VERSION:5:2}
      for  ((SCX=1; SCX < 10; SCX++))
      do   source bash${VERSION:0:1}${VERSION:2:1}-00$SCX
      done
      for  ((SCX=10; SCX <= PATCHES; SCX++))
      do   source bash${VERSION:0:1}${VERSION:2:1}-0$SCX
      done ;;
  esac
  homepage http://cnswww.cns.cwru.edu/~chet/bash/bashtop.html
    CFLAGS='-O3'
   LDFLAGS='-Wl,-O1'
     SHBIN='/bin/bash
            /bin/sh'
   protect /bin/bash
   protect /bin/sh
   exclude /etc/shells
  estimate 1100
 freshmeat gnubash
      desc 'bash is the shell of the GNU operating system.
Bash is an sh-compatible shell that incorporates useful
features from the Korn shell (ksh) and C shell (csh).
It is intended to conform to the
IEEE POSIX P1003.2/ISO 9945.2 Shell and Tools standard.
It offers functional improvements over sh for both
programming and interactive use; these include command
line editing, unlimited size command history, job control,
shell functions and aliases, indexed arrays of unlimited size,
and integer arithmetic in any base from two to sixty-four.
In addition, most sh scripts can be run by Bash without modification.'


build(){
 install_loadables(){
  install -vdm 755 /usr/libexec/bash
  cd  examples/loadables
  for FILE in *.c
  do  make             ${FILE%.c}
      install -vsm 755 ${FILE%.c} /usr/libexec/bash
  done
  true
 }

 install_etc(){
  cp      -va     $SCRIPT_DIR/bash.d  /etc
  install -vm 755 -d                  /etc/skel
  install -vm 644 $SCRIPT_DIR/profile /etc
  install -vm 644 $SCRIPT_DIR/profile /etc/skel/.bashrc
  install -vm 644 $SCRIPT_DIR/profile /etc/skel/.bash_profile
  install -vm 644 $SCRIPT_DIR/logout  /etc/skel/.bash_logout
 }


 CX=1
 while [ -n "${SOURCE[$CX]}" ]; do
  patch -p0 < $SOURCE_CACHE/$SPELL/$VERSION/${SOURCE[$CX]}
  (( CX++ ))
 done


 [ -d /boot/isolinux ] ||
 BUILD="$( uname -m )-${MACHTYPE#*-}"

 case $BUILD in
  *-uclibc) grep -q        uclibc    support/config.sub ||
            sed  -i "s:gnu:uclibc:g" support/config.sub ;;
 esac

 ./configure               \
 --build=$BUILD            \
 --prefix=/usr             \
 --bindir=/bin             \
 --with-installed-readline \
 --with-curses             \
 $OPTS                     &&
 make                      &&
 prepare_install           &&
 make    install           &&
 ln -sf bash /bin/sh       &&
 install_loadables         &&
 install_etc
}
