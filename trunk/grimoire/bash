# 4.2 seems to have a bug that becomes evident
# from the odd installation of xterm.

   version stable 4.1.009 4.1.007 4.1.002 4.1
   version latest 4.2
   require readline
  category development/interpreter utility/shell
 attribute console makej solo
    source ftp://ftp.cwru.edu/pub/bash/ ftp://ftp.gnu.org/pub/gnu/bash/ bash-${VERSION:0:3}.tar.gz

  case $VERSION in
    4.1.*) PATCHES=${VERSION:6:1}
      for  ((SCX=1; SCX <= PATCHES; SCX++))
      do   source ftp://ftp.cwru.edu/pub/bash/ \
                  ftp://ftp.gnu.org/pub/gnu/bash/ \
                  bash-${VERSION:0:3}-patches/bash${VERSION:0:1}${VERSION:2:1}-00$SCX
      done ;;
  esac

      info home  http://cnswww.cns.cwru.edu/~chet/bash/bashtop.html
      info docs  http://tiswww.case.edu/php/chet/bash/bashref.html

    CFLAGS='-O3'
   LDFLAGS='-Wl,-O1'
     SHBIN='/bin/bash
            /bin/sh'
   protect /bin/bash
   protect /bin/sh
   exclude /etc/shells
  estimate 1000
 freshmeat gnubash
      desc 'the bourne again shell
Bash is an sh-compatible shell that incorporates useful
features from the Korn shell (ksh) and C shell (csh).
It is intended to conform to the
IEEE POSIX P1003.2/ISO 9945.2 Shell and Tools standard.
It offers functional improvements over sh for both
programming and interactive use; these include command
line editing, unlimited size command history, job control,
shell functions and aliases, indexed arrays of unlimited size,
/and integer arithmetic in any base from two to sixty-four.
In addition, most sh scripts can be run by Bash without modification.'


build(){
 install_loadables(){
  install -vdm 755 $DESTDIR/usr/libexec/bash
  cd  examples/loadables
  for FILE in *.c
  do  make             ${FILE%.c}
      install -vsm 755 ${FILE%.c} $DESTDIR/usr/libexec/bash
  done
  true
 }

 install_etc(){
  install -vm 755 -d                  $DESTDIR/etc/skel
  install -vm 644 $SCRIPT_DIR/profile $DESTDIR/etc
  install -vm 644 $SCRIPT_DIR/profile $DESTDIR/etc/skel/.bashrc
  install -vm 644 $SCRIPT_DIR/profile $DESTDIR/etc/skel/.bash_profile
  install -vm 644 $SCRIPT_DIR/logout  $DESTDIR/etc/skel/.bash_logout
 }


# added because old readline ELF libraries must be removed from the library cache
# as soon as new bash is compiled because new bash will contain symbols
# that will only resolve with readline 6.1
# However, now library cache will not prune while
# there are any installed spells with missing required ELF libraries.

 clear_library_cache(){
  case $VERSION in
   4.1) rm -f $LIBRARY_CACHE/libhistory.so* \
              $LIBRARY_CACHE/libreadline.so*
        ldconfig ;;
  esac
 }

# cast automatically patches it.
# CX=1
# while [[ -n  ${SOURCE[$CX]} ]]; do
#  patch -p0 < ${SOURCE[$CX]}
#  (( CX++ ))
# done


 if   [ -d /boot/isolinux ]
 then BUILD=$MACHTYPE
 else BUILD="$( uname -m )-${MACHTYPE#*-}"
 fi

 case $BUILD in
  *-uclibc) grep -q        uclibc    support/config.sub ||
            sed  -i "s:gnu:uclibc:g" support/config.sub ;;
 esac

 ./configure               \
 --build=$BUILD            \
 --prefix=/usr             \
 --bindir=/bin             \
 --with-installed-readline \
 --with-curses             \
 $OPTS                     &&
 make                      &&
 make install "DESTDIR=$DESTDIR" &&
 ln -sf bash  $DESTDIR/bin/sh    &&
 install_loadables         &&
 install_etc               &&
 clear_library_cache
}
