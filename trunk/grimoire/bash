   VERSION=( "3.1" "3.0.016" "3.0" "2.05b" "2.05a" )
  CATEGORY="shell"
 ATTRIBUTE="core console solo"
    SOURCE="bash-${VERSION:0:3}.tar.gz"
       URL=( "ftp://ftp.cwru.edu/pub/bash"
             "ftp://ftp.cwru.edu/pub/bash/bash-3.0-patches" )
  case  $VERSION  in
    3.0.*)  PATCHES=${VERSION:5:2}
            for  ((SCX=1; SCX < 10; SCX++))
            do   SOURCE[$SCX]="bash30-00$SCX"
            done
            for  ((SCX=10; SCX <= PATCHES; SCX++))
            do   SOURCE[$SCX]="bash30-0$SCX"
            done  ;;
  esac
  HOMEPAGE="http://cnswww.cns.cwru.edu/~chet/bash/bashtop.html"
       REQ=( "ncurses readline" )
#             ":--debugger::Enable debugging and extdebug shell option" )
     SHBIN="/bin/bash
            /bin/sh"
   PROTECT="/bin/bash
            /bin/sh"
   EXCLUDE="/etc/shells"
  ESTIMATE="372"
 FRESHMEAT="gnubash"
      DESC="bash is the shell of the GNU operating system.
Bash is an sh-compatible shell that incorporates useful
features from the Korn shell (ksh) and C shell (csh).
It is intended to conform to the
IEEE POSIX P1003.2/ISO 9945.2 Shell and Tools standard.
It offers functional improvements over sh for both
programming and interactive use; these include command
line editing, unlimited size command history, job control,
shell functions and aliases, indexed arrays of unlimited size,
and integer arithmetic in any base from two to sixty-four.
In addition, most sh scripts can be run by Bash without modification."


build() {
  install_loadables()  {
    install  -d       -m 0755              /usr/libexec/bash
    cd   examples/loadables
    for  FILE  in  *.c
    do   make                  ${FILE%.c}
         install  -s  -m 0755  ${FILE%.c}  /usr/libexec/bash
    done
    true
  }

  install_etc() {
    install  -d  -m 0755                   /etc/skel
    install  -m 0644  $SCRIPT_DIR/profile  /etc
    install  -m 0644  $SCRIPT_DIR/profile  /etc/skel/.bashrc
    install  -m 0644  $SCRIPT_DIR/profile  /etc/skel/.bash_profile
    install  -m 0644  $SCRIPT_DIR/logout   /etc/skel/.bash_logout
  }


  CX=1
  while  [   -n    "${SOURCE[$CX]}"  ]
  do  patch  -p0  <  $SOURCE_CACHE/$BSPELL/$VERSION/${SOURCE[$CX]}
        ((  CX++  ))
  done


  case  $VERSION  in
    3.0*)  patch  -p0  <  $SCRIPT_DIR/wcontinued.patch  ;;
  esac

  [  -d  /isolinux  ]  ||
  BUILD="$( arch )-pc-linux-gnu"

  ./configure                \
  --build=$BUILD             \
  --prefix=/usr              \
  --bindir=/bin              \
  --with-installed-readline  \
  --with-curses              \
  $OPTS                      &&
  make                       &&
  prepare_install            &&
  make    install            &&
  ln     -sf  bash  /bin/sh  &&
  install_loadables          &&
  install_etc
}


current()  {
  case  $VERSION  in   
    3.0.16)  grep  -qx  "patching file ../bash-3.0/tests/jobs4.sub"  $COMPILE_LOGS/bash  ;;
  esac
}
