Index: libapache2-mod-perl2/Makefile.PL
===================================================================
--- libapache2-mod-perl2.orig/Makefile.PL	2007-10-30 09:36:28.000000000 +0100
+++ libapache2-mod-perl2/Makefile.PL	2007-10-30 09:43:38.000000000 +0100
@@ -738,7 +738,9 @@
     ModPerl::MM::add_dep_after(\$string, qw(install doc_install modperl_banner));
 
     # glue_pods target must come first
-    ModPerl::MM::add_dep(\$string, pure_install => 'glue_pods');
+    ModPerl::MM::add_dep(\$string, pure_perl_install => 'glue_pods');
+    ModPerl::MM::add_dep(\$string, pure_site_install => 'glue_pods');
+    ModPerl::MM::add_dep(\$string, pure_vendor_install => 'glue_pods');
 
     $string;
 }
Perl 5.9.x fixes from upstream SVN r480890, r480903, and r481237.

--- libapache2-mod-perl2.orig/src/modules/perl/mod_perl.c
+++ libapache2-mod-perl2/src/modules/perl/mod_perl.c
@@ -584,6 +584,15 @@
 
 static apr_status_t modperl_sys_term(void *data)
 {
+    /* PERL_SYS_TERM() needs 'my_perl' as of 5.9.5 */
+#ifdef USE_ITHREADS
+# if PERL_REVISION == 5 && \
+  ((PERL_VERSION == 9 && PERL_SUBVERSION > 4) || \
+   PERL_VERSION > 9)
+    modperl_cleanup_data_t *cdata = (modperl_cleanup_data_t *)data;
+    PerlInterpreter *my_perl = cdata == NULL ? NULL : (PerlInterpreter *)cdata->data;
+# endif
+#endif
     MP_init_status = 0;
     MP_threads_started = 0;
     MP_post_post_config_phase = 0;
--- libapache2-mod-perl2.orig/src/modules/perl/modperl_interp.h
+++ libapache2-mod-perl2/src/modules/perl/modperl_interp.h
@@ -36,16 +36,30 @@
  * cleaner solution. of course it must be really fast.
  */
 #ifndef HvPMROOT
+# if PERL_REVISION == 5 && \
+    ((PERL_VERSION == 9 && PERL_SUBVERSION > 4) || \
+    PERL_VERSION > 9)
 #define MP_THX_INTERP_GET(thx)                                  \
-    (modperl_interp_t *) ((XPVMG*)SvANY(*Perl_Imodglobal_ptr(thx)))->xmg_magic
+    (modperl_interp_t *) ((XPVMG*)SvANY(*Perl_Imodglobal_ptr(thx)))->xmg_u.xmg_magic
+# else
+#define MP_THX_INTERP_GET(thx)                                  \
+      (modperl_interp_t *) ((XPVMG*)SvANY(*Perl_Imodglobal_ptr(thx)))->xmg_magic
+# endif
 #else
 #define MP_THX_INTERP_GET(thx) \
     (modperl_interp_t *)HvPMROOT(*Perl_Imodglobal_ptr(thx))
 #endif
 
 #ifndef HvPMROOT
+# if PERL_REVISION == 5 && \
+    ((PERL_VERSION == 9 && PERL_SUBVERSION > 4) || \
+    PERL_VERSION > 9)
+#define MP_THX_INTERP_SET(thx, interp)                          \
+    ((XPVMG*)SvANY(*Perl_Imodglobal_ptr(thx)))->xmg_u.xmg_magic = (MAGIC*)interp
+# else
 #define MP_THX_INTERP_SET(thx, interp)                          \
     ((XPVMG*)SvANY(*Perl_Imodglobal_ptr(thx)))->xmg_magic = (MAGIC*)interp
+# endif
 #else
 #define MP_THX_INTERP_SET(thx, interp)                          \
     HvPMROOT(*Perl_Imodglobal_ptr(thx)) = (PMOP*)interp
# Stolen from upstream SVN revision 615751
# changes the way modperl stores its data within apache
# fixes FTBFS with perl 5.10
# http://bugs.debian.org/462994
Index: libapache2-mod-perl2/src/modules/perl/mod_perl.h
===================================================================
--- libapache2-mod-perl2.orig/src/modules/perl/mod_perl.h	2008-01-31 11:23:20.000000000 +0200
+++ libapache2-mod-perl2/src/modules/perl/mod_perl.h	2008-01-31 11:30:03.000000000 +0200
@@ -138,11 +138,6 @@
 int modperl_response_handler(request_rec *r);
 int modperl_response_handler_cgi(request_rec *r);
 
-/* betting on Perl*Handlers not using CvXSUBANY
- * mod_perl reuses this field for handler attributes
- */
-#define MP_CODE_ATTRS(cv) (CvXSUBANY((CV*)cv).any_i32)
-
 #define MgTypeExt(mg) (mg->mg_type == '~')
 
 typedef void MP_FUNC_NONSTD_T(modperl_var_modify_t) (apr_table_t *,
Index: libapache2-mod-perl2/src/modules/perl/modperl_mgv.c
===================================================================
--- libapache2-mod-perl2.orig/src/modules/perl/modperl_mgv.c	2008-01-31 11:23:20.000000000 +0200
+++ libapache2-mod-perl2/src/modules/perl/modperl_mgv.c	2008-01-31 11:30:03.000000000 +0200
@@ -271,7 +271,7 @@
     }
     else {
         if ((cv = get_cv(name, FALSE))) {
-            handler->attrs = (U32)MP_CODE_ATTRS(cv);
+            handler->attrs = *modperl_code_attrs(aTHX_ cv);
             handler->mgv_cv =
                 modperl_mgv_compile(aTHX_ p, HvNAME(GvSTASH(CvGV(cv))));
             modperl_mgv_append(aTHX_ p, handler->mgv_cv, GvNAME(CvGV(cv)));
@@ -334,7 +334,7 @@
             modperl_mgv_new_name(handler->mgv_obj, p, name);
         }
 
-        handler->attrs = (U32)MP_CODE_ATTRS(cv);
+        handler->attrs = *modperl_code_attrs(aTHX_ cv);
         /* note: this is the real function after @ISA lookup */
         handler->mgv_cv = modperl_mgv_compile(aTHX_ p, HvNAME(GvSTASH(gv)));
         modperl_mgv_append(aTHX_ p, handler->mgv_cv, handler_name);
Index: libapache2-mod-perl2/src/modules/perl/modperl_types.h
===================================================================
--- libapache2-mod-perl2.orig/src/modules/perl/modperl_types.h	2008-01-31 11:23:19.000000000 +0200
+++ libapache2-mod-perl2/src/modules/perl/modperl_types.h	2008-01-31 11:30:03.000000000 +0200
@@ -196,7 +196,7 @@
     const char *name; 
     CV *cv;
     U8 flags;
-    U32 attrs;
+    U16 attrs;
     modperl_handler_t *next;
 };
 
Index: libapache2-mod-perl2/src/modules/perl/modperl_util.c
===================================================================
--- libapache2-mod-perl2.orig/src/modules/perl/modperl_util.c	2008-01-31 11:23:20.000000000 +0200
+++ libapache2-mod-perl2/src/modules/perl/modperl_util.c	2008-01-31 11:31:22.000000000 +0200
@@ -902,4 +902,14 @@
 
     return retval ? SvREFCNT_inc(retval) : &PL_sv_undef;
 }
- 
+
+U16 *modperl_code_attrs(pTHX_ CV *cv) {
+    MAGIC *mg;    
+
+    if (!SvMAGICAL(cv)) {
+        sv_magic((SV*)cv, Nullsv, PERL_MAGIC_ext, NULL, -1); 
+    }
+
+    mg = mg_find((SV*)cv, PERL_MAGIC_ext);
+    return &(mg->mg_private);
+}
Index: libapache2-mod-perl2/src/modules/perl/modperl_util.h
===================================================================
--- libapache2-mod-perl2.orig/src/modules/perl/modperl_util.h	2008-01-31 11:23:20.000000000 +0200
+++ libapache2-mod-perl2/src/modules/perl/modperl_util.h	2008-01-31 11:30:03.000000000 +0200
@@ -149,4 +149,6 @@
 SV *modperl_pnotes(pTHX_ HV **pnotes, SV *key, SV *val,
                    request_rec *r, conn_rec *c);
 
+U16 *modperl_code_attrs(pTHX_ CV *cv);
+
 #endif /* MODPERL_UTIL_H */
Index: libapache2-mod-perl2/xs/Apache2/Filter/Apache2__Filter.h
===================================================================
--- libapache2-mod-perl2.orig/xs/Apache2/Filter/Apache2__Filter.h	2008-01-31 11:23:19.000000000 +0200
+++ libapache2-mod-perl2/xs/Apache2/Filter/Apache2__Filter.h	2008-01-31 11:30:03.000000000 +0200
@@ -86,9 +86,9 @@
     return len;
 }
 
-static MP_INLINE U32 *modperl_filter_attributes(SV *package, SV *cvrv)
+static MP_INLINE U16 *modperl_filter_attributes(pTHX_ SV *package, SV *cvrv)
 {
-    return (U32 *)&MP_CODE_ATTRS(SvRV(cvrv));
+    return modperl_code_attrs(aTHX_ (CV*)SvRV(cvrv));
 }
 
 #ifdef MP_TRACE
@@ -118,7 +118,7 @@
 MP_STATIC XS(MPXS_modperl_filter_attributes)
 {
     dXSARGS;
-    U32 *attrs = modperl_filter_attributes(ST(0), ST(1));
+    U16 *attrs = modperl_filter_attributes(aTHX_ ST(0), ST(1));
     I32 i;
 #ifdef MP_TRACE
     HV *stash = gv_stashsv(ST(0), TRUE);
Index: libapache2-mod-perl2/xs/tables/current/ModPerl/FunctionTable.pm
===================================================================
--- libapache2-mod-perl2.orig/xs/tables/current/ModPerl/FunctionTable.pm	2007-08-21 13:16:33.000000000 +0300
+++ libapache2-mod-perl2/xs/tables/current/ModPerl/FunctionTable.pm	2008-01-31 11:30:03.000000000 +0200
@@ -1239,6 +1239,20 @@
     ]
   },
   {
+    'return_type' => 'U16 *',
+    'name' => 'modperl_code_attrs',
+    'args' => [
+     {
+        'type' => 'PerlInterpreter *',
+        'name' => 'my_perl'
+      },
+      {
+        'type' => 'CV *',
+        'name' => 'cv'
+      }
+    ]
+  },
+  {
     'return_type' => 'int',
     'name' => 'modperl_config_apply_PerlModule',
     'args' => [
Even more Perl 5.10 fixes, stolen from upstream SVN r620440

--- libapache2-mod-perl2.orig/src/modules/perl/mod_perl.c
+++ libapache2-mod-perl2/src/modules/perl/mod_perl.c
@@ -840,6 +840,7 @@
 
 #ifdef USE_ITHREADS
     APR_REGISTER_OPTIONAL_FN(modperl_interp_unselect);
+    APR_REGISTER_OPTIONAL_FN(modperl_thx_interp_get);
 #endif
 
     /* for <IfDefine MODPERL2> and Apache2->define("MODPERL2") */
--- libapache2-mod-perl2.orig/src/modules/perl/mod_perl.h
+++ libapache2-mod-perl2/src/modules/perl/mod_perl.h
@@ -149,6 +149,7 @@
 #define MODPERL_HOOK_REALLY_REALLY_FIRST (-20)
 
 APR_DECLARE_OPTIONAL_FN(apr_status_t,modperl_interp_unselect,(void *));
+APR_DECLARE_OPTIONAL_FN(modperl_interp_t *,modperl_thx_interp_get,(PerlInterpreter *));
 
 /*
  * perl context overriding and restoration is required when
--- libapache2-mod-perl2.orig/src/modules/perl/modperl_interp.c
+++ libapache2-mod-perl2/src/modules/perl/modperl_interp.c
@@ -291,7 +291,7 @@
     MpInterpIN_USE_Off(interp);
     MpInterpPUTBACK_Off(interp);
 
-    MP_THX_INTERP_SET(interp->perl, NULL);
+    modperl_thx_interp_set(interp->perl, NULL);
 
     modperl_tipool_putback_data(mip->tipool, data, interp->num_requests);
 
@@ -506,7 +506,7 @@
     /* set context (THX) for this thread */
     PERL_SET_CONTEXT(interp->perl);
 
-    MP_THX_INTERP_SET(interp->perl, interp);
+    modperl_thx_interp_set(interp->perl, interp);
 
     return interp;
 }
@@ -575,6 +575,24 @@
     }
 }
 
+#define MP_THX_INTERP_KEY "modperl2::thx_interp_key"
+modperl_interp_t *modperl_thx_interp_get(PerlInterpreter *thx)
+{
+    modperl_interp_t *interp;
+    dTHXa(thx);
+    SV **svp = hv_fetch(PL_modglobal, MP_THX_INTERP_KEY, strlen(MP_THX_INTERP_KEY), 0);
+    if (!svp) return;
+    interp = INT2PTR(modperl_interp_t *, SvIV(*svp));
+    return interp;
+}
+
+void modperl_thx_interp_set(PerlInterpreter *thx, modperl_interp_t *interp)
+{
+    dTHXa(thx);
+    hv_store(PL_modglobal, MP_THX_INTERP_KEY, strlen(MP_THX_INTERP_KEY), newSViv(PTR2IV(interp)), 0);
+    return;
+}
+
 #else
 
 void modperl_interp_init(server_rec *s, apr_pool_t *p,
--- libapache2-mod-perl2.orig/xs/APR/Pool/APR__Pool.h
+++ libapache2-mod-perl2/xs/APR/Pool/APR__Pool.h
@@ -42,6 +42,7 @@
 #include "apr_optional.h"
 static
 APR_OPTIONAL_FN_TYPE(modperl_interp_unselect) *modperl_opt_interp_unselect;
+APR_OPTIONAL_FN_TYPE(modperl_thx_interp_get) *modperl_opt_thx_interp_get;
 #endif
 
 #define MP_APR_POOL_SV_HAS_OWNERSHIP(sv) mpxs_pool_is_custom(sv)
@@ -95,8 +96,10 @@
     /* make sure interpreter is not putback into the mip                \
      * until this cleanup has run.                                      \
      */                                                                 \
-    if ((acct->interp = MP_THX_INTERP_GET(aTHX))) {                     \
-        acct->interp->refcnt++;                                         \
+    if (modperl_opt_thx_interp_get) {                                   \
+        if ((acct->interp = modperl_opt_thx_interp_get(aTHX))) {        \
+            acct->interp->refcnt++;                                     \
+        }                                                               \
     }                                                                   \
 } STMT_END
 
@@ -335,8 +338,10 @@
     /* make sure interpreter is not putback into the mip
      * until this cleanup has run.
      */
-    if ((data->interp = MP_THX_INTERP_GET(data->perl))) {
-        data->interp->refcnt++;
+    if (modperl_opt_thx_interp_get) {
+        if ((data->interp = modperl_opt_thx_interp_get(data->perl))) {
+            data->interp->refcnt++;
+        }
     }
 #endif
 
--- libapache2-mod-perl2.orig/xs/tables/current/ModPerl/FunctionTable.pm
+++ libapache2-mod-perl2/xs/tables/current/ModPerl/FunctionTable.pm
@@ -5044,6 +5044,30 @@
     'args' => []
   },
   {
+    'return_type' => 'modperl_interp_t *',
+    'name' => 'modperl_thx_interp_get',
+    'args' => [
+      {
+        'type' => 'PerlInterpreter *',
+        'name' => 'thx',
+      },
+    ],
+  },
+  {
+    'return_type' => 'void',
+    'name' => 'modperl_thx_interp_set',
+    'args' => [
+      {
+        'type' => 'PerlInterpreter *',
+        'name' => 'thx',
+      },
+      {
+        'type' => 'modperl_interp_t *',
+        'name' => 'interp',
+      },
+    ],
+  },
+  {
     'return_type' => 'void',
     'name' => 'modperl_tipool_add',
     'args' => [
--- libapache2-mod-perl2.orig/lib/ModPerl/WrapXS.pm
+++ libapache2-mod-perl2/lib/ModPerl/WrapXS.pm
@@ -597,6 +597,7 @@
 
     if ($module eq 'APR::Pool') {
         print $fh "    modperl_opt_interp_unselect = APR_RETRIEVE_OPTIONAL_FN(modperl_interp_unselect);\n\n";
+        print $fh "    modperl_opt_thx_interp_get  = APR_RETRIEVE_OPTIONAL_FN(modperl_thx_interp_get);\n\n";
     }
 
     close $fh;
--- libapache2-mod-perl2.orig/src/modules/perl/modperl_interp.h
+++ libapache2-mod-perl2/src/modules/perl/modperl_interp.h
@@ -24,46 +24,8 @@
 
 #ifdef USE_ITHREADS
 
-/*
- * HvPMROOT will never be used by Perl with PL_modglobal.
- * so we have stolen it as a quick way to stash the interp
- * pointer.
- *
- * However in 5.9.3 HvPMROOT was completely removed, so we have moved
- * to use another struct member that's hopefully won't be used by
- * anybody else. But if we can find a better place to store the
- * pointer to the current mod_perl interpreter object it'd be a much
- * cleaner solution. of course it must be really fast.
- */
-#ifndef HvPMROOT
-# if PERL_REVISION == 5 && \
-    ((PERL_VERSION == 9 && PERL_SUBVERSION > 4) || \
-    PERL_VERSION > 9)
-#define MP_THX_INTERP_GET(thx)                                  \
-    (modperl_interp_t *) ((XPVMG*)SvANY(*Perl_Imodglobal_ptr(thx)))->xmg_u.xmg_magic
-# else
-#define MP_THX_INTERP_GET(thx)                                  \
-      (modperl_interp_t *) ((XPVMG*)SvANY(*Perl_Imodglobal_ptr(thx)))->xmg_magic
-# endif
-#else
-#define MP_THX_INTERP_GET(thx) \
-    (modperl_interp_t *)HvPMROOT(*Perl_Imodglobal_ptr(thx))
-#endif
-
-#ifndef HvPMROOT
-# if PERL_REVISION == 5 && \
-    ((PERL_VERSION == 9 && PERL_SUBVERSION > 4) || \
-    PERL_VERSION > 9)
-#define MP_THX_INTERP_SET(thx, interp)                          \
-    ((XPVMG*)SvANY(*Perl_Imodglobal_ptr(thx)))->xmg_u.xmg_magic = (MAGIC*)interp
-# else
-#define MP_THX_INTERP_SET(thx, interp)                          \
-    ((XPVMG*)SvANY(*Perl_Imodglobal_ptr(thx)))->xmg_magic = (MAGIC*)interp
-# endif
-#else
-#define MP_THX_INTERP_SET(thx, interp)                          \
-    HvPMROOT(*Perl_Imodglobal_ptr(thx)) = (PMOP*)interp
-#endif
+modperl_interp_t *modperl_thx_interp_get(PerlInterpreter *thx);
+void modperl_thx_interp_set(PerlInterpreter *thx, modperl_interp_t *interp);
 
 const char *modperl_interp_scope_desc(modperl_interp_scope_e scope);
 
Fix the test to work with Perl 5.10 too.
Stolen from upstream SVN r614146.

--- libapache2-mod-perl2.orig/t/modules/apache_status.t
+++ libapache2-mod-perl2/t/modules/apache_status.t
@@ -18,13 +18,9 @@
 {
     my $url = "$base_url";
     my $body = GET_BODY_ASSERT $url;
-    (my $pver = $]) =~ s/00//;
-    $pver =~ s/(\d\.\d)(.*)/"$1." . ($2 ? int($2) : 0)/e;
-    #t_debug $body;
-    t_debug $pver;
-    # expecting: Embedded Perl version v5.8.2 for ...
-    ok $body =~ /$pver/;
-
+    # expecting: Embedded Perl version <b>v5.8.2</b> for ...
+    my $pver = $^V ? sprintf "v%vd", $^V : $];
+    ok t_cmp($body, qr[Embedded Perl version <b>$pver</b> for]);
     # menu_item, part 1
     # expecting: Test Entry
     ok $body =~ /Test Menu Entry/;
Make modperl_thx_interp_get() always return a value, fixing
undefined behaviour that led to a SIGBUS on sparc (#468327).
--- libapache2-mod-perl2.orig/src/modules/perl/modperl_interp.c
+++ libapache2-mod-perl2/src/modules/perl/modperl_interp.c
@@ -581,7 +581,7 @@
     modperl_interp_t *interp;
     dTHXa(thx);
     SV **svp = hv_fetch(PL_modglobal, MP_THX_INTERP_KEY, strlen(MP_THX_INTERP_KEY), 0);
-    if (!svp) return;
+    if (!svp) return NULL;
     interp = INT2PTR(modperl_interp_t *, SvIV(*svp));
     return interp;
 }
